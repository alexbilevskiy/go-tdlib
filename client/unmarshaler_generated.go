// AUTOGENERATED
package client

import (
	"encoding/json"
	"fmt"
)

func UnmarshalAuthenticationCodeType(data json.RawMessage) (AuthenticationCodeType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorAuthenticationCodeTypeTelegramMessage:
		return UnmarshalAuthenticationCodeTypeTelegramMessage(data)

	case ConstructorAuthenticationCodeTypeSms:
		return UnmarshalAuthenticationCodeTypeSms(data)

	case ConstructorAuthenticationCodeTypeSmsWord:
		return UnmarshalAuthenticationCodeTypeSmsWord(data)

	case ConstructorAuthenticationCodeTypeSmsPhrase:
		return UnmarshalAuthenticationCodeTypeSmsPhrase(data)

	case ConstructorAuthenticationCodeTypeCall:
		return UnmarshalAuthenticationCodeTypeCall(data)

	case ConstructorAuthenticationCodeTypeFlashCall:
		return UnmarshalAuthenticationCodeTypeFlashCall(data)

	case ConstructorAuthenticationCodeTypeMissedCall:
		return UnmarshalAuthenticationCodeTypeMissedCall(data)

	case ConstructorAuthenticationCodeTypeFragment:
		return UnmarshalAuthenticationCodeTypeFragment(data)

	case ConstructorAuthenticationCodeTypeFirebaseAndroid:
		return UnmarshalAuthenticationCodeTypeFirebaseAndroid(data)

	case ConstructorAuthenticationCodeTypeFirebaseIos:
		return UnmarshalAuthenticationCodeTypeFirebaseIos(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfAuthenticationCodeType(dataList []json.RawMessage) ([]AuthenticationCodeType, error) {
	list := make([]AuthenticationCodeType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalAuthenticationCodeType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalEmailAddressAuthentication(data json.RawMessage) (EmailAddressAuthentication, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorEmailAddressAuthenticationCode:
		return UnmarshalEmailAddressAuthenticationCode(data)

	case ConstructorEmailAddressAuthenticationAppleId:
		return UnmarshalEmailAddressAuthenticationAppleId(data)

	case ConstructorEmailAddressAuthenticationGoogleId:
		return UnmarshalEmailAddressAuthenticationGoogleId(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfEmailAddressAuthentication(dataList []json.RawMessage) ([]EmailAddressAuthentication, error) {
	list := make([]EmailAddressAuthentication, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalEmailAddressAuthentication(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalEmailAddressResetState(data json.RawMessage) (EmailAddressResetState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorEmailAddressResetStateAvailable:
		return UnmarshalEmailAddressResetStateAvailable(data)

	case ConstructorEmailAddressResetStatePending:
		return UnmarshalEmailAddressResetStatePending(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfEmailAddressResetState(dataList []json.RawMessage) ([]EmailAddressResetState, error) {
	list := make([]EmailAddressResetState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalEmailAddressResetState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalAuthorizationState(data json.RawMessage) (AuthorizationState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorAuthorizationStateWaitTdlibParameters:
		return UnmarshalAuthorizationStateWaitTdlibParameters(data)

	case ConstructorAuthorizationStateWaitPhoneNumber:
		return UnmarshalAuthorizationStateWaitPhoneNumber(data)

	case ConstructorAuthorizationStateWaitPremiumPurchase:
		return UnmarshalAuthorizationStateWaitPremiumPurchase(data)

	case ConstructorAuthorizationStateWaitEmailAddress:
		return UnmarshalAuthorizationStateWaitEmailAddress(data)

	case ConstructorAuthorizationStateWaitEmailCode:
		return UnmarshalAuthorizationStateWaitEmailCode(data)

	case ConstructorAuthorizationStateWaitCode:
		return UnmarshalAuthorizationStateWaitCode(data)

	case ConstructorAuthorizationStateWaitOtherDeviceConfirmation:
		return UnmarshalAuthorizationStateWaitOtherDeviceConfirmation(data)

	case ConstructorAuthorizationStateWaitRegistration:
		return UnmarshalAuthorizationStateWaitRegistration(data)

	case ConstructorAuthorizationStateWaitPassword:
		return UnmarshalAuthorizationStateWaitPassword(data)

	case ConstructorAuthorizationStateReady:
		return UnmarshalAuthorizationStateReady(data)

	case ConstructorAuthorizationStateLoggingOut:
		return UnmarshalAuthorizationStateLoggingOut(data)

	case ConstructorAuthorizationStateClosing:
		return UnmarshalAuthorizationStateClosing(data)

	case ConstructorAuthorizationStateClosed:
		return UnmarshalAuthorizationStateClosed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfAuthorizationState(dataList []json.RawMessage) ([]AuthorizationState, error) {
	list := make([]AuthorizationState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalAuthorizationState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalFirebaseDeviceVerificationParameters(data json.RawMessage) (FirebaseDeviceVerificationParameters, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorFirebaseDeviceVerificationParametersSafetyNet:
		return UnmarshalFirebaseDeviceVerificationParametersSafetyNet(data)

	case ConstructorFirebaseDeviceVerificationParametersPlayIntegrity:
		return UnmarshalFirebaseDeviceVerificationParametersPlayIntegrity(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfFirebaseDeviceVerificationParameters(dataList []json.RawMessage) ([]FirebaseDeviceVerificationParameters, error) {
	list := make([]FirebaseDeviceVerificationParameters, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalFirebaseDeviceVerificationParameters(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputFile(data json.RawMessage) (InputFile, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputFileId:
		return UnmarshalInputFileId(data)

	case ConstructorInputFileRemote:
		return UnmarshalInputFileRemote(data)

	case ConstructorInputFileLocal:
		return UnmarshalInputFileLocal(data)

	case ConstructorInputFileGenerated:
		return UnmarshalInputFileGenerated(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputFile(dataList []json.RawMessage) ([]InputFile, error) {
	list := make([]InputFile, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputFile(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalThumbnailFormat(data json.RawMessage) (ThumbnailFormat, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorThumbnailFormatJpeg:
		return UnmarshalThumbnailFormatJpeg(data)

	case ConstructorThumbnailFormatGif:
		return UnmarshalThumbnailFormatGif(data)

	case ConstructorThumbnailFormatMpeg4:
		return UnmarshalThumbnailFormatMpeg4(data)

	case ConstructorThumbnailFormatPng:
		return UnmarshalThumbnailFormatPng(data)

	case ConstructorThumbnailFormatTgs:
		return UnmarshalThumbnailFormatTgs(data)

	case ConstructorThumbnailFormatWebm:
		return UnmarshalThumbnailFormatWebm(data)

	case ConstructorThumbnailFormatWebp:
		return UnmarshalThumbnailFormatWebp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfThumbnailFormat(dataList []json.RawMessage) ([]ThumbnailFormat, error) {
	list := make([]ThumbnailFormat, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalThumbnailFormat(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMaskPoint(data json.RawMessage) (MaskPoint, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMaskPointForehead:
		return UnmarshalMaskPointForehead(data)

	case ConstructorMaskPointEyes:
		return UnmarshalMaskPointEyes(data)

	case ConstructorMaskPointMouth:
		return UnmarshalMaskPointMouth(data)

	case ConstructorMaskPointChin:
		return UnmarshalMaskPointChin(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMaskPoint(dataList []json.RawMessage) ([]MaskPoint, error) {
	list := make([]MaskPoint, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMaskPoint(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStickerFormat(data json.RawMessage) (StickerFormat, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStickerFormatWebp:
		return UnmarshalStickerFormatWebp(data)

	case ConstructorStickerFormatTgs:
		return UnmarshalStickerFormatTgs(data)

	case ConstructorStickerFormatWebm:
		return UnmarshalStickerFormatWebm(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStickerFormat(dataList []json.RawMessage) ([]StickerFormat, error) {
	list := make([]StickerFormat, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStickerFormat(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStickerType(data json.RawMessage) (StickerType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStickerTypeRegular:
		return UnmarshalStickerTypeRegular(data)

	case ConstructorStickerTypeMask:
		return UnmarshalStickerTypeMask(data)

	case ConstructorStickerTypeCustomEmoji:
		return UnmarshalStickerTypeCustomEmoji(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStickerType(dataList []json.RawMessage) ([]StickerType, error) {
	list := make([]StickerType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStickerType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStickerFullType(data json.RawMessage) (StickerFullType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStickerFullTypeRegular:
		return UnmarshalStickerFullTypeRegular(data)

	case ConstructorStickerFullTypeMask:
		return UnmarshalStickerFullTypeMask(data)

	case ConstructorStickerFullTypeCustomEmoji:
		return UnmarshalStickerFullTypeCustomEmoji(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStickerFullType(dataList []json.RawMessage) ([]StickerFullType, error) {
	list := make([]StickerFullType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStickerFullType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPollType(data json.RawMessage) (PollType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPollTypeRegular:
		return UnmarshalPollTypeRegular(data)

	case ConstructorPollTypeQuiz:
		return UnmarshalPollTypeQuiz(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPollType(dataList []json.RawMessage) ([]PollType, error) {
	list := make([]PollType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPollType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalUserType(data json.RawMessage) (UserType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorUserTypeRegular:
		return UnmarshalUserTypeRegular(data)

	case ConstructorUserTypeDeleted:
		return UnmarshalUserTypeDeleted(data)

	case ConstructorUserTypeBot:
		return UnmarshalUserTypeBot(data)

	case ConstructorUserTypeUnknown:
		return UnmarshalUserTypeUnknown(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfUserType(dataList []json.RawMessage) ([]UserType, error) {
	list := make([]UserType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalUserType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBusinessAwayMessageSchedule(data json.RawMessage) (BusinessAwayMessageSchedule, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBusinessAwayMessageScheduleAlways:
		return UnmarshalBusinessAwayMessageScheduleAlways(data)

	case ConstructorBusinessAwayMessageScheduleOutsideOfOpeningHours:
		return UnmarshalBusinessAwayMessageScheduleOutsideOfOpeningHours(data)

	case ConstructorBusinessAwayMessageScheduleCustom:
		return UnmarshalBusinessAwayMessageScheduleCustom(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBusinessAwayMessageSchedule(dataList []json.RawMessage) ([]BusinessAwayMessageSchedule, error) {
	list := make([]BusinessAwayMessageSchedule, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBusinessAwayMessageSchedule(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatPhotoStickerType(data json.RawMessage) (ChatPhotoStickerType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatPhotoStickerTypeRegularOrMask:
		return UnmarshalChatPhotoStickerTypeRegularOrMask(data)

	case ConstructorChatPhotoStickerTypeCustomEmoji:
		return UnmarshalChatPhotoStickerTypeCustomEmoji(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatPhotoStickerType(dataList []json.RawMessage) ([]ChatPhotoStickerType, error) {
	list := make([]ChatPhotoStickerType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatPhotoStickerType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputChatPhoto(data json.RawMessage) (InputChatPhoto, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputChatPhotoPrevious:
		return UnmarshalInputChatPhotoPrevious(data)

	case ConstructorInputChatPhotoStatic:
		return UnmarshalInputChatPhotoStatic(data)

	case ConstructorInputChatPhotoAnimation:
		return UnmarshalInputChatPhotoAnimation(data)

	case ConstructorInputChatPhotoSticker:
		return UnmarshalInputChatPhotoSticker(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputChatPhoto(dataList []json.RawMessage) ([]InputChatPhoto, error) {
	list := make([]InputChatPhoto, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputChatPhoto(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStarSubscriptionType(data json.RawMessage) (StarSubscriptionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStarSubscriptionTypeChannel:
		return UnmarshalStarSubscriptionTypeChannel(data)

	case ConstructorStarSubscriptionTypeBot:
		return UnmarshalStarSubscriptionTypeBot(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStarSubscriptionType(dataList []json.RawMessage) ([]StarSubscriptionType, error) {
	list := make([]StarSubscriptionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStarSubscriptionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalAffiliateType(data json.RawMessage) (AffiliateType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorAffiliateTypeCurrentUser:
		return UnmarshalAffiliateTypeCurrentUser(data)

	case ConstructorAffiliateTypeBot:
		return UnmarshalAffiliateTypeBot(data)

	case ConstructorAffiliateTypeChannel:
		return UnmarshalAffiliateTypeChannel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfAffiliateType(dataList []json.RawMessage) ([]AffiliateType, error) {
	list := make([]AffiliateType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalAffiliateType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalAffiliateProgramSortOrder(data json.RawMessage) (AffiliateProgramSortOrder, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorAffiliateProgramSortOrderProfitability:
		return UnmarshalAffiliateProgramSortOrderProfitability(data)

	case ConstructorAffiliateProgramSortOrderCreationDate:
		return UnmarshalAffiliateProgramSortOrderCreationDate(data)

	case ConstructorAffiliateProgramSortOrderRevenue:
		return UnmarshalAffiliateProgramSortOrderRevenue(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfAffiliateProgramSortOrder(dataList []json.RawMessage) ([]AffiliateProgramSortOrder, error) {
	list := make([]AffiliateProgramSortOrder, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalAffiliateProgramSortOrder(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSentGift(data json.RawMessage) (SentGift, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSentGiftRegular:
		return UnmarshalSentGiftRegular(data)

	case ConstructorSentGiftUpgraded:
		return UnmarshalSentGiftUpgraded(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSentGift(dataList []json.RawMessage) ([]SentGift, error) {
	list := make([]SentGift, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSentGift(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStarTransactionDirection(data json.RawMessage) (StarTransactionDirection, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStarTransactionDirectionIncoming:
		return UnmarshalStarTransactionDirectionIncoming(data)

	case ConstructorStarTransactionDirectionOutgoing:
		return UnmarshalStarTransactionDirectionOutgoing(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStarTransactionDirection(dataList []json.RawMessage) ([]StarTransactionDirection, error) {
	list := make([]StarTransactionDirection, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStarTransactionDirection(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStarTransactionType(data json.RawMessage) (StarTransactionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStarTransactionTypePremiumBotDeposit:
		return UnmarshalStarTransactionTypePremiumBotDeposit(data)

	case ConstructorStarTransactionTypeAppStoreDeposit:
		return UnmarshalStarTransactionTypeAppStoreDeposit(data)

	case ConstructorStarTransactionTypeGooglePlayDeposit:
		return UnmarshalStarTransactionTypeGooglePlayDeposit(data)

	case ConstructorStarTransactionTypeFragmentDeposit:
		return UnmarshalStarTransactionTypeFragmentDeposit(data)

	case ConstructorStarTransactionTypeUserDeposit:
		return UnmarshalStarTransactionTypeUserDeposit(data)

	case ConstructorStarTransactionTypeGiveawayDeposit:
		return UnmarshalStarTransactionTypeGiveawayDeposit(data)

	case ConstructorStarTransactionTypeFragmentWithdrawal:
		return UnmarshalStarTransactionTypeFragmentWithdrawal(data)

	case ConstructorStarTransactionTypeTelegramAdsWithdrawal:
		return UnmarshalStarTransactionTypeTelegramAdsWithdrawal(data)

	case ConstructorStarTransactionTypeTelegramApiUsage:
		return UnmarshalStarTransactionTypeTelegramApiUsage(data)

	case ConstructorStarTransactionTypeBotPaidMediaPurchase:
		return UnmarshalStarTransactionTypeBotPaidMediaPurchase(data)

	case ConstructorStarTransactionTypeBotPaidMediaSale:
		return UnmarshalStarTransactionTypeBotPaidMediaSale(data)

	case ConstructorStarTransactionTypeChannelPaidMediaPurchase:
		return UnmarshalStarTransactionTypeChannelPaidMediaPurchase(data)

	case ConstructorStarTransactionTypeChannelPaidMediaSale:
		return UnmarshalStarTransactionTypeChannelPaidMediaSale(data)

	case ConstructorStarTransactionTypeBotInvoicePurchase:
		return UnmarshalStarTransactionTypeBotInvoicePurchase(data)

	case ConstructorStarTransactionTypeBotInvoiceSale:
		return UnmarshalStarTransactionTypeBotInvoiceSale(data)

	case ConstructorStarTransactionTypeBotSubscriptionPurchase:
		return UnmarshalStarTransactionTypeBotSubscriptionPurchase(data)

	case ConstructorStarTransactionTypeBotSubscriptionSale:
		return UnmarshalStarTransactionTypeBotSubscriptionSale(data)

	case ConstructorStarTransactionTypeChannelSubscriptionPurchase:
		return UnmarshalStarTransactionTypeChannelSubscriptionPurchase(data)

	case ConstructorStarTransactionTypeChannelSubscriptionSale:
		return UnmarshalStarTransactionTypeChannelSubscriptionSale(data)

	case ConstructorStarTransactionTypeGiftPurchase:
		return UnmarshalStarTransactionTypeGiftPurchase(data)

	case ConstructorStarTransactionTypeGiftTransfer:
		return UnmarshalStarTransactionTypeGiftTransfer(data)

	case ConstructorStarTransactionTypeGiftSale:
		return UnmarshalStarTransactionTypeGiftSale(data)

	case ConstructorStarTransactionTypeGiftUpgrade:
		return UnmarshalStarTransactionTypeGiftUpgrade(data)

	case ConstructorStarTransactionTypeChannelPaidReactionSend:
		return UnmarshalStarTransactionTypeChannelPaidReactionSend(data)

	case ConstructorStarTransactionTypeChannelPaidReactionReceive:
		return UnmarshalStarTransactionTypeChannelPaidReactionReceive(data)

	case ConstructorStarTransactionTypeAffiliateProgramCommission:
		return UnmarshalStarTransactionTypeAffiliateProgramCommission(data)

	case ConstructorStarTransactionTypePaidMessageSend:
		return UnmarshalStarTransactionTypePaidMessageSend(data)

	case ConstructorStarTransactionTypePaidMessageReceive:
		return UnmarshalStarTransactionTypePaidMessageReceive(data)

	case ConstructorStarTransactionTypePremiumPurchase:
		return UnmarshalStarTransactionTypePremiumPurchase(data)

	case ConstructorStarTransactionTypeBusinessBotTransferSend:
		return UnmarshalStarTransactionTypeBusinessBotTransferSend(data)

	case ConstructorStarTransactionTypeBusinessBotTransferReceive:
		return UnmarshalStarTransactionTypeBusinessBotTransferReceive(data)

	case ConstructorStarTransactionTypeUnsupported:
		return UnmarshalStarTransactionTypeUnsupported(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStarTransactionType(dataList []json.RawMessage) ([]StarTransactionType, error) {
	list := make([]StarTransactionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStarTransactionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalGiveawayParticipantStatus(data json.RawMessage) (GiveawayParticipantStatus, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorGiveawayParticipantStatusEligible:
		return UnmarshalGiveawayParticipantStatusEligible(data)

	case ConstructorGiveawayParticipantStatusParticipating:
		return UnmarshalGiveawayParticipantStatusParticipating(data)

	case ConstructorGiveawayParticipantStatusAlreadyWasMember:
		return UnmarshalGiveawayParticipantStatusAlreadyWasMember(data)

	case ConstructorGiveawayParticipantStatusAdministrator:
		return UnmarshalGiveawayParticipantStatusAdministrator(data)

	case ConstructorGiveawayParticipantStatusDisallowedCountry:
		return UnmarshalGiveawayParticipantStatusDisallowedCountry(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfGiveawayParticipantStatus(dataList []json.RawMessage) ([]GiveawayParticipantStatus, error) {
	list := make([]GiveawayParticipantStatus, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalGiveawayParticipantStatus(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalGiveawayInfo(data json.RawMessage) (GiveawayInfo, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorGiveawayInfoOngoing:
		return UnmarshalGiveawayInfoOngoing(data)

	case ConstructorGiveawayInfoCompleted:
		return UnmarshalGiveawayInfoCompleted(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfGiveawayInfo(dataList []json.RawMessage) ([]GiveawayInfo, error) {
	list := make([]GiveawayInfo, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalGiveawayInfo(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalGiveawayPrize(data json.RawMessage) (GiveawayPrize, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorGiveawayPrizePremium:
		return UnmarshalGiveawayPrizePremium(data)

	case ConstructorGiveawayPrizeStars:
		return UnmarshalGiveawayPrizeStars(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfGiveawayPrize(dataList []json.RawMessage) ([]GiveawayPrize, error) {
	list := make([]GiveawayPrize, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalGiveawayPrize(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalEmojiStatusType(data json.RawMessage) (EmojiStatusType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorEmojiStatusTypeCustomEmoji:
		return UnmarshalEmojiStatusTypeCustomEmoji(data)

	case ConstructorEmojiStatusTypeUpgradedGift:
		return UnmarshalEmojiStatusTypeUpgradedGift(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfEmojiStatusType(dataList []json.RawMessage) ([]EmojiStatusType, error) {
	list := make([]EmojiStatusType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalEmojiStatusType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatMemberStatus(data json.RawMessage) (ChatMemberStatus, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatMemberStatusCreator:
		return UnmarshalChatMemberStatusCreator(data)

	case ConstructorChatMemberStatusAdministrator:
		return UnmarshalChatMemberStatusAdministrator(data)

	case ConstructorChatMemberStatusMember:
		return UnmarshalChatMemberStatusMember(data)

	case ConstructorChatMemberStatusRestricted:
		return UnmarshalChatMemberStatusRestricted(data)

	case ConstructorChatMemberStatusLeft:
		return UnmarshalChatMemberStatusLeft(data)

	case ConstructorChatMemberStatusBanned:
		return UnmarshalChatMemberStatusBanned(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatMemberStatus(dataList []json.RawMessage) ([]ChatMemberStatus, error) {
	list := make([]ChatMemberStatus, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatMemberStatus(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatMembersFilter(data json.RawMessage) (ChatMembersFilter, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatMembersFilterContacts:
		return UnmarshalChatMembersFilterContacts(data)

	case ConstructorChatMembersFilterAdministrators:
		return UnmarshalChatMembersFilterAdministrators(data)

	case ConstructorChatMembersFilterMembers:
		return UnmarshalChatMembersFilterMembers(data)

	case ConstructorChatMembersFilterMention:
		return UnmarshalChatMembersFilterMention(data)

	case ConstructorChatMembersFilterRestricted:
		return UnmarshalChatMembersFilterRestricted(data)

	case ConstructorChatMembersFilterBanned:
		return UnmarshalChatMembersFilterBanned(data)

	case ConstructorChatMembersFilterBots:
		return UnmarshalChatMembersFilterBots(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatMembersFilter(dataList []json.RawMessage) ([]ChatMembersFilter, error) {
	list := make([]ChatMembersFilter, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatMembersFilter(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSupergroupMembersFilter(data json.RawMessage) (SupergroupMembersFilter, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSupergroupMembersFilterRecent:
		return UnmarshalSupergroupMembersFilterRecent(data)

	case ConstructorSupergroupMembersFilterContacts:
		return UnmarshalSupergroupMembersFilterContacts(data)

	case ConstructorSupergroupMembersFilterAdministrators:
		return UnmarshalSupergroupMembersFilterAdministrators(data)

	case ConstructorSupergroupMembersFilterSearch:
		return UnmarshalSupergroupMembersFilterSearch(data)

	case ConstructorSupergroupMembersFilterRestricted:
		return UnmarshalSupergroupMembersFilterRestricted(data)

	case ConstructorSupergroupMembersFilterBanned:
		return UnmarshalSupergroupMembersFilterBanned(data)

	case ConstructorSupergroupMembersFilterMention:
		return UnmarshalSupergroupMembersFilterMention(data)

	case ConstructorSupergroupMembersFilterBots:
		return UnmarshalSupergroupMembersFilterBots(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSupergroupMembersFilter(dataList []json.RawMessage) ([]SupergroupMembersFilter, error) {
	list := make([]SupergroupMembersFilter, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSupergroupMembersFilter(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInviteLinkChatType(data json.RawMessage) (InviteLinkChatType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInviteLinkChatTypeBasicGroup:
		return UnmarshalInviteLinkChatTypeBasicGroup(data)

	case ConstructorInviteLinkChatTypeSupergroup:
		return UnmarshalInviteLinkChatTypeSupergroup(data)

	case ConstructorInviteLinkChatTypeChannel:
		return UnmarshalInviteLinkChatTypeChannel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInviteLinkChatType(dataList []json.RawMessage) ([]InviteLinkChatType, error) {
	list := make([]InviteLinkChatType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInviteLinkChatType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSecretChatState(data json.RawMessage) (SecretChatState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSecretChatStatePending:
		return UnmarshalSecretChatStatePending(data)

	case ConstructorSecretChatStateReady:
		return UnmarshalSecretChatStateReady(data)

	case ConstructorSecretChatStateClosed:
		return UnmarshalSecretChatStateClosed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSecretChatState(dataList []json.RawMessage) ([]SecretChatState, error) {
	list := make([]SecretChatState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSecretChatState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageSender(data json.RawMessage) (MessageSender, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageSenderUser:
		return UnmarshalMessageSenderUser(data)

	case ConstructorMessageSenderChat:
		return UnmarshalMessageSenderChat(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageSender(dataList []json.RawMessage) ([]MessageSender, error) {
	list := make([]MessageSender, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageSender(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageReadDate(data json.RawMessage) (MessageReadDate, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageReadDateRead:
		return UnmarshalMessageReadDateRead(data)

	case ConstructorMessageReadDateUnread:
		return UnmarshalMessageReadDateUnread(data)

	case ConstructorMessageReadDateTooOld:
		return UnmarshalMessageReadDateTooOld(data)

	case ConstructorMessageReadDateUserPrivacyRestricted:
		return UnmarshalMessageReadDateUserPrivacyRestricted(data)

	case ConstructorMessageReadDateMyPrivacyRestricted:
		return UnmarshalMessageReadDateMyPrivacyRestricted(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageReadDate(dataList []json.RawMessage) ([]MessageReadDate, error) {
	list := make([]MessageReadDate, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageReadDate(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageOrigin(data json.RawMessage) (MessageOrigin, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageOriginUser:
		return UnmarshalMessageOriginUser(data)

	case ConstructorMessageOriginHiddenUser:
		return UnmarshalMessageOriginHiddenUser(data)

	case ConstructorMessageOriginChat:
		return UnmarshalMessageOriginChat(data)

	case ConstructorMessageOriginChannel:
		return UnmarshalMessageOriginChannel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageOrigin(dataList []json.RawMessage) ([]MessageOrigin, error) {
	list := make([]MessageOrigin, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageOrigin(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReactionType(data json.RawMessage) (ReactionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReactionTypeEmoji:
		return UnmarshalReactionTypeEmoji(data)

	case ConstructorReactionTypeCustomEmoji:
		return UnmarshalReactionTypeCustomEmoji(data)

	case ConstructorReactionTypePaid:
		return UnmarshalReactionTypePaid(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReactionType(dataList []json.RawMessage) ([]ReactionType, error) {
	list := make([]ReactionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReactionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPaidReactionType(data json.RawMessage) (PaidReactionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPaidReactionTypeRegular:
		return UnmarshalPaidReactionTypeRegular(data)

	case ConstructorPaidReactionTypeAnonymous:
		return UnmarshalPaidReactionTypeAnonymous(data)

	case ConstructorPaidReactionTypeChat:
		return UnmarshalPaidReactionTypeChat(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPaidReactionType(dataList []json.RawMessage) ([]PaidReactionType, error) {
	list := make([]PaidReactionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPaidReactionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageEffectType(data json.RawMessage) (MessageEffectType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageEffectTypeEmojiReaction:
		return UnmarshalMessageEffectTypeEmojiReaction(data)

	case ConstructorMessageEffectTypePremiumSticker:
		return UnmarshalMessageEffectTypePremiumSticker(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageEffectType(dataList []json.RawMessage) ([]MessageEffectType, error) {
	list := make([]MessageEffectType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageEffectType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageSendingState(data json.RawMessage) (MessageSendingState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageSendingStatePending:
		return UnmarshalMessageSendingStatePending(data)

	case ConstructorMessageSendingStateFailed:
		return UnmarshalMessageSendingStateFailed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageSendingState(dataList []json.RawMessage) ([]MessageSendingState, error) {
	list := make([]MessageSendingState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageSendingState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageReplyTo(data json.RawMessage) (MessageReplyTo, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageReplyToMessage:
		return UnmarshalMessageReplyToMessage(data)

	case ConstructorMessageReplyToStory:
		return UnmarshalMessageReplyToStory(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageReplyTo(dataList []json.RawMessage) ([]MessageReplyTo, error) {
	list := make([]MessageReplyTo, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageReplyTo(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputMessageReplyTo(data json.RawMessage) (InputMessageReplyTo, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputMessageReplyToMessage:
		return UnmarshalInputMessageReplyToMessage(data)

	case ConstructorInputMessageReplyToExternalMessage:
		return UnmarshalInputMessageReplyToExternalMessage(data)

	case ConstructorInputMessageReplyToStory:
		return UnmarshalInputMessageReplyToStory(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputMessageReplyTo(dataList []json.RawMessage) ([]InputMessageReplyTo, error) {
	list := make([]InputMessageReplyTo, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputMessageReplyTo(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageSource(data json.RawMessage) (MessageSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageSourceChatHistory:
		return UnmarshalMessageSourceChatHistory(data)

	case ConstructorMessageSourceMessageThreadHistory:
		return UnmarshalMessageSourceMessageThreadHistory(data)

	case ConstructorMessageSourceForumTopicHistory:
		return UnmarshalMessageSourceForumTopicHistory(data)

	case ConstructorMessageSourceHistoryPreview:
		return UnmarshalMessageSourceHistoryPreview(data)

	case ConstructorMessageSourceChatList:
		return UnmarshalMessageSourceChatList(data)

	case ConstructorMessageSourceSearch:
		return UnmarshalMessageSourceSearch(data)

	case ConstructorMessageSourceChatEventLog:
		return UnmarshalMessageSourceChatEventLog(data)

	case ConstructorMessageSourceNotification:
		return UnmarshalMessageSourceNotification(data)

	case ConstructorMessageSourceScreenshot:
		return UnmarshalMessageSourceScreenshot(data)

	case ConstructorMessageSourceOther:
		return UnmarshalMessageSourceOther(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageSource(dataList []json.RawMessage) ([]MessageSource, error) {
	list := make([]MessageSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReportSponsoredResult(data json.RawMessage) (ReportSponsoredResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReportSponsoredResultOk:
		return UnmarshalReportSponsoredResultOk(data)

	case ConstructorReportSponsoredResultFailed:
		return UnmarshalReportSponsoredResultFailed(data)

	case ConstructorReportSponsoredResultOptionRequired:
		return UnmarshalReportSponsoredResultOptionRequired(data)

	case ConstructorReportSponsoredResultAdsHidden:
		return UnmarshalReportSponsoredResultAdsHidden(data)

	case ConstructorReportSponsoredResultPremiumRequired:
		return UnmarshalReportSponsoredResultPremiumRequired(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReportSponsoredResult(dataList []json.RawMessage) ([]ReportSponsoredResult, error) {
	list := make([]ReportSponsoredResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReportSponsoredResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalNotificationSettingsScope(data json.RawMessage) (NotificationSettingsScope, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorNotificationSettingsScopePrivateChats:
		return UnmarshalNotificationSettingsScopePrivateChats(data)

	case ConstructorNotificationSettingsScopeGroupChats:
		return UnmarshalNotificationSettingsScopeGroupChats(data)

	case ConstructorNotificationSettingsScopeChannelChats:
		return UnmarshalNotificationSettingsScopeChannelChats(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfNotificationSettingsScope(dataList []json.RawMessage) ([]NotificationSettingsScope, error) {
	list := make([]NotificationSettingsScope, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalNotificationSettingsScope(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReactionNotificationSource(data json.RawMessage) (ReactionNotificationSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReactionNotificationSourceNone:
		return UnmarshalReactionNotificationSourceNone(data)

	case ConstructorReactionNotificationSourceContacts:
		return UnmarshalReactionNotificationSourceContacts(data)

	case ConstructorReactionNotificationSourceAll:
		return UnmarshalReactionNotificationSourceAll(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReactionNotificationSource(dataList []json.RawMessage) ([]ReactionNotificationSource, error) {
	list := make([]ReactionNotificationSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReactionNotificationSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatType(data json.RawMessage) (ChatType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatTypePrivate:
		return UnmarshalChatTypePrivate(data)

	case ConstructorChatTypeBasicGroup:
		return UnmarshalChatTypeBasicGroup(data)

	case ConstructorChatTypeSupergroup:
		return UnmarshalChatTypeSupergroup(data)

	case ConstructorChatTypeSecret:
		return UnmarshalChatTypeSecret(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatType(dataList []json.RawMessage) ([]ChatType, error) {
	list := make([]ChatType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatList(data json.RawMessage) (ChatList, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatListMain:
		return UnmarshalChatListMain(data)

	case ConstructorChatListArchive:
		return UnmarshalChatListArchive(data)

	case ConstructorChatListFolder:
		return UnmarshalChatListFolder(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatList(dataList []json.RawMessage) ([]ChatList, error) {
	list := make([]ChatList, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatList(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatSource(data json.RawMessage) (ChatSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatSourceMtprotoProxy:
		return UnmarshalChatSourceMtprotoProxy(data)

	case ConstructorChatSourcePublicServiceAnnouncement:
		return UnmarshalChatSourcePublicServiceAnnouncement(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatSource(dataList []json.RawMessage) ([]ChatSource, error) {
	list := make([]ChatSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatAvailableReactions(data json.RawMessage) (ChatAvailableReactions, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatAvailableReactionsAll:
		return UnmarshalChatAvailableReactionsAll(data)

	case ConstructorChatAvailableReactionsSome:
		return UnmarshalChatAvailableReactionsSome(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatAvailableReactions(dataList []json.RawMessage) ([]ChatAvailableReactions, error) {
	list := make([]ChatAvailableReactions, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatAvailableReactions(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPublicChatType(data json.RawMessage) (PublicChatType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPublicChatTypeHasUsername:
		return UnmarshalPublicChatTypeHasUsername(data)

	case ConstructorPublicChatTypeIsLocationBased:
		return UnmarshalPublicChatTypeIsLocationBased(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPublicChatType(dataList []json.RawMessage) ([]PublicChatType, error) {
	list := make([]PublicChatType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPublicChatType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatActionBar(data json.RawMessage) (ChatActionBar, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatActionBarReportSpam:
		return UnmarshalChatActionBarReportSpam(data)

	case ConstructorChatActionBarInviteMembers:
		return UnmarshalChatActionBarInviteMembers(data)

	case ConstructorChatActionBarReportAddBlock:
		return UnmarshalChatActionBarReportAddBlock(data)

	case ConstructorChatActionBarAddContact:
		return UnmarshalChatActionBarAddContact(data)

	case ConstructorChatActionBarSharePhoneNumber:
		return UnmarshalChatActionBarSharePhoneNumber(data)

	case ConstructorChatActionBarJoinRequest:
		return UnmarshalChatActionBarJoinRequest(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatActionBar(dataList []json.RawMessage) ([]ChatActionBar, error) {
	list := make([]ChatActionBar, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatActionBar(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalKeyboardButtonType(data json.RawMessage) (KeyboardButtonType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorKeyboardButtonTypeText:
		return UnmarshalKeyboardButtonTypeText(data)

	case ConstructorKeyboardButtonTypeRequestPhoneNumber:
		return UnmarshalKeyboardButtonTypeRequestPhoneNumber(data)

	case ConstructorKeyboardButtonTypeRequestLocation:
		return UnmarshalKeyboardButtonTypeRequestLocation(data)

	case ConstructorKeyboardButtonTypeRequestPoll:
		return UnmarshalKeyboardButtonTypeRequestPoll(data)

	case ConstructorKeyboardButtonTypeRequestUsers:
		return UnmarshalKeyboardButtonTypeRequestUsers(data)

	case ConstructorKeyboardButtonTypeRequestChat:
		return UnmarshalKeyboardButtonTypeRequestChat(data)

	case ConstructorKeyboardButtonTypeWebApp:
		return UnmarshalKeyboardButtonTypeWebApp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfKeyboardButtonType(dataList []json.RawMessage) ([]KeyboardButtonType, error) {
	list := make([]KeyboardButtonType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalKeyboardButtonType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInlineKeyboardButtonType(data json.RawMessage) (InlineKeyboardButtonType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInlineKeyboardButtonTypeUrl:
		return UnmarshalInlineKeyboardButtonTypeUrl(data)

	case ConstructorInlineKeyboardButtonTypeLoginUrl:
		return UnmarshalInlineKeyboardButtonTypeLoginUrl(data)

	case ConstructorInlineKeyboardButtonTypeWebApp:
		return UnmarshalInlineKeyboardButtonTypeWebApp(data)

	case ConstructorInlineKeyboardButtonTypeCallback:
		return UnmarshalInlineKeyboardButtonTypeCallback(data)

	case ConstructorInlineKeyboardButtonTypeCallbackWithPassword:
		return UnmarshalInlineKeyboardButtonTypeCallbackWithPassword(data)

	case ConstructorInlineKeyboardButtonTypeCallbackGame:
		return UnmarshalInlineKeyboardButtonTypeCallbackGame(data)

	case ConstructorInlineKeyboardButtonTypeSwitchInline:
		return UnmarshalInlineKeyboardButtonTypeSwitchInline(data)

	case ConstructorInlineKeyboardButtonTypeBuy:
		return UnmarshalInlineKeyboardButtonTypeBuy(data)

	case ConstructorInlineKeyboardButtonTypeUser:
		return UnmarshalInlineKeyboardButtonTypeUser(data)

	case ConstructorInlineKeyboardButtonTypeCopyText:
		return UnmarshalInlineKeyboardButtonTypeCopyText(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInlineKeyboardButtonType(dataList []json.RawMessage) ([]InlineKeyboardButtonType, error) {
	list := make([]InlineKeyboardButtonType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInlineKeyboardButtonType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReplyMarkup(data json.RawMessage) (ReplyMarkup, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReplyMarkupRemoveKeyboard:
		return UnmarshalReplyMarkupRemoveKeyboard(data)

	case ConstructorReplyMarkupForceReply:
		return UnmarshalReplyMarkupForceReply(data)

	case ConstructorReplyMarkupShowKeyboard:
		return UnmarshalReplyMarkupShowKeyboard(data)

	case ConstructorReplyMarkupInlineKeyboard:
		return UnmarshalReplyMarkupInlineKeyboard(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReplyMarkup(dataList []json.RawMessage) ([]ReplyMarkup, error) {
	list := make([]ReplyMarkup, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReplyMarkup(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalLoginUrlInfo(data json.RawMessage) (LoginUrlInfo, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorLoginUrlInfoOpen:
		return UnmarshalLoginUrlInfoOpen(data)

	case ConstructorLoginUrlInfoRequestConfirmation:
		return UnmarshalLoginUrlInfoRequestConfirmation(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfLoginUrlInfo(dataList []json.RawMessage) ([]LoginUrlInfo, error) {
	list := make([]LoginUrlInfo, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalLoginUrlInfo(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalWebAppOpenMode(data json.RawMessage) (WebAppOpenMode, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorWebAppOpenModeCompact:
		return UnmarshalWebAppOpenModeCompact(data)

	case ConstructorWebAppOpenModeFullSize:
		return UnmarshalWebAppOpenModeFullSize(data)

	case ConstructorWebAppOpenModeFullScreen:
		return UnmarshalWebAppOpenModeFullScreen(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfWebAppOpenMode(dataList []json.RawMessage) ([]WebAppOpenMode, error) {
	list := make([]WebAppOpenMode, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalWebAppOpenMode(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSavedMessagesTopicType(data json.RawMessage) (SavedMessagesTopicType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSavedMessagesTopicTypeMyNotes:
		return UnmarshalSavedMessagesTopicTypeMyNotes(data)

	case ConstructorSavedMessagesTopicTypeAuthorHidden:
		return UnmarshalSavedMessagesTopicTypeAuthorHidden(data)

	case ConstructorSavedMessagesTopicTypeSavedFromChat:
		return UnmarshalSavedMessagesTopicTypeSavedFromChat(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSavedMessagesTopicType(dataList []json.RawMessage) ([]SavedMessagesTopicType, error) {
	list := make([]SavedMessagesTopicType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSavedMessagesTopicType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalRichText(data json.RawMessage) (RichText, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorRichTextPlain:
		return UnmarshalRichTextPlain(data)

	case ConstructorRichTextBold:
		return UnmarshalRichTextBold(data)

	case ConstructorRichTextItalic:
		return UnmarshalRichTextItalic(data)

	case ConstructorRichTextUnderline:
		return UnmarshalRichTextUnderline(data)

	case ConstructorRichTextStrikethrough:
		return UnmarshalRichTextStrikethrough(data)

	case ConstructorRichTextFixed:
		return UnmarshalRichTextFixed(data)

	case ConstructorRichTextUrl:
		return UnmarshalRichTextUrl(data)

	case ConstructorRichTextEmailAddress:
		return UnmarshalRichTextEmailAddress(data)

	case ConstructorRichTextSubscript:
		return UnmarshalRichTextSubscript(data)

	case ConstructorRichTextSuperscript:
		return UnmarshalRichTextSuperscript(data)

	case ConstructorRichTextMarked:
		return UnmarshalRichTextMarked(data)

	case ConstructorRichTextPhoneNumber:
		return UnmarshalRichTextPhoneNumber(data)

	case ConstructorRichTextIcon:
		return UnmarshalRichTextIcon(data)

	case ConstructorRichTextReference:
		return UnmarshalRichTextReference(data)

	case ConstructorRichTextAnchor:
		return UnmarshalRichTextAnchor(data)

	case ConstructorRichTextAnchorLink:
		return UnmarshalRichTextAnchorLink(data)

	case ConstructorRichTexts:
		return UnmarshalRichTexts(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfRichText(dataList []json.RawMessage) ([]RichText, error) {
	list := make([]RichText, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalRichText(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPageBlockHorizontalAlignment(data json.RawMessage) (PageBlockHorizontalAlignment, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPageBlockHorizontalAlignmentLeft:
		return UnmarshalPageBlockHorizontalAlignmentLeft(data)

	case ConstructorPageBlockHorizontalAlignmentCenter:
		return UnmarshalPageBlockHorizontalAlignmentCenter(data)

	case ConstructorPageBlockHorizontalAlignmentRight:
		return UnmarshalPageBlockHorizontalAlignmentRight(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPageBlockHorizontalAlignment(dataList []json.RawMessage) ([]PageBlockHorizontalAlignment, error) {
	list := make([]PageBlockHorizontalAlignment, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPageBlockHorizontalAlignment(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPageBlockVerticalAlignment(data json.RawMessage) (PageBlockVerticalAlignment, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPageBlockVerticalAlignmentTop:
		return UnmarshalPageBlockVerticalAlignmentTop(data)

	case ConstructorPageBlockVerticalAlignmentMiddle:
		return UnmarshalPageBlockVerticalAlignmentMiddle(data)

	case ConstructorPageBlockVerticalAlignmentBottom:
		return UnmarshalPageBlockVerticalAlignmentBottom(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPageBlockVerticalAlignment(dataList []json.RawMessage) ([]PageBlockVerticalAlignment, error) {
	list := make([]PageBlockVerticalAlignment, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPageBlockVerticalAlignment(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPageBlock(data json.RawMessage) (PageBlock, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPageBlockTitle:
		return UnmarshalPageBlockTitle(data)

	case ConstructorPageBlockSubtitle:
		return UnmarshalPageBlockSubtitle(data)

	case ConstructorPageBlockAuthorDate:
		return UnmarshalPageBlockAuthorDate(data)

	case ConstructorPageBlockHeader:
		return UnmarshalPageBlockHeader(data)

	case ConstructorPageBlockSubheader:
		return UnmarshalPageBlockSubheader(data)

	case ConstructorPageBlockKicker:
		return UnmarshalPageBlockKicker(data)

	case ConstructorPageBlockParagraph:
		return UnmarshalPageBlockParagraph(data)

	case ConstructorPageBlockPreformatted:
		return UnmarshalPageBlockPreformatted(data)

	case ConstructorPageBlockFooter:
		return UnmarshalPageBlockFooter(data)

	case ConstructorPageBlockDivider:
		return UnmarshalPageBlockDivider(data)

	case ConstructorPageBlockAnchor:
		return UnmarshalPageBlockAnchor(data)

	case ConstructorPageBlockList:
		return UnmarshalPageBlockList(data)

	case ConstructorPageBlockBlockQuote:
		return UnmarshalPageBlockBlockQuote(data)

	case ConstructorPageBlockPullQuote:
		return UnmarshalPageBlockPullQuote(data)

	case ConstructorPageBlockAnimation:
		return UnmarshalPageBlockAnimation(data)

	case ConstructorPageBlockAudio:
		return UnmarshalPageBlockAudio(data)

	case ConstructorPageBlockPhoto:
		return UnmarshalPageBlockPhoto(data)

	case ConstructorPageBlockVideo:
		return UnmarshalPageBlockVideo(data)

	case ConstructorPageBlockVoiceNote:
		return UnmarshalPageBlockVoiceNote(data)

	case ConstructorPageBlockCover:
		return UnmarshalPageBlockCover(data)

	case ConstructorPageBlockEmbedded:
		return UnmarshalPageBlockEmbedded(data)

	case ConstructorPageBlockEmbeddedPost:
		return UnmarshalPageBlockEmbeddedPost(data)

	case ConstructorPageBlockCollage:
		return UnmarshalPageBlockCollage(data)

	case ConstructorPageBlockSlideshow:
		return UnmarshalPageBlockSlideshow(data)

	case ConstructorPageBlockChatLink:
		return UnmarshalPageBlockChatLink(data)

	case ConstructorPageBlockTable:
		return UnmarshalPageBlockTable(data)

	case ConstructorPageBlockDetails:
		return UnmarshalPageBlockDetails(data)

	case ConstructorPageBlockRelatedArticles:
		return UnmarshalPageBlockRelatedArticles(data)

	case ConstructorPageBlockMap:
		return UnmarshalPageBlockMap(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPageBlock(dataList []json.RawMessage) ([]PageBlock, error) {
	list := make([]PageBlock, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPageBlock(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalLinkPreviewAlbumMedia(data json.RawMessage) (LinkPreviewAlbumMedia, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorLinkPreviewAlbumMediaPhoto:
		return UnmarshalLinkPreviewAlbumMediaPhoto(data)

	case ConstructorLinkPreviewAlbumMediaVideo:
		return UnmarshalLinkPreviewAlbumMediaVideo(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfLinkPreviewAlbumMedia(dataList []json.RawMessage) ([]LinkPreviewAlbumMedia, error) {
	list := make([]LinkPreviewAlbumMedia, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalLinkPreviewAlbumMedia(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalLinkPreviewType(data json.RawMessage) (LinkPreviewType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorLinkPreviewTypeAlbum:
		return UnmarshalLinkPreviewTypeAlbum(data)

	case ConstructorLinkPreviewTypeAnimation:
		return UnmarshalLinkPreviewTypeAnimation(data)

	case ConstructorLinkPreviewTypeApp:
		return UnmarshalLinkPreviewTypeApp(data)

	case ConstructorLinkPreviewTypeArticle:
		return UnmarshalLinkPreviewTypeArticle(data)

	case ConstructorLinkPreviewTypeAudio:
		return UnmarshalLinkPreviewTypeAudio(data)

	case ConstructorLinkPreviewTypeBackground:
		return UnmarshalLinkPreviewTypeBackground(data)

	case ConstructorLinkPreviewTypeChannelBoost:
		return UnmarshalLinkPreviewTypeChannelBoost(data)

	case ConstructorLinkPreviewTypeChat:
		return UnmarshalLinkPreviewTypeChat(data)

	case ConstructorLinkPreviewTypeDocument:
		return UnmarshalLinkPreviewTypeDocument(data)

	case ConstructorLinkPreviewTypeEmbeddedAnimationPlayer:
		return UnmarshalLinkPreviewTypeEmbeddedAnimationPlayer(data)

	case ConstructorLinkPreviewTypeEmbeddedAudioPlayer:
		return UnmarshalLinkPreviewTypeEmbeddedAudioPlayer(data)

	case ConstructorLinkPreviewTypeEmbeddedVideoPlayer:
		return UnmarshalLinkPreviewTypeEmbeddedVideoPlayer(data)

	case ConstructorLinkPreviewTypeExternalAudio:
		return UnmarshalLinkPreviewTypeExternalAudio(data)

	case ConstructorLinkPreviewTypeExternalVideo:
		return UnmarshalLinkPreviewTypeExternalVideo(data)

	case ConstructorLinkPreviewTypeInvoice:
		return UnmarshalLinkPreviewTypeInvoice(data)

	case ConstructorLinkPreviewTypeMessage:
		return UnmarshalLinkPreviewTypeMessage(data)

	case ConstructorLinkPreviewTypePhoto:
		return UnmarshalLinkPreviewTypePhoto(data)

	case ConstructorLinkPreviewTypePremiumGiftCode:
		return UnmarshalLinkPreviewTypePremiumGiftCode(data)

	case ConstructorLinkPreviewTypeShareableChatFolder:
		return UnmarshalLinkPreviewTypeShareableChatFolder(data)

	case ConstructorLinkPreviewTypeSticker:
		return UnmarshalLinkPreviewTypeSticker(data)

	case ConstructorLinkPreviewTypeStickerSet:
		return UnmarshalLinkPreviewTypeStickerSet(data)

	case ConstructorLinkPreviewTypeStory:
		return UnmarshalLinkPreviewTypeStory(data)

	case ConstructorLinkPreviewTypeSupergroupBoost:
		return UnmarshalLinkPreviewTypeSupergroupBoost(data)

	case ConstructorLinkPreviewTypeTheme:
		return UnmarshalLinkPreviewTypeTheme(data)

	case ConstructorLinkPreviewTypeUnsupported:
		return UnmarshalLinkPreviewTypeUnsupported(data)

	case ConstructorLinkPreviewTypeUpgradedGift:
		return UnmarshalLinkPreviewTypeUpgradedGift(data)

	case ConstructorLinkPreviewTypeUser:
		return UnmarshalLinkPreviewTypeUser(data)

	case ConstructorLinkPreviewTypeVideo:
		return UnmarshalLinkPreviewTypeVideo(data)

	case ConstructorLinkPreviewTypeVideoChat:
		return UnmarshalLinkPreviewTypeVideoChat(data)

	case ConstructorLinkPreviewTypeVideoNote:
		return UnmarshalLinkPreviewTypeVideoNote(data)

	case ConstructorLinkPreviewTypeVoiceNote:
		return UnmarshalLinkPreviewTypeVoiceNote(data)

	case ConstructorLinkPreviewTypeWebApp:
		return UnmarshalLinkPreviewTypeWebApp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfLinkPreviewType(dataList []json.RawMessage) ([]LinkPreviewType, error) {
	list := make([]LinkPreviewType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalLinkPreviewType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCollectibleItemType(data json.RawMessage) (CollectibleItemType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCollectibleItemTypeUsername:
		return UnmarshalCollectibleItemTypeUsername(data)

	case ConstructorCollectibleItemTypePhoneNumber:
		return UnmarshalCollectibleItemTypePhoneNumber(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCollectibleItemType(dataList []json.RawMessage) ([]CollectibleItemType, error) {
	list := make([]CollectibleItemType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCollectibleItemType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputCredentials(data json.RawMessage) (InputCredentials, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputCredentialsSaved:
		return UnmarshalInputCredentialsSaved(data)

	case ConstructorInputCredentialsNew:
		return UnmarshalInputCredentialsNew(data)

	case ConstructorInputCredentialsApplePay:
		return UnmarshalInputCredentialsApplePay(data)

	case ConstructorInputCredentialsGooglePay:
		return UnmarshalInputCredentialsGooglePay(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputCredentials(dataList []json.RawMessage) ([]InputCredentials, error) {
	list := make([]InputCredentials, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputCredentials(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPaymentProvider(data json.RawMessage) (PaymentProvider, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPaymentProviderSmartGlocal:
		return UnmarshalPaymentProviderSmartGlocal(data)

	case ConstructorPaymentProviderStripe:
		return UnmarshalPaymentProviderStripe(data)

	case ConstructorPaymentProviderOther:
		return UnmarshalPaymentProviderOther(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPaymentProvider(dataList []json.RawMessage) ([]PaymentProvider, error) {
	list := make([]PaymentProvider, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPaymentProvider(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPaymentFormType(data json.RawMessage) (PaymentFormType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPaymentFormTypeRegular:
		return UnmarshalPaymentFormTypeRegular(data)

	case ConstructorPaymentFormTypeStars:
		return UnmarshalPaymentFormTypeStars(data)

	case ConstructorPaymentFormTypeStarSubscription:
		return UnmarshalPaymentFormTypeStarSubscription(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPaymentFormType(dataList []json.RawMessage) ([]PaymentFormType, error) {
	list := make([]PaymentFormType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPaymentFormType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPaymentReceiptType(data json.RawMessage) (PaymentReceiptType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPaymentReceiptTypeRegular:
		return UnmarshalPaymentReceiptTypeRegular(data)

	case ConstructorPaymentReceiptTypeStars:
		return UnmarshalPaymentReceiptTypeStars(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPaymentReceiptType(dataList []json.RawMessage) ([]PaymentReceiptType, error) {
	list := make([]PaymentReceiptType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPaymentReceiptType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputInvoice(data json.RawMessage) (InputInvoice, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputInvoiceMessage:
		return UnmarshalInputInvoiceMessage(data)

	case ConstructorInputInvoiceName:
		return UnmarshalInputInvoiceName(data)

	case ConstructorInputInvoiceTelegram:
		return UnmarshalInputInvoiceTelegram(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputInvoice(dataList []json.RawMessage) ([]InputInvoice, error) {
	list := make([]InputInvoice, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputInvoice(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPaidMedia(data json.RawMessage) (PaidMedia, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPaidMediaPreview:
		return UnmarshalPaidMediaPreview(data)

	case ConstructorPaidMediaPhoto:
		return UnmarshalPaidMediaPhoto(data)

	case ConstructorPaidMediaVideo:
		return UnmarshalPaidMediaVideo(data)

	case ConstructorPaidMediaUnsupported:
		return UnmarshalPaidMediaUnsupported(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPaidMedia(dataList []json.RawMessage) ([]PaidMedia, error) {
	list := make([]PaidMedia, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPaidMedia(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPassportElementType(data json.RawMessage) (PassportElementType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPassportElementTypePersonalDetails:
		return UnmarshalPassportElementTypePersonalDetails(data)

	case ConstructorPassportElementTypePassport:
		return UnmarshalPassportElementTypePassport(data)

	case ConstructorPassportElementTypeDriverLicense:
		return UnmarshalPassportElementTypeDriverLicense(data)

	case ConstructorPassportElementTypeIdentityCard:
		return UnmarshalPassportElementTypeIdentityCard(data)

	case ConstructorPassportElementTypeInternalPassport:
		return UnmarshalPassportElementTypeInternalPassport(data)

	case ConstructorPassportElementTypeAddress:
		return UnmarshalPassportElementTypeAddress(data)

	case ConstructorPassportElementTypeUtilityBill:
		return UnmarshalPassportElementTypeUtilityBill(data)

	case ConstructorPassportElementTypeBankStatement:
		return UnmarshalPassportElementTypeBankStatement(data)

	case ConstructorPassportElementTypeRentalAgreement:
		return UnmarshalPassportElementTypeRentalAgreement(data)

	case ConstructorPassportElementTypePassportRegistration:
		return UnmarshalPassportElementTypePassportRegistration(data)

	case ConstructorPassportElementTypeTemporaryRegistration:
		return UnmarshalPassportElementTypeTemporaryRegistration(data)

	case ConstructorPassportElementTypePhoneNumber:
		return UnmarshalPassportElementTypePhoneNumber(data)

	case ConstructorPassportElementTypeEmailAddress:
		return UnmarshalPassportElementTypeEmailAddress(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPassportElementType(dataList []json.RawMessage) ([]PassportElementType, error) {
	list := make([]PassportElementType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPassportElementType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPassportElement(data json.RawMessage) (PassportElement, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPassportElementPersonalDetails:
		return UnmarshalPassportElementPersonalDetails(data)

	case ConstructorPassportElementPassport:
		return UnmarshalPassportElementPassport(data)

	case ConstructorPassportElementDriverLicense:
		return UnmarshalPassportElementDriverLicense(data)

	case ConstructorPassportElementIdentityCard:
		return UnmarshalPassportElementIdentityCard(data)

	case ConstructorPassportElementInternalPassport:
		return UnmarshalPassportElementInternalPassport(data)

	case ConstructorPassportElementAddress:
		return UnmarshalPassportElementAddress(data)

	case ConstructorPassportElementUtilityBill:
		return UnmarshalPassportElementUtilityBill(data)

	case ConstructorPassportElementBankStatement:
		return UnmarshalPassportElementBankStatement(data)

	case ConstructorPassportElementRentalAgreement:
		return UnmarshalPassportElementRentalAgreement(data)

	case ConstructorPassportElementPassportRegistration:
		return UnmarshalPassportElementPassportRegistration(data)

	case ConstructorPassportElementTemporaryRegistration:
		return UnmarshalPassportElementTemporaryRegistration(data)

	case ConstructorPassportElementPhoneNumber:
		return UnmarshalPassportElementPhoneNumber(data)

	case ConstructorPassportElementEmailAddress:
		return UnmarshalPassportElementEmailAddress(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPassportElement(dataList []json.RawMessage) ([]PassportElement, error) {
	list := make([]PassportElement, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPassportElement(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputPassportElement(data json.RawMessage) (InputPassportElement, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputPassportElementPersonalDetails:
		return UnmarshalInputPassportElementPersonalDetails(data)

	case ConstructorInputPassportElementPassport:
		return UnmarshalInputPassportElementPassport(data)

	case ConstructorInputPassportElementDriverLicense:
		return UnmarshalInputPassportElementDriverLicense(data)

	case ConstructorInputPassportElementIdentityCard:
		return UnmarshalInputPassportElementIdentityCard(data)

	case ConstructorInputPassportElementInternalPassport:
		return UnmarshalInputPassportElementInternalPassport(data)

	case ConstructorInputPassportElementAddress:
		return UnmarshalInputPassportElementAddress(data)

	case ConstructorInputPassportElementUtilityBill:
		return UnmarshalInputPassportElementUtilityBill(data)

	case ConstructorInputPassportElementBankStatement:
		return UnmarshalInputPassportElementBankStatement(data)

	case ConstructorInputPassportElementRentalAgreement:
		return UnmarshalInputPassportElementRentalAgreement(data)

	case ConstructorInputPassportElementPassportRegistration:
		return UnmarshalInputPassportElementPassportRegistration(data)

	case ConstructorInputPassportElementTemporaryRegistration:
		return UnmarshalInputPassportElementTemporaryRegistration(data)

	case ConstructorInputPassportElementPhoneNumber:
		return UnmarshalInputPassportElementPhoneNumber(data)

	case ConstructorInputPassportElementEmailAddress:
		return UnmarshalInputPassportElementEmailAddress(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputPassportElement(dataList []json.RawMessage) ([]InputPassportElement, error) {
	list := make([]InputPassportElement, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputPassportElement(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPassportElementErrorSource(data json.RawMessage) (PassportElementErrorSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPassportElementErrorSourceUnspecified:
		return UnmarshalPassportElementErrorSourceUnspecified(data)

	case ConstructorPassportElementErrorSourceDataField:
		return UnmarshalPassportElementErrorSourceDataField(data)

	case ConstructorPassportElementErrorSourceFrontSide:
		return UnmarshalPassportElementErrorSourceFrontSide(data)

	case ConstructorPassportElementErrorSourceReverseSide:
		return UnmarshalPassportElementErrorSourceReverseSide(data)

	case ConstructorPassportElementErrorSourceSelfie:
		return UnmarshalPassportElementErrorSourceSelfie(data)

	case ConstructorPassportElementErrorSourceTranslationFile:
		return UnmarshalPassportElementErrorSourceTranslationFile(data)

	case ConstructorPassportElementErrorSourceTranslationFiles:
		return UnmarshalPassportElementErrorSourceTranslationFiles(data)

	case ConstructorPassportElementErrorSourceFile:
		return UnmarshalPassportElementErrorSourceFile(data)

	case ConstructorPassportElementErrorSourceFiles:
		return UnmarshalPassportElementErrorSourceFiles(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPassportElementErrorSource(dataList []json.RawMessage) ([]PassportElementErrorSource, error) {
	list := make([]PassportElementErrorSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPassportElementErrorSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputPassportElementErrorSource(data json.RawMessage) (InputPassportElementErrorSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputPassportElementErrorSourceUnspecified:
		return UnmarshalInputPassportElementErrorSourceUnspecified(data)

	case ConstructorInputPassportElementErrorSourceDataField:
		return UnmarshalInputPassportElementErrorSourceDataField(data)

	case ConstructorInputPassportElementErrorSourceFrontSide:
		return UnmarshalInputPassportElementErrorSourceFrontSide(data)

	case ConstructorInputPassportElementErrorSourceReverseSide:
		return UnmarshalInputPassportElementErrorSourceReverseSide(data)

	case ConstructorInputPassportElementErrorSourceSelfie:
		return UnmarshalInputPassportElementErrorSourceSelfie(data)

	case ConstructorInputPassportElementErrorSourceTranslationFile:
		return UnmarshalInputPassportElementErrorSourceTranslationFile(data)

	case ConstructorInputPassportElementErrorSourceTranslationFiles:
		return UnmarshalInputPassportElementErrorSourceTranslationFiles(data)

	case ConstructorInputPassportElementErrorSourceFile:
		return UnmarshalInputPassportElementErrorSourceFile(data)

	case ConstructorInputPassportElementErrorSourceFiles:
		return UnmarshalInputPassportElementErrorSourceFiles(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputPassportElementErrorSource(dataList []json.RawMessage) ([]InputPassportElementErrorSource, error) {
	list := make([]InputPassportElementErrorSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputPassportElementErrorSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageContent(data json.RawMessage) (MessageContent, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageText:
		return UnmarshalMessageText(data)

	case ConstructorMessageAnimation:
		return UnmarshalMessageAnimation(data)

	case ConstructorMessageAudio:
		return UnmarshalMessageAudio(data)

	case ConstructorMessageDocument:
		return UnmarshalMessageDocument(data)

	case ConstructorMessagePaidMedia:
		return UnmarshalMessagePaidMedia(data)

	case ConstructorMessagePhoto:
		return UnmarshalMessagePhoto(data)

	case ConstructorMessageSticker:
		return UnmarshalMessageSticker(data)

	case ConstructorMessageVideo:
		return UnmarshalMessageVideo(data)

	case ConstructorMessageVideoNote:
		return UnmarshalMessageVideoNote(data)

	case ConstructorMessageVoiceNote:
		return UnmarshalMessageVoiceNote(data)

	case ConstructorMessageExpiredPhoto:
		return UnmarshalMessageExpiredPhoto(data)

	case ConstructorMessageExpiredVideo:
		return UnmarshalMessageExpiredVideo(data)

	case ConstructorMessageExpiredVideoNote:
		return UnmarshalMessageExpiredVideoNote(data)

	case ConstructorMessageExpiredVoiceNote:
		return UnmarshalMessageExpiredVoiceNote(data)

	case ConstructorMessageLocation:
		return UnmarshalMessageLocation(data)

	case ConstructorMessageVenue:
		return UnmarshalMessageVenue(data)

	case ConstructorMessageContact:
		return UnmarshalMessageContact(data)

	case ConstructorMessageAnimatedEmoji:
		return UnmarshalMessageAnimatedEmoji(data)

	case ConstructorMessageDice:
		return UnmarshalMessageDice(data)

	case ConstructorMessageGame:
		return UnmarshalMessageGame(data)

	case ConstructorMessagePoll:
		return UnmarshalMessagePoll(data)

	case ConstructorMessageStory:
		return UnmarshalMessageStory(data)

	case ConstructorMessageInvoice:
		return UnmarshalMessageInvoice(data)

	case ConstructorMessageCall:
		return UnmarshalMessageCall(data)

	case ConstructorMessageVideoChatScheduled:
		return UnmarshalMessageVideoChatScheduled(data)

	case ConstructorMessageVideoChatStarted:
		return UnmarshalMessageVideoChatStarted(data)

	case ConstructorMessageVideoChatEnded:
		return UnmarshalMessageVideoChatEnded(data)

	case ConstructorMessageInviteVideoChatParticipants:
		return UnmarshalMessageInviteVideoChatParticipants(data)

	case ConstructorMessageBasicGroupChatCreate:
		return UnmarshalMessageBasicGroupChatCreate(data)

	case ConstructorMessageSupergroupChatCreate:
		return UnmarshalMessageSupergroupChatCreate(data)

	case ConstructorMessageChatChangeTitle:
		return UnmarshalMessageChatChangeTitle(data)

	case ConstructorMessageChatChangePhoto:
		return UnmarshalMessageChatChangePhoto(data)

	case ConstructorMessageChatDeletePhoto:
		return UnmarshalMessageChatDeletePhoto(data)

	case ConstructorMessageChatAddMembers:
		return UnmarshalMessageChatAddMembers(data)

	case ConstructorMessageChatJoinByLink:
		return UnmarshalMessageChatJoinByLink(data)

	case ConstructorMessageChatJoinByRequest:
		return UnmarshalMessageChatJoinByRequest(data)

	case ConstructorMessageChatDeleteMember:
		return UnmarshalMessageChatDeleteMember(data)

	case ConstructorMessageChatUpgradeTo:
		return UnmarshalMessageChatUpgradeTo(data)

	case ConstructorMessageChatUpgradeFrom:
		return UnmarshalMessageChatUpgradeFrom(data)

	case ConstructorMessagePinMessage:
		return UnmarshalMessagePinMessage(data)

	case ConstructorMessageScreenshotTaken:
		return UnmarshalMessageScreenshotTaken(data)

	case ConstructorMessageChatSetBackground:
		return UnmarshalMessageChatSetBackground(data)

	case ConstructorMessageChatSetTheme:
		return UnmarshalMessageChatSetTheme(data)

	case ConstructorMessageChatSetMessageAutoDeleteTime:
		return UnmarshalMessageChatSetMessageAutoDeleteTime(data)

	case ConstructorMessageChatBoost:
		return UnmarshalMessageChatBoost(data)

	case ConstructorMessageForumTopicCreated:
		return UnmarshalMessageForumTopicCreated(data)

	case ConstructorMessageForumTopicEdited:
		return UnmarshalMessageForumTopicEdited(data)

	case ConstructorMessageForumTopicIsClosedToggled:
		return UnmarshalMessageForumTopicIsClosedToggled(data)

	case ConstructorMessageForumTopicIsHiddenToggled:
		return UnmarshalMessageForumTopicIsHiddenToggled(data)

	case ConstructorMessageSuggestProfilePhoto:
		return UnmarshalMessageSuggestProfilePhoto(data)

	case ConstructorMessageCustomServiceAction:
		return UnmarshalMessageCustomServiceAction(data)

	case ConstructorMessageGameScore:
		return UnmarshalMessageGameScore(data)

	case ConstructorMessagePaymentSuccessful:
		return UnmarshalMessagePaymentSuccessful(data)

	case ConstructorMessagePaymentSuccessfulBot:
		return UnmarshalMessagePaymentSuccessfulBot(data)

	case ConstructorMessagePaymentRefunded:
		return UnmarshalMessagePaymentRefunded(data)

	case ConstructorMessageGiftedPremium:
		return UnmarshalMessageGiftedPremium(data)

	case ConstructorMessagePremiumGiftCode:
		return UnmarshalMessagePremiumGiftCode(data)

	case ConstructorMessageGiveawayCreated:
		return UnmarshalMessageGiveawayCreated(data)

	case ConstructorMessageGiveaway:
		return UnmarshalMessageGiveaway(data)

	case ConstructorMessageGiveawayCompleted:
		return UnmarshalMessageGiveawayCompleted(data)

	case ConstructorMessageGiveawayWinners:
		return UnmarshalMessageGiveawayWinners(data)

	case ConstructorMessageGiftedStars:
		return UnmarshalMessageGiftedStars(data)

	case ConstructorMessageGiveawayPrizeStars:
		return UnmarshalMessageGiveawayPrizeStars(data)

	case ConstructorMessageGift:
		return UnmarshalMessageGift(data)

	case ConstructorMessageUpgradedGift:
		return UnmarshalMessageUpgradedGift(data)

	case ConstructorMessageRefundedUpgradedGift:
		return UnmarshalMessageRefundedUpgradedGift(data)

	case ConstructorMessagePaidMessagesRefunded:
		return UnmarshalMessagePaidMessagesRefunded(data)

	case ConstructorMessagePaidMessagePriceChanged:
		return UnmarshalMessagePaidMessagePriceChanged(data)

	case ConstructorMessageContactRegistered:
		return UnmarshalMessageContactRegistered(data)

	case ConstructorMessageUsersShared:
		return UnmarshalMessageUsersShared(data)

	case ConstructorMessageChatShared:
		return UnmarshalMessageChatShared(data)

	case ConstructorMessageBotWriteAccessAllowed:
		return UnmarshalMessageBotWriteAccessAllowed(data)

	case ConstructorMessageWebAppDataSent:
		return UnmarshalMessageWebAppDataSent(data)

	case ConstructorMessageWebAppDataReceived:
		return UnmarshalMessageWebAppDataReceived(data)

	case ConstructorMessagePassportDataSent:
		return UnmarshalMessagePassportDataSent(data)

	case ConstructorMessagePassportDataReceived:
		return UnmarshalMessagePassportDataReceived(data)

	case ConstructorMessageProximityAlertTriggered:
		return UnmarshalMessageProximityAlertTriggered(data)

	case ConstructorMessageUnsupported:
		return UnmarshalMessageUnsupported(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageContent(dataList []json.RawMessage) ([]MessageContent, error) {
	list := make([]MessageContent, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageContent(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalTextEntityType(data json.RawMessage) (TextEntityType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorTextEntityTypeMention:
		return UnmarshalTextEntityTypeMention(data)

	case ConstructorTextEntityTypeHashtag:
		return UnmarshalTextEntityTypeHashtag(data)

	case ConstructorTextEntityTypeCashtag:
		return UnmarshalTextEntityTypeCashtag(data)

	case ConstructorTextEntityTypeBotCommand:
		return UnmarshalTextEntityTypeBotCommand(data)

	case ConstructorTextEntityTypeUrl:
		return UnmarshalTextEntityTypeUrl(data)

	case ConstructorTextEntityTypeEmailAddress:
		return UnmarshalTextEntityTypeEmailAddress(data)

	case ConstructorTextEntityTypePhoneNumber:
		return UnmarshalTextEntityTypePhoneNumber(data)

	case ConstructorTextEntityTypeBankCardNumber:
		return UnmarshalTextEntityTypeBankCardNumber(data)

	case ConstructorTextEntityTypeBold:
		return UnmarshalTextEntityTypeBold(data)

	case ConstructorTextEntityTypeItalic:
		return UnmarshalTextEntityTypeItalic(data)

	case ConstructorTextEntityTypeUnderline:
		return UnmarshalTextEntityTypeUnderline(data)

	case ConstructorTextEntityTypeStrikethrough:
		return UnmarshalTextEntityTypeStrikethrough(data)

	case ConstructorTextEntityTypeSpoiler:
		return UnmarshalTextEntityTypeSpoiler(data)

	case ConstructorTextEntityTypeCode:
		return UnmarshalTextEntityTypeCode(data)

	case ConstructorTextEntityTypePre:
		return UnmarshalTextEntityTypePre(data)

	case ConstructorTextEntityTypePreCode:
		return UnmarshalTextEntityTypePreCode(data)

	case ConstructorTextEntityTypeBlockQuote:
		return UnmarshalTextEntityTypeBlockQuote(data)

	case ConstructorTextEntityTypeExpandableBlockQuote:
		return UnmarshalTextEntityTypeExpandableBlockQuote(data)

	case ConstructorTextEntityTypeTextUrl:
		return UnmarshalTextEntityTypeTextUrl(data)

	case ConstructorTextEntityTypeMentionName:
		return UnmarshalTextEntityTypeMentionName(data)

	case ConstructorTextEntityTypeCustomEmoji:
		return UnmarshalTextEntityTypeCustomEmoji(data)

	case ConstructorTextEntityTypeMediaTimestamp:
		return UnmarshalTextEntityTypeMediaTimestamp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfTextEntityType(dataList []json.RawMessage) ([]TextEntityType, error) {
	list := make([]TextEntityType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalTextEntityType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputPaidMediaType(data json.RawMessage) (InputPaidMediaType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputPaidMediaTypePhoto:
		return UnmarshalInputPaidMediaTypePhoto(data)

	case ConstructorInputPaidMediaTypeVideo:
		return UnmarshalInputPaidMediaTypeVideo(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputPaidMediaType(dataList []json.RawMessage) ([]InputPaidMediaType, error) {
	list := make([]InputPaidMediaType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputPaidMediaType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageSchedulingState(data json.RawMessage) (MessageSchedulingState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageSchedulingStateSendAtDate:
		return UnmarshalMessageSchedulingStateSendAtDate(data)

	case ConstructorMessageSchedulingStateSendWhenOnline:
		return UnmarshalMessageSchedulingStateSendWhenOnline(data)

	case ConstructorMessageSchedulingStateSendWhenVideoProcessed:
		return UnmarshalMessageSchedulingStateSendWhenVideoProcessed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageSchedulingState(dataList []json.RawMessage) ([]MessageSchedulingState, error) {
	list := make([]MessageSchedulingState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageSchedulingState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageSelfDestructType(data json.RawMessage) (MessageSelfDestructType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageSelfDestructTypeTimer:
		return UnmarshalMessageSelfDestructTypeTimer(data)

	case ConstructorMessageSelfDestructTypeImmediately:
		return UnmarshalMessageSelfDestructTypeImmediately(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageSelfDestructType(dataList []json.RawMessage) ([]MessageSelfDestructType, error) {
	list := make([]MessageSelfDestructType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageSelfDestructType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputMessageContent(data json.RawMessage) (InputMessageContent, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputMessageText:
		return UnmarshalInputMessageText(data)

	case ConstructorInputMessageAnimation:
		return UnmarshalInputMessageAnimation(data)

	case ConstructorInputMessageAudio:
		return UnmarshalInputMessageAudio(data)

	case ConstructorInputMessageDocument:
		return UnmarshalInputMessageDocument(data)

	case ConstructorInputMessagePaidMedia:
		return UnmarshalInputMessagePaidMedia(data)

	case ConstructorInputMessagePhoto:
		return UnmarshalInputMessagePhoto(data)

	case ConstructorInputMessageSticker:
		return UnmarshalInputMessageSticker(data)

	case ConstructorInputMessageVideo:
		return UnmarshalInputMessageVideo(data)

	case ConstructorInputMessageVideoNote:
		return UnmarshalInputMessageVideoNote(data)

	case ConstructorInputMessageVoiceNote:
		return UnmarshalInputMessageVoiceNote(data)

	case ConstructorInputMessageLocation:
		return UnmarshalInputMessageLocation(data)

	case ConstructorInputMessageVenue:
		return UnmarshalInputMessageVenue(data)

	case ConstructorInputMessageContact:
		return UnmarshalInputMessageContact(data)

	case ConstructorInputMessageDice:
		return UnmarshalInputMessageDice(data)

	case ConstructorInputMessageGame:
		return UnmarshalInputMessageGame(data)

	case ConstructorInputMessageInvoice:
		return UnmarshalInputMessageInvoice(data)

	case ConstructorInputMessagePoll:
		return UnmarshalInputMessagePoll(data)

	case ConstructorInputMessageStory:
		return UnmarshalInputMessageStory(data)

	case ConstructorInputMessageForwarded:
		return UnmarshalInputMessageForwarded(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputMessageContent(dataList []json.RawMessage) ([]InputMessageContent, error) {
	list := make([]InputMessageContent, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputMessageContent(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSearchMessagesFilter(data json.RawMessage) (SearchMessagesFilter, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSearchMessagesFilterEmpty:
		return UnmarshalSearchMessagesFilterEmpty(data)

	case ConstructorSearchMessagesFilterAnimation:
		return UnmarshalSearchMessagesFilterAnimation(data)

	case ConstructorSearchMessagesFilterAudio:
		return UnmarshalSearchMessagesFilterAudio(data)

	case ConstructorSearchMessagesFilterDocument:
		return UnmarshalSearchMessagesFilterDocument(data)

	case ConstructorSearchMessagesFilterPhoto:
		return UnmarshalSearchMessagesFilterPhoto(data)

	case ConstructorSearchMessagesFilterVideo:
		return UnmarshalSearchMessagesFilterVideo(data)

	case ConstructorSearchMessagesFilterVoiceNote:
		return UnmarshalSearchMessagesFilterVoiceNote(data)

	case ConstructorSearchMessagesFilterPhotoAndVideo:
		return UnmarshalSearchMessagesFilterPhotoAndVideo(data)

	case ConstructorSearchMessagesFilterUrl:
		return UnmarshalSearchMessagesFilterUrl(data)

	case ConstructorSearchMessagesFilterChatPhoto:
		return UnmarshalSearchMessagesFilterChatPhoto(data)

	case ConstructorSearchMessagesFilterVideoNote:
		return UnmarshalSearchMessagesFilterVideoNote(data)

	case ConstructorSearchMessagesFilterVoiceAndVideoNote:
		return UnmarshalSearchMessagesFilterVoiceAndVideoNote(data)

	case ConstructorSearchMessagesFilterMention:
		return UnmarshalSearchMessagesFilterMention(data)

	case ConstructorSearchMessagesFilterUnreadMention:
		return UnmarshalSearchMessagesFilterUnreadMention(data)

	case ConstructorSearchMessagesFilterUnreadReaction:
		return UnmarshalSearchMessagesFilterUnreadReaction(data)

	case ConstructorSearchMessagesFilterFailedToSend:
		return UnmarshalSearchMessagesFilterFailedToSend(data)

	case ConstructorSearchMessagesFilterPinned:
		return UnmarshalSearchMessagesFilterPinned(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSearchMessagesFilter(dataList []json.RawMessage) ([]SearchMessagesFilter, error) {
	list := make([]SearchMessagesFilter, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSearchMessagesFilter(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSearchMessagesChatTypeFilter(data json.RawMessage) (SearchMessagesChatTypeFilter, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSearchMessagesChatTypeFilterPrivate:
		return UnmarshalSearchMessagesChatTypeFilterPrivate(data)

	case ConstructorSearchMessagesChatTypeFilterGroup:
		return UnmarshalSearchMessagesChatTypeFilterGroup(data)

	case ConstructorSearchMessagesChatTypeFilterChannel:
		return UnmarshalSearchMessagesChatTypeFilterChannel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSearchMessagesChatTypeFilter(dataList []json.RawMessage) ([]SearchMessagesChatTypeFilter, error) {
	list := make([]SearchMessagesChatTypeFilter, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSearchMessagesChatTypeFilter(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatAction(data json.RawMessage) (ChatAction, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatActionTyping:
		return UnmarshalChatActionTyping(data)

	case ConstructorChatActionRecordingVideo:
		return UnmarshalChatActionRecordingVideo(data)

	case ConstructorChatActionUploadingVideo:
		return UnmarshalChatActionUploadingVideo(data)

	case ConstructorChatActionRecordingVoiceNote:
		return UnmarshalChatActionRecordingVoiceNote(data)

	case ConstructorChatActionUploadingVoiceNote:
		return UnmarshalChatActionUploadingVoiceNote(data)

	case ConstructorChatActionUploadingPhoto:
		return UnmarshalChatActionUploadingPhoto(data)

	case ConstructorChatActionUploadingDocument:
		return UnmarshalChatActionUploadingDocument(data)

	case ConstructorChatActionChoosingSticker:
		return UnmarshalChatActionChoosingSticker(data)

	case ConstructorChatActionChoosingLocation:
		return UnmarshalChatActionChoosingLocation(data)

	case ConstructorChatActionChoosingContact:
		return UnmarshalChatActionChoosingContact(data)

	case ConstructorChatActionStartPlayingGame:
		return UnmarshalChatActionStartPlayingGame(data)

	case ConstructorChatActionRecordingVideoNote:
		return UnmarshalChatActionRecordingVideoNote(data)

	case ConstructorChatActionUploadingVideoNote:
		return UnmarshalChatActionUploadingVideoNote(data)

	case ConstructorChatActionWatchingAnimations:
		return UnmarshalChatActionWatchingAnimations(data)

	case ConstructorChatActionCancel:
		return UnmarshalChatActionCancel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatAction(dataList []json.RawMessage) ([]ChatAction, error) {
	list := make([]ChatAction, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatAction(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalUserStatus(data json.RawMessage) (UserStatus, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorUserStatusEmpty:
		return UnmarshalUserStatusEmpty(data)

	case ConstructorUserStatusOnline:
		return UnmarshalUserStatusOnline(data)

	case ConstructorUserStatusOffline:
		return UnmarshalUserStatusOffline(data)

	case ConstructorUserStatusRecently:
		return UnmarshalUserStatusRecently(data)

	case ConstructorUserStatusLastWeek:
		return UnmarshalUserStatusLastWeek(data)

	case ConstructorUserStatusLastMonth:
		return UnmarshalUserStatusLastMonth(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfUserStatus(dataList []json.RawMessage) ([]UserStatus, error) {
	list := make([]UserStatus, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalUserStatus(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalEmojiCategorySource(data json.RawMessage) (EmojiCategorySource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorEmojiCategorySourceSearch:
		return UnmarshalEmojiCategorySourceSearch(data)

	case ConstructorEmojiCategorySourcePremium:
		return UnmarshalEmojiCategorySourcePremium(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfEmojiCategorySource(dataList []json.RawMessage) ([]EmojiCategorySource, error) {
	list := make([]EmojiCategorySource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalEmojiCategorySource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalEmojiCategoryType(data json.RawMessage) (EmojiCategoryType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorEmojiCategoryTypeDefault:
		return UnmarshalEmojiCategoryTypeDefault(data)

	case ConstructorEmojiCategoryTypeRegularStickers:
		return UnmarshalEmojiCategoryTypeRegularStickers(data)

	case ConstructorEmojiCategoryTypeEmojiStatus:
		return UnmarshalEmojiCategoryTypeEmojiStatus(data)

	case ConstructorEmojiCategoryTypeChatPhoto:
		return UnmarshalEmojiCategoryTypeChatPhoto(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfEmojiCategoryType(dataList []json.RawMessage) ([]EmojiCategoryType, error) {
	list := make([]EmojiCategoryType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalEmojiCategoryType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoryAreaType(data json.RawMessage) (StoryAreaType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoryAreaTypeLocation:
		return UnmarshalStoryAreaTypeLocation(data)

	case ConstructorStoryAreaTypeVenue:
		return UnmarshalStoryAreaTypeVenue(data)

	case ConstructorStoryAreaTypeSuggestedReaction:
		return UnmarshalStoryAreaTypeSuggestedReaction(data)

	case ConstructorStoryAreaTypeMessage:
		return UnmarshalStoryAreaTypeMessage(data)

	case ConstructorStoryAreaTypeLink:
		return UnmarshalStoryAreaTypeLink(data)

	case ConstructorStoryAreaTypeWeather:
		return UnmarshalStoryAreaTypeWeather(data)

	case ConstructorStoryAreaTypeUpgradedGift:
		return UnmarshalStoryAreaTypeUpgradedGift(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoryAreaType(dataList []json.RawMessage) ([]StoryAreaType, error) {
	list := make([]StoryAreaType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoryAreaType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputStoryAreaType(data json.RawMessage) (InputStoryAreaType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputStoryAreaTypeLocation:
		return UnmarshalInputStoryAreaTypeLocation(data)

	case ConstructorInputStoryAreaTypeFoundVenue:
		return UnmarshalInputStoryAreaTypeFoundVenue(data)

	case ConstructorInputStoryAreaTypePreviousVenue:
		return UnmarshalInputStoryAreaTypePreviousVenue(data)

	case ConstructorInputStoryAreaTypeSuggestedReaction:
		return UnmarshalInputStoryAreaTypeSuggestedReaction(data)

	case ConstructorInputStoryAreaTypeMessage:
		return UnmarshalInputStoryAreaTypeMessage(data)

	case ConstructorInputStoryAreaTypeLink:
		return UnmarshalInputStoryAreaTypeLink(data)

	case ConstructorInputStoryAreaTypeWeather:
		return UnmarshalInputStoryAreaTypeWeather(data)

	case ConstructorInputStoryAreaTypeUpgradedGift:
		return UnmarshalInputStoryAreaTypeUpgradedGift(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputStoryAreaType(dataList []json.RawMessage) ([]InputStoryAreaType, error) {
	list := make([]InputStoryAreaType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputStoryAreaType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoryContent(data json.RawMessage) (StoryContent, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoryContentPhoto:
		return UnmarshalStoryContentPhoto(data)

	case ConstructorStoryContentVideo:
		return UnmarshalStoryContentVideo(data)

	case ConstructorStoryContentUnsupported:
		return UnmarshalStoryContentUnsupported(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoryContent(dataList []json.RawMessage) ([]StoryContent, error) {
	list := make([]StoryContent, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoryContent(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputStoryContent(data json.RawMessage) (InputStoryContent, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputStoryContentPhoto:
		return UnmarshalInputStoryContentPhoto(data)

	case ConstructorInputStoryContentVideo:
		return UnmarshalInputStoryContentVideo(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputStoryContent(dataList []json.RawMessage) ([]InputStoryContent, error) {
	list := make([]InputStoryContent, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputStoryContent(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoryList(data json.RawMessage) (StoryList, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoryListMain:
		return UnmarshalStoryListMain(data)

	case ConstructorStoryListArchive:
		return UnmarshalStoryListArchive(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoryList(dataList []json.RawMessage) ([]StoryList, error) {
	list := make([]StoryList, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoryList(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoryOrigin(data json.RawMessage) (StoryOrigin, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoryOriginPublicStory:
		return UnmarshalStoryOriginPublicStory(data)

	case ConstructorStoryOriginHiddenUser:
		return UnmarshalStoryOriginHiddenUser(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoryOrigin(dataList []json.RawMessage) ([]StoryOrigin, error) {
	list := make([]StoryOrigin, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoryOrigin(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoryInteractionType(data json.RawMessage) (StoryInteractionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoryInteractionTypeView:
		return UnmarshalStoryInteractionTypeView(data)

	case ConstructorStoryInteractionTypeForward:
		return UnmarshalStoryInteractionTypeForward(data)

	case ConstructorStoryInteractionTypeRepost:
		return UnmarshalStoryInteractionTypeRepost(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoryInteractionType(dataList []json.RawMessage) ([]StoryInteractionType, error) {
	list := make([]StoryInteractionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoryInteractionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPublicForward(data json.RawMessage) (PublicForward, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPublicForwardMessage:
		return UnmarshalPublicForwardMessage(data)

	case ConstructorPublicForwardStory:
		return UnmarshalPublicForwardStory(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPublicForward(dataList []json.RawMessage) ([]PublicForward, error) {
	list := make([]PublicForward, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPublicForward(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatBoostSource(data json.RawMessage) (ChatBoostSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatBoostSourceGiftCode:
		return UnmarshalChatBoostSourceGiftCode(data)

	case ConstructorChatBoostSourceGiveaway:
		return UnmarshalChatBoostSourceGiveaway(data)

	case ConstructorChatBoostSourcePremium:
		return UnmarshalChatBoostSourcePremium(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatBoostSource(dataList []json.RawMessage) ([]ChatBoostSource, error) {
	list := make([]ChatBoostSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatBoostSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalResendCodeReason(data json.RawMessage) (ResendCodeReason, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorResendCodeReasonUserRequest:
		return UnmarshalResendCodeReasonUserRequest(data)

	case ConstructorResendCodeReasonVerificationFailed:
		return UnmarshalResendCodeReasonVerificationFailed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfResendCodeReason(dataList []json.RawMessage) ([]ResendCodeReason, error) {
	list := make([]ResendCodeReason, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalResendCodeReason(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCallDiscardReason(data json.RawMessage) (CallDiscardReason, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCallDiscardReasonEmpty:
		return UnmarshalCallDiscardReasonEmpty(data)

	case ConstructorCallDiscardReasonMissed:
		return UnmarshalCallDiscardReasonMissed(data)

	case ConstructorCallDiscardReasonDeclined:
		return UnmarshalCallDiscardReasonDeclined(data)

	case ConstructorCallDiscardReasonDisconnected:
		return UnmarshalCallDiscardReasonDisconnected(data)

	case ConstructorCallDiscardReasonHungUp:
		return UnmarshalCallDiscardReasonHungUp(data)

	case ConstructorCallDiscardReasonAllowGroupCall:
		return UnmarshalCallDiscardReasonAllowGroupCall(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCallDiscardReason(dataList []json.RawMessage) ([]CallDiscardReason, error) {
	list := make([]CallDiscardReason, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCallDiscardReason(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCallServerType(data json.RawMessage) (CallServerType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCallServerTypeTelegramReflector:
		return UnmarshalCallServerTypeTelegramReflector(data)

	case ConstructorCallServerTypeWebrtc:
		return UnmarshalCallServerTypeWebrtc(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCallServerType(dataList []json.RawMessage) ([]CallServerType, error) {
	list := make([]CallServerType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCallServerType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCallState(data json.RawMessage) (CallState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCallStatePending:
		return UnmarshalCallStatePending(data)

	case ConstructorCallStateExchangingKeys:
		return UnmarshalCallStateExchangingKeys(data)

	case ConstructorCallStateReady:
		return UnmarshalCallStateReady(data)

	case ConstructorCallStateHangingUp:
		return UnmarshalCallStateHangingUp(data)

	case ConstructorCallStateDiscarded:
		return UnmarshalCallStateDiscarded(data)

	case ConstructorCallStateError:
		return UnmarshalCallStateError(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCallState(dataList []json.RawMessage) ([]CallState, error) {
	list := make([]CallState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCallState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalGroupCallVideoQuality(data json.RawMessage) (GroupCallVideoQuality, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorGroupCallVideoQualityThumbnail:
		return UnmarshalGroupCallVideoQualityThumbnail(data)

	case ConstructorGroupCallVideoQualityMedium:
		return UnmarshalGroupCallVideoQualityMedium(data)

	case ConstructorGroupCallVideoQualityFull:
		return UnmarshalGroupCallVideoQualityFull(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfGroupCallVideoQuality(dataList []json.RawMessage) ([]GroupCallVideoQuality, error) {
	list := make([]GroupCallVideoQuality, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalGroupCallVideoQuality(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCallProblem(data json.RawMessage) (CallProblem, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCallProblemEcho:
		return UnmarshalCallProblemEcho(data)

	case ConstructorCallProblemNoise:
		return UnmarshalCallProblemNoise(data)

	case ConstructorCallProblemInterruptions:
		return UnmarshalCallProblemInterruptions(data)

	case ConstructorCallProblemDistortedSpeech:
		return UnmarshalCallProblemDistortedSpeech(data)

	case ConstructorCallProblemSilentLocal:
		return UnmarshalCallProblemSilentLocal(data)

	case ConstructorCallProblemSilentRemote:
		return UnmarshalCallProblemSilentRemote(data)

	case ConstructorCallProblemDropped:
		return UnmarshalCallProblemDropped(data)

	case ConstructorCallProblemDistortedVideo:
		return UnmarshalCallProblemDistortedVideo(data)

	case ConstructorCallProblemPixelatedVideo:
		return UnmarshalCallProblemPixelatedVideo(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCallProblem(dataList []json.RawMessage) ([]CallProblem, error) {
	list := make([]CallProblem, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCallProblem(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalFirebaseAuthenticationSettings(data json.RawMessage) (FirebaseAuthenticationSettings, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorFirebaseAuthenticationSettingsAndroid:
		return UnmarshalFirebaseAuthenticationSettingsAndroid(data)

	case ConstructorFirebaseAuthenticationSettingsIos:
		return UnmarshalFirebaseAuthenticationSettingsIos(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfFirebaseAuthenticationSettings(dataList []json.RawMessage) ([]FirebaseAuthenticationSettings, error) {
	list := make([]FirebaseAuthenticationSettings, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalFirebaseAuthenticationSettings(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReactionUnavailabilityReason(data json.RawMessage) (ReactionUnavailabilityReason, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReactionUnavailabilityReasonAnonymousAdministrator:
		return UnmarshalReactionUnavailabilityReasonAnonymousAdministrator(data)

	case ConstructorReactionUnavailabilityReasonGuest:
		return UnmarshalReactionUnavailabilityReasonGuest(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReactionUnavailabilityReason(dataList []json.RawMessage) ([]ReactionUnavailabilityReason, error) {
	list := make([]ReactionUnavailabilityReason, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReactionUnavailabilityReason(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalDiceStickers(data json.RawMessage) (DiceStickers, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorDiceStickersRegular:
		return UnmarshalDiceStickersRegular(data)

	case ConstructorDiceStickersSlotMachine:
		return UnmarshalDiceStickersSlotMachine(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfDiceStickers(dataList []json.RawMessage) ([]DiceStickers, error) {
	list := make([]DiceStickers, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalDiceStickers(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSpeechRecognitionResult(data json.RawMessage) (SpeechRecognitionResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSpeechRecognitionResultPending:
		return UnmarshalSpeechRecognitionResultPending(data)

	case ConstructorSpeechRecognitionResultText:
		return UnmarshalSpeechRecognitionResultText(data)

	case ConstructorSpeechRecognitionResultError:
		return UnmarshalSpeechRecognitionResultError(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSpeechRecognitionResult(dataList []json.RawMessage) ([]SpeechRecognitionResult, error) {
	list := make([]SpeechRecognitionResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSpeechRecognitionResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBotWriteAccessAllowReason(data json.RawMessage) (BotWriteAccessAllowReason, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBotWriteAccessAllowReasonConnectedWebsite:
		return UnmarshalBotWriteAccessAllowReasonConnectedWebsite(data)

	case ConstructorBotWriteAccessAllowReasonAddedToAttachmentMenu:
		return UnmarshalBotWriteAccessAllowReasonAddedToAttachmentMenu(data)

	case ConstructorBotWriteAccessAllowReasonLaunchedWebApp:
		return UnmarshalBotWriteAccessAllowReasonLaunchedWebApp(data)

	case ConstructorBotWriteAccessAllowReasonAcceptedRequest:
		return UnmarshalBotWriteAccessAllowReasonAcceptedRequest(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBotWriteAccessAllowReason(dataList []json.RawMessage) ([]BotWriteAccessAllowReason, error) {
	list := make([]BotWriteAccessAllowReason, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBotWriteAccessAllowReason(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalTargetChat(data json.RawMessage) (TargetChat, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorTargetChatCurrent:
		return UnmarshalTargetChatCurrent(data)

	case ConstructorTargetChatChosen:
		return UnmarshalTargetChatChosen(data)

	case ConstructorTargetChatInternalLink:
		return UnmarshalTargetChatInternalLink(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfTargetChat(dataList []json.RawMessage) ([]TargetChat, error) {
	list := make([]TargetChat, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalTargetChat(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputInlineQueryResult(data json.RawMessage) (InputInlineQueryResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputInlineQueryResultAnimation:
		return UnmarshalInputInlineQueryResultAnimation(data)

	case ConstructorInputInlineQueryResultArticle:
		return UnmarshalInputInlineQueryResultArticle(data)

	case ConstructorInputInlineQueryResultAudio:
		return UnmarshalInputInlineQueryResultAudio(data)

	case ConstructorInputInlineQueryResultContact:
		return UnmarshalInputInlineQueryResultContact(data)

	case ConstructorInputInlineQueryResultDocument:
		return UnmarshalInputInlineQueryResultDocument(data)

	case ConstructorInputInlineQueryResultGame:
		return UnmarshalInputInlineQueryResultGame(data)

	case ConstructorInputInlineQueryResultLocation:
		return UnmarshalInputInlineQueryResultLocation(data)

	case ConstructorInputInlineQueryResultPhoto:
		return UnmarshalInputInlineQueryResultPhoto(data)

	case ConstructorInputInlineQueryResultSticker:
		return UnmarshalInputInlineQueryResultSticker(data)

	case ConstructorInputInlineQueryResultVenue:
		return UnmarshalInputInlineQueryResultVenue(data)

	case ConstructorInputInlineQueryResultVideo:
		return UnmarshalInputInlineQueryResultVideo(data)

	case ConstructorInputInlineQueryResultVoiceNote:
		return UnmarshalInputInlineQueryResultVoiceNote(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputInlineQueryResult(dataList []json.RawMessage) ([]InputInlineQueryResult, error) {
	list := make([]InputInlineQueryResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputInlineQueryResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInlineQueryResult(data json.RawMessage) (InlineQueryResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInlineQueryResultArticle:
		return UnmarshalInlineQueryResultArticle(data)

	case ConstructorInlineQueryResultContact:
		return UnmarshalInlineQueryResultContact(data)

	case ConstructorInlineQueryResultLocation:
		return UnmarshalInlineQueryResultLocation(data)

	case ConstructorInlineQueryResultVenue:
		return UnmarshalInlineQueryResultVenue(data)

	case ConstructorInlineQueryResultGame:
		return UnmarshalInlineQueryResultGame(data)

	case ConstructorInlineQueryResultAnimation:
		return UnmarshalInlineQueryResultAnimation(data)

	case ConstructorInlineQueryResultAudio:
		return UnmarshalInlineQueryResultAudio(data)

	case ConstructorInlineQueryResultDocument:
		return UnmarshalInlineQueryResultDocument(data)

	case ConstructorInlineQueryResultPhoto:
		return UnmarshalInlineQueryResultPhoto(data)

	case ConstructorInlineQueryResultSticker:
		return UnmarshalInlineQueryResultSticker(data)

	case ConstructorInlineQueryResultVideo:
		return UnmarshalInlineQueryResultVideo(data)

	case ConstructorInlineQueryResultVoiceNote:
		return UnmarshalInlineQueryResultVoiceNote(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInlineQueryResult(dataList []json.RawMessage) ([]InlineQueryResult, error) {
	list := make([]InlineQueryResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInlineQueryResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInlineQueryResultsButtonType(data json.RawMessage) (InlineQueryResultsButtonType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInlineQueryResultsButtonTypeStartBot:
		return UnmarshalInlineQueryResultsButtonTypeStartBot(data)

	case ConstructorInlineQueryResultsButtonTypeWebApp:
		return UnmarshalInlineQueryResultsButtonTypeWebApp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInlineQueryResultsButtonType(dataList []json.RawMessage) ([]InlineQueryResultsButtonType, error) {
	list := make([]InlineQueryResultsButtonType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInlineQueryResultsButtonType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCallbackQueryPayload(data json.RawMessage) (CallbackQueryPayload, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCallbackQueryPayloadData:
		return UnmarshalCallbackQueryPayloadData(data)

	case ConstructorCallbackQueryPayloadDataWithPassword:
		return UnmarshalCallbackQueryPayloadDataWithPassword(data)

	case ConstructorCallbackQueryPayloadGame:
		return UnmarshalCallbackQueryPayloadGame(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCallbackQueryPayload(dataList []json.RawMessage) ([]CallbackQueryPayload, error) {
	list := make([]CallbackQueryPayload, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCallbackQueryPayload(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatEventAction(data json.RawMessage) (ChatEventAction, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatEventMessageEdited:
		return UnmarshalChatEventMessageEdited(data)

	case ConstructorChatEventMessageDeleted:
		return UnmarshalChatEventMessageDeleted(data)

	case ConstructorChatEventMessagePinned:
		return UnmarshalChatEventMessagePinned(data)

	case ConstructorChatEventMessageUnpinned:
		return UnmarshalChatEventMessageUnpinned(data)

	case ConstructorChatEventPollStopped:
		return UnmarshalChatEventPollStopped(data)

	case ConstructorChatEventMemberJoined:
		return UnmarshalChatEventMemberJoined(data)

	case ConstructorChatEventMemberJoinedByInviteLink:
		return UnmarshalChatEventMemberJoinedByInviteLink(data)

	case ConstructorChatEventMemberJoinedByRequest:
		return UnmarshalChatEventMemberJoinedByRequest(data)

	case ConstructorChatEventMemberInvited:
		return UnmarshalChatEventMemberInvited(data)

	case ConstructorChatEventMemberLeft:
		return UnmarshalChatEventMemberLeft(data)

	case ConstructorChatEventMemberPromoted:
		return UnmarshalChatEventMemberPromoted(data)

	case ConstructorChatEventMemberRestricted:
		return UnmarshalChatEventMemberRestricted(data)

	case ConstructorChatEventMemberSubscriptionExtended:
		return UnmarshalChatEventMemberSubscriptionExtended(data)

	case ConstructorChatEventAvailableReactionsChanged:
		return UnmarshalChatEventAvailableReactionsChanged(data)

	case ConstructorChatEventBackgroundChanged:
		return UnmarshalChatEventBackgroundChanged(data)

	case ConstructorChatEventDescriptionChanged:
		return UnmarshalChatEventDescriptionChanged(data)

	case ConstructorChatEventEmojiStatusChanged:
		return UnmarshalChatEventEmojiStatusChanged(data)

	case ConstructorChatEventLinkedChatChanged:
		return UnmarshalChatEventLinkedChatChanged(data)

	case ConstructorChatEventLocationChanged:
		return UnmarshalChatEventLocationChanged(data)

	case ConstructorChatEventMessageAutoDeleteTimeChanged:
		return UnmarshalChatEventMessageAutoDeleteTimeChanged(data)

	case ConstructorChatEventPermissionsChanged:
		return UnmarshalChatEventPermissionsChanged(data)

	case ConstructorChatEventPhotoChanged:
		return UnmarshalChatEventPhotoChanged(data)

	case ConstructorChatEventSlowModeDelayChanged:
		return UnmarshalChatEventSlowModeDelayChanged(data)

	case ConstructorChatEventStickerSetChanged:
		return UnmarshalChatEventStickerSetChanged(data)

	case ConstructorChatEventCustomEmojiStickerSetChanged:
		return UnmarshalChatEventCustomEmojiStickerSetChanged(data)

	case ConstructorChatEventTitleChanged:
		return UnmarshalChatEventTitleChanged(data)

	case ConstructorChatEventUsernameChanged:
		return UnmarshalChatEventUsernameChanged(data)

	case ConstructorChatEventActiveUsernamesChanged:
		return UnmarshalChatEventActiveUsernamesChanged(data)

	case ConstructorChatEventAccentColorChanged:
		return UnmarshalChatEventAccentColorChanged(data)

	case ConstructorChatEventProfileAccentColorChanged:
		return UnmarshalChatEventProfileAccentColorChanged(data)

	case ConstructorChatEventHasProtectedContentToggled:
		return UnmarshalChatEventHasProtectedContentToggled(data)

	case ConstructorChatEventInvitesToggled:
		return UnmarshalChatEventInvitesToggled(data)

	case ConstructorChatEventIsAllHistoryAvailableToggled:
		return UnmarshalChatEventIsAllHistoryAvailableToggled(data)

	case ConstructorChatEventHasAggressiveAntiSpamEnabledToggled:
		return UnmarshalChatEventHasAggressiveAntiSpamEnabledToggled(data)

	case ConstructorChatEventSignMessagesToggled:
		return UnmarshalChatEventSignMessagesToggled(data)

	case ConstructorChatEventShowMessageSenderToggled:
		return UnmarshalChatEventShowMessageSenderToggled(data)

	case ConstructorChatEventInviteLinkEdited:
		return UnmarshalChatEventInviteLinkEdited(data)

	case ConstructorChatEventInviteLinkRevoked:
		return UnmarshalChatEventInviteLinkRevoked(data)

	case ConstructorChatEventInviteLinkDeleted:
		return UnmarshalChatEventInviteLinkDeleted(data)

	case ConstructorChatEventVideoChatCreated:
		return UnmarshalChatEventVideoChatCreated(data)

	case ConstructorChatEventVideoChatEnded:
		return UnmarshalChatEventVideoChatEnded(data)

	case ConstructorChatEventVideoChatMuteNewParticipantsToggled:
		return UnmarshalChatEventVideoChatMuteNewParticipantsToggled(data)

	case ConstructorChatEventVideoChatParticipantIsMutedToggled:
		return UnmarshalChatEventVideoChatParticipantIsMutedToggled(data)

	case ConstructorChatEventVideoChatParticipantVolumeLevelChanged:
		return UnmarshalChatEventVideoChatParticipantVolumeLevelChanged(data)

	case ConstructorChatEventIsForumToggled:
		return UnmarshalChatEventIsForumToggled(data)

	case ConstructorChatEventForumTopicCreated:
		return UnmarshalChatEventForumTopicCreated(data)

	case ConstructorChatEventForumTopicEdited:
		return UnmarshalChatEventForumTopicEdited(data)

	case ConstructorChatEventForumTopicToggleIsClosed:
		return UnmarshalChatEventForumTopicToggleIsClosed(data)

	case ConstructorChatEventForumTopicToggleIsHidden:
		return UnmarshalChatEventForumTopicToggleIsHidden(data)

	case ConstructorChatEventForumTopicDeleted:
		return UnmarshalChatEventForumTopicDeleted(data)

	case ConstructorChatEventForumTopicPinned:
		return UnmarshalChatEventForumTopicPinned(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatEventAction(dataList []json.RawMessage) ([]ChatEventAction, error) {
	list := make([]ChatEventAction, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatEventAction(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalLanguagePackStringValue(data json.RawMessage) (LanguagePackStringValue, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorLanguagePackStringValueOrdinary:
		return UnmarshalLanguagePackStringValueOrdinary(data)

	case ConstructorLanguagePackStringValuePluralized:
		return UnmarshalLanguagePackStringValuePluralized(data)

	case ConstructorLanguagePackStringValueDeleted:
		return UnmarshalLanguagePackStringValueDeleted(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfLanguagePackStringValue(dataList []json.RawMessage) ([]LanguagePackStringValue, error) {
	list := make([]LanguagePackStringValue, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalLanguagePackStringValue(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPremiumLimitType(data json.RawMessage) (PremiumLimitType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPremiumLimitTypeSupergroupCount:
		return UnmarshalPremiumLimitTypeSupergroupCount(data)

	case ConstructorPremiumLimitTypePinnedChatCount:
		return UnmarshalPremiumLimitTypePinnedChatCount(data)

	case ConstructorPremiumLimitTypeCreatedPublicChatCount:
		return UnmarshalPremiumLimitTypeCreatedPublicChatCount(data)

	case ConstructorPremiumLimitTypeSavedAnimationCount:
		return UnmarshalPremiumLimitTypeSavedAnimationCount(data)

	case ConstructorPremiumLimitTypeFavoriteStickerCount:
		return UnmarshalPremiumLimitTypeFavoriteStickerCount(data)

	case ConstructorPremiumLimitTypeChatFolderCount:
		return UnmarshalPremiumLimitTypeChatFolderCount(data)

	case ConstructorPremiumLimitTypeChatFolderChosenChatCount:
		return UnmarshalPremiumLimitTypeChatFolderChosenChatCount(data)

	case ConstructorPremiumLimitTypePinnedArchivedChatCount:
		return UnmarshalPremiumLimitTypePinnedArchivedChatCount(data)

	case ConstructorPremiumLimitTypePinnedSavedMessagesTopicCount:
		return UnmarshalPremiumLimitTypePinnedSavedMessagesTopicCount(data)

	case ConstructorPremiumLimitTypeCaptionLength:
		return UnmarshalPremiumLimitTypeCaptionLength(data)

	case ConstructorPremiumLimitTypeBioLength:
		return UnmarshalPremiumLimitTypeBioLength(data)

	case ConstructorPremiumLimitTypeChatFolderInviteLinkCount:
		return UnmarshalPremiumLimitTypeChatFolderInviteLinkCount(data)

	case ConstructorPremiumLimitTypeShareableChatFolderCount:
		return UnmarshalPremiumLimitTypeShareableChatFolderCount(data)

	case ConstructorPremiumLimitTypeActiveStoryCount:
		return UnmarshalPremiumLimitTypeActiveStoryCount(data)

	case ConstructorPremiumLimitTypeWeeklySentStoryCount:
		return UnmarshalPremiumLimitTypeWeeklySentStoryCount(data)

	case ConstructorPremiumLimitTypeMonthlySentStoryCount:
		return UnmarshalPremiumLimitTypeMonthlySentStoryCount(data)

	case ConstructorPremiumLimitTypeStoryCaptionLength:
		return UnmarshalPremiumLimitTypeStoryCaptionLength(data)

	case ConstructorPremiumLimitTypeStorySuggestedReactionAreaCount:
		return UnmarshalPremiumLimitTypeStorySuggestedReactionAreaCount(data)

	case ConstructorPremiumLimitTypeSimilarChatCount:
		return UnmarshalPremiumLimitTypeSimilarChatCount(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPremiumLimitType(dataList []json.RawMessage) ([]PremiumLimitType, error) {
	list := make([]PremiumLimitType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPremiumLimitType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPremiumFeature(data json.RawMessage) (PremiumFeature, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPremiumFeatureIncreasedLimits:
		return UnmarshalPremiumFeatureIncreasedLimits(data)

	case ConstructorPremiumFeatureIncreasedUploadFileSize:
		return UnmarshalPremiumFeatureIncreasedUploadFileSize(data)

	case ConstructorPremiumFeatureImprovedDownloadSpeed:
		return UnmarshalPremiumFeatureImprovedDownloadSpeed(data)

	case ConstructorPremiumFeatureVoiceRecognition:
		return UnmarshalPremiumFeatureVoiceRecognition(data)

	case ConstructorPremiumFeatureDisabledAds:
		return UnmarshalPremiumFeatureDisabledAds(data)

	case ConstructorPremiumFeatureUniqueReactions:
		return UnmarshalPremiumFeatureUniqueReactions(data)

	case ConstructorPremiumFeatureUniqueStickers:
		return UnmarshalPremiumFeatureUniqueStickers(data)

	case ConstructorPremiumFeatureCustomEmoji:
		return UnmarshalPremiumFeatureCustomEmoji(data)

	case ConstructorPremiumFeatureAdvancedChatManagement:
		return UnmarshalPremiumFeatureAdvancedChatManagement(data)

	case ConstructorPremiumFeatureProfileBadge:
		return UnmarshalPremiumFeatureProfileBadge(data)

	case ConstructorPremiumFeatureEmojiStatus:
		return UnmarshalPremiumFeatureEmojiStatus(data)

	case ConstructorPremiumFeatureAnimatedProfilePhoto:
		return UnmarshalPremiumFeatureAnimatedProfilePhoto(data)

	case ConstructorPremiumFeatureForumTopicIcon:
		return UnmarshalPremiumFeatureForumTopicIcon(data)

	case ConstructorPremiumFeatureAppIcons:
		return UnmarshalPremiumFeatureAppIcons(data)

	case ConstructorPremiumFeatureRealTimeChatTranslation:
		return UnmarshalPremiumFeatureRealTimeChatTranslation(data)

	case ConstructorPremiumFeatureUpgradedStories:
		return UnmarshalPremiumFeatureUpgradedStories(data)

	case ConstructorPremiumFeatureChatBoost:
		return UnmarshalPremiumFeatureChatBoost(data)

	case ConstructorPremiumFeatureAccentColor:
		return UnmarshalPremiumFeatureAccentColor(data)

	case ConstructorPremiumFeatureBackgroundForBoth:
		return UnmarshalPremiumFeatureBackgroundForBoth(data)

	case ConstructorPremiumFeatureSavedMessagesTags:
		return UnmarshalPremiumFeatureSavedMessagesTags(data)

	case ConstructorPremiumFeatureMessagePrivacy:
		return UnmarshalPremiumFeatureMessagePrivacy(data)

	case ConstructorPremiumFeatureLastSeenTimes:
		return UnmarshalPremiumFeatureLastSeenTimes(data)

	case ConstructorPremiumFeatureBusiness:
		return UnmarshalPremiumFeatureBusiness(data)

	case ConstructorPremiumFeatureMessageEffects:
		return UnmarshalPremiumFeatureMessageEffects(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPremiumFeature(dataList []json.RawMessage) ([]PremiumFeature, error) {
	list := make([]PremiumFeature, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPremiumFeature(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBusinessFeature(data json.RawMessage) (BusinessFeature, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBusinessFeatureLocation:
		return UnmarshalBusinessFeatureLocation(data)

	case ConstructorBusinessFeatureOpeningHours:
		return UnmarshalBusinessFeatureOpeningHours(data)

	case ConstructorBusinessFeatureQuickReplies:
		return UnmarshalBusinessFeatureQuickReplies(data)

	case ConstructorBusinessFeatureGreetingMessage:
		return UnmarshalBusinessFeatureGreetingMessage(data)

	case ConstructorBusinessFeatureAwayMessage:
		return UnmarshalBusinessFeatureAwayMessage(data)

	case ConstructorBusinessFeatureAccountLinks:
		return UnmarshalBusinessFeatureAccountLinks(data)

	case ConstructorBusinessFeatureStartPage:
		return UnmarshalBusinessFeatureStartPage(data)

	case ConstructorBusinessFeatureBots:
		return UnmarshalBusinessFeatureBots(data)

	case ConstructorBusinessFeatureEmojiStatus:
		return UnmarshalBusinessFeatureEmojiStatus(data)

	case ConstructorBusinessFeatureChatFolderTags:
		return UnmarshalBusinessFeatureChatFolderTags(data)

	case ConstructorBusinessFeatureUpgradedStories:
		return UnmarshalBusinessFeatureUpgradedStories(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBusinessFeature(dataList []json.RawMessage) ([]BusinessFeature, error) {
	list := make([]BusinessFeature, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBusinessFeature(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPremiumStoryFeature(data json.RawMessage) (PremiumStoryFeature, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPremiumStoryFeaturePriorityOrder:
		return UnmarshalPremiumStoryFeaturePriorityOrder(data)

	case ConstructorPremiumStoryFeatureStealthMode:
		return UnmarshalPremiumStoryFeatureStealthMode(data)

	case ConstructorPremiumStoryFeaturePermanentViewsHistory:
		return UnmarshalPremiumStoryFeaturePermanentViewsHistory(data)

	case ConstructorPremiumStoryFeatureCustomExpirationDuration:
		return UnmarshalPremiumStoryFeatureCustomExpirationDuration(data)

	case ConstructorPremiumStoryFeatureSaveStories:
		return UnmarshalPremiumStoryFeatureSaveStories(data)

	case ConstructorPremiumStoryFeatureLinksAndFormatting:
		return UnmarshalPremiumStoryFeatureLinksAndFormatting(data)

	case ConstructorPremiumStoryFeatureVideoQuality:
		return UnmarshalPremiumStoryFeatureVideoQuality(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPremiumStoryFeature(dataList []json.RawMessage) ([]PremiumStoryFeature, error) {
	list := make([]PremiumStoryFeature, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPremiumStoryFeature(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPremiumSource(data json.RawMessage) (PremiumSource, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPremiumSourceLimitExceeded:
		return UnmarshalPremiumSourceLimitExceeded(data)

	case ConstructorPremiumSourceFeature:
		return UnmarshalPremiumSourceFeature(data)

	case ConstructorPremiumSourceBusinessFeature:
		return UnmarshalPremiumSourceBusinessFeature(data)

	case ConstructorPremiumSourceStoryFeature:
		return UnmarshalPremiumSourceStoryFeature(data)

	case ConstructorPremiumSourceLink:
		return UnmarshalPremiumSourceLink(data)

	case ConstructorPremiumSourceSettings:
		return UnmarshalPremiumSourceSettings(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPremiumSource(dataList []json.RawMessage) ([]PremiumSource, error) {
	list := make([]PremiumSource, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPremiumSource(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStorePaymentPurpose(data json.RawMessage) (StorePaymentPurpose, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStorePaymentPurposePremiumSubscription:
		return UnmarshalStorePaymentPurposePremiumSubscription(data)

	case ConstructorStorePaymentPurposePremiumGift:
		return UnmarshalStorePaymentPurposePremiumGift(data)

	case ConstructorStorePaymentPurposePremiumGiftCodes:
		return UnmarshalStorePaymentPurposePremiumGiftCodes(data)

	case ConstructorStorePaymentPurposePremiumGiveaway:
		return UnmarshalStorePaymentPurposePremiumGiveaway(data)

	case ConstructorStorePaymentPurposeStarGiveaway:
		return UnmarshalStorePaymentPurposeStarGiveaway(data)

	case ConstructorStorePaymentPurposeStars:
		return UnmarshalStorePaymentPurposeStars(data)

	case ConstructorStorePaymentPurposeGiftedStars:
		return UnmarshalStorePaymentPurposeGiftedStars(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStorePaymentPurpose(dataList []json.RawMessage) ([]StorePaymentPurpose, error) {
	list := make([]StorePaymentPurpose, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStorePaymentPurpose(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoreTransaction(data json.RawMessage) (StoreTransaction, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoreTransactionAppStore:
		return UnmarshalStoreTransactionAppStore(data)

	case ConstructorStoreTransactionGooglePlay:
		return UnmarshalStoreTransactionGooglePlay(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoreTransaction(dataList []json.RawMessage) ([]StoreTransaction, error) {
	list := make([]StoreTransaction, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoreTransaction(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalTelegramPaymentPurpose(data json.RawMessage) (TelegramPaymentPurpose, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorTelegramPaymentPurposePremiumGift:
		return UnmarshalTelegramPaymentPurposePremiumGift(data)

	case ConstructorTelegramPaymentPurposePremiumGiftCodes:
		return UnmarshalTelegramPaymentPurposePremiumGiftCodes(data)

	case ConstructorTelegramPaymentPurposePremiumGiveaway:
		return UnmarshalTelegramPaymentPurposePremiumGiveaway(data)

	case ConstructorTelegramPaymentPurposeStars:
		return UnmarshalTelegramPaymentPurposeStars(data)

	case ConstructorTelegramPaymentPurposeGiftedStars:
		return UnmarshalTelegramPaymentPurposeGiftedStars(data)

	case ConstructorTelegramPaymentPurposeStarGiveaway:
		return UnmarshalTelegramPaymentPurposeStarGiveaway(data)

	case ConstructorTelegramPaymentPurposeJoinChat:
		return UnmarshalTelegramPaymentPurposeJoinChat(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfTelegramPaymentPurpose(dataList []json.RawMessage) ([]TelegramPaymentPurpose, error) {
	list := make([]TelegramPaymentPurpose, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalTelegramPaymentPurpose(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalDeviceToken(data json.RawMessage) (DeviceToken, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorDeviceTokenFirebaseCloudMessaging:
		return UnmarshalDeviceTokenFirebaseCloudMessaging(data)

	case ConstructorDeviceTokenApplePush:
		return UnmarshalDeviceTokenApplePush(data)

	case ConstructorDeviceTokenApplePushVoIP:
		return UnmarshalDeviceTokenApplePushVoIP(data)

	case ConstructorDeviceTokenWindowsPush:
		return UnmarshalDeviceTokenWindowsPush(data)

	case ConstructorDeviceTokenMicrosoftPush:
		return UnmarshalDeviceTokenMicrosoftPush(data)

	case ConstructorDeviceTokenMicrosoftPushVoIP:
		return UnmarshalDeviceTokenMicrosoftPushVoIP(data)

	case ConstructorDeviceTokenWebPush:
		return UnmarshalDeviceTokenWebPush(data)

	case ConstructorDeviceTokenSimplePush:
		return UnmarshalDeviceTokenSimplePush(data)

	case ConstructorDeviceTokenUbuntuPush:
		return UnmarshalDeviceTokenUbuntuPush(data)

	case ConstructorDeviceTokenBlackBerryPush:
		return UnmarshalDeviceTokenBlackBerryPush(data)

	case ConstructorDeviceTokenTizenPush:
		return UnmarshalDeviceTokenTizenPush(data)

	case ConstructorDeviceTokenHuaweiPush:
		return UnmarshalDeviceTokenHuaweiPush(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfDeviceToken(dataList []json.RawMessage) ([]DeviceToken, error) {
	list := make([]DeviceToken, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalDeviceToken(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBackgroundFill(data json.RawMessage) (BackgroundFill, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBackgroundFillSolid:
		return UnmarshalBackgroundFillSolid(data)

	case ConstructorBackgroundFillGradient:
		return UnmarshalBackgroundFillGradient(data)

	case ConstructorBackgroundFillFreeformGradient:
		return UnmarshalBackgroundFillFreeformGradient(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBackgroundFill(dataList []json.RawMessage) ([]BackgroundFill, error) {
	list := make([]BackgroundFill, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBackgroundFill(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBackgroundType(data json.RawMessage) (BackgroundType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBackgroundTypeWallpaper:
		return UnmarshalBackgroundTypeWallpaper(data)

	case ConstructorBackgroundTypePattern:
		return UnmarshalBackgroundTypePattern(data)

	case ConstructorBackgroundTypeFill:
		return UnmarshalBackgroundTypeFill(data)

	case ConstructorBackgroundTypeChatTheme:
		return UnmarshalBackgroundTypeChatTheme(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBackgroundType(dataList []json.RawMessage) ([]BackgroundType, error) {
	list := make([]BackgroundType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBackgroundType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInputBackground(data json.RawMessage) (InputBackground, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInputBackgroundLocal:
		return UnmarshalInputBackgroundLocal(data)

	case ConstructorInputBackgroundRemote:
		return UnmarshalInputBackgroundRemote(data)

	case ConstructorInputBackgroundPrevious:
		return UnmarshalInputBackgroundPrevious(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInputBackground(dataList []json.RawMessage) ([]InputBackground, error) {
	list := make([]InputBackground, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInputBackground(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCanSendStoryResult(data json.RawMessage) (CanSendStoryResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCanSendStoryResultOk:
		return UnmarshalCanSendStoryResultOk(data)

	case ConstructorCanSendStoryResultPremiumNeeded:
		return UnmarshalCanSendStoryResultPremiumNeeded(data)

	case ConstructorCanSendStoryResultBoostNeeded:
		return UnmarshalCanSendStoryResultBoostNeeded(data)

	case ConstructorCanSendStoryResultActiveStoryLimitExceeded:
		return UnmarshalCanSendStoryResultActiveStoryLimitExceeded(data)

	case ConstructorCanSendStoryResultWeeklyLimitExceeded:
		return UnmarshalCanSendStoryResultWeeklyLimitExceeded(data)

	case ConstructorCanSendStoryResultMonthlyLimitExceeded:
		return UnmarshalCanSendStoryResultMonthlyLimitExceeded(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCanSendStoryResult(dataList []json.RawMessage) ([]CanSendStoryResult, error) {
	list := make([]CanSendStoryResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCanSendStoryResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCanTransferOwnershipResult(data json.RawMessage) (CanTransferOwnershipResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCanTransferOwnershipResultOk:
		return UnmarshalCanTransferOwnershipResultOk(data)

	case ConstructorCanTransferOwnershipResultPasswordNeeded:
		return UnmarshalCanTransferOwnershipResultPasswordNeeded(data)

	case ConstructorCanTransferOwnershipResultPasswordTooFresh:
		return UnmarshalCanTransferOwnershipResultPasswordTooFresh(data)

	case ConstructorCanTransferOwnershipResultSessionTooFresh:
		return UnmarshalCanTransferOwnershipResultSessionTooFresh(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCanTransferOwnershipResult(dataList []json.RawMessage) ([]CanTransferOwnershipResult, error) {
	list := make([]CanTransferOwnershipResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCanTransferOwnershipResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCheckChatUsernameResult(data json.RawMessage) (CheckChatUsernameResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCheckChatUsernameResultOk:
		return UnmarshalCheckChatUsernameResultOk(data)

	case ConstructorCheckChatUsernameResultUsernameInvalid:
		return UnmarshalCheckChatUsernameResultUsernameInvalid(data)

	case ConstructorCheckChatUsernameResultUsernameOccupied:
		return UnmarshalCheckChatUsernameResultUsernameOccupied(data)

	case ConstructorCheckChatUsernameResultUsernamePurchasable:
		return UnmarshalCheckChatUsernameResultUsernamePurchasable(data)

	case ConstructorCheckChatUsernameResultPublicChatsTooMany:
		return UnmarshalCheckChatUsernameResultPublicChatsTooMany(data)

	case ConstructorCheckChatUsernameResultPublicGroupsUnavailable:
		return UnmarshalCheckChatUsernameResultPublicGroupsUnavailable(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCheckChatUsernameResult(dataList []json.RawMessage) ([]CheckChatUsernameResult, error) {
	list := make([]CheckChatUsernameResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCheckChatUsernameResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCheckStickerSetNameResult(data json.RawMessage) (CheckStickerSetNameResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCheckStickerSetNameResultOk:
		return UnmarshalCheckStickerSetNameResultOk(data)

	case ConstructorCheckStickerSetNameResultNameInvalid:
		return UnmarshalCheckStickerSetNameResultNameInvalid(data)

	case ConstructorCheckStickerSetNameResultNameOccupied:
		return UnmarshalCheckStickerSetNameResultNameOccupied(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCheckStickerSetNameResult(dataList []json.RawMessage) ([]CheckStickerSetNameResult, error) {
	list := make([]CheckStickerSetNameResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCheckStickerSetNameResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalResetPasswordResult(data json.RawMessage) (ResetPasswordResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorResetPasswordResultOk:
		return UnmarshalResetPasswordResultOk(data)

	case ConstructorResetPasswordResultPending:
		return UnmarshalResetPasswordResultPending(data)

	case ConstructorResetPasswordResultDeclined:
		return UnmarshalResetPasswordResultDeclined(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfResetPasswordResult(dataList []json.RawMessage) ([]ResetPasswordResult, error) {
	list := make([]ResetPasswordResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalResetPasswordResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalMessageFileType(data json.RawMessage) (MessageFileType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorMessageFileTypePrivate:
		return UnmarshalMessageFileTypePrivate(data)

	case ConstructorMessageFileTypeGroup:
		return UnmarshalMessageFileTypeGroup(data)

	case ConstructorMessageFileTypeUnknown:
		return UnmarshalMessageFileTypeUnknown(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfMessageFileType(dataList []json.RawMessage) ([]MessageFileType, error) {
	list := make([]MessageFileType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalMessageFileType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPushMessageContent(data json.RawMessage) (PushMessageContent, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPushMessageContentHidden:
		return UnmarshalPushMessageContentHidden(data)

	case ConstructorPushMessageContentAnimation:
		return UnmarshalPushMessageContentAnimation(data)

	case ConstructorPushMessageContentAudio:
		return UnmarshalPushMessageContentAudio(data)

	case ConstructorPushMessageContentContact:
		return UnmarshalPushMessageContentContact(data)

	case ConstructorPushMessageContentContactRegistered:
		return UnmarshalPushMessageContentContactRegistered(data)

	case ConstructorPushMessageContentDocument:
		return UnmarshalPushMessageContentDocument(data)

	case ConstructorPushMessageContentGame:
		return UnmarshalPushMessageContentGame(data)

	case ConstructorPushMessageContentGameScore:
		return UnmarshalPushMessageContentGameScore(data)

	case ConstructorPushMessageContentInvoice:
		return UnmarshalPushMessageContentInvoice(data)

	case ConstructorPushMessageContentLocation:
		return UnmarshalPushMessageContentLocation(data)

	case ConstructorPushMessageContentPaidMedia:
		return UnmarshalPushMessageContentPaidMedia(data)

	case ConstructorPushMessageContentPhoto:
		return UnmarshalPushMessageContentPhoto(data)

	case ConstructorPushMessageContentPoll:
		return UnmarshalPushMessageContentPoll(data)

	case ConstructorPushMessageContentPremiumGiftCode:
		return UnmarshalPushMessageContentPremiumGiftCode(data)

	case ConstructorPushMessageContentGiveaway:
		return UnmarshalPushMessageContentGiveaway(data)

	case ConstructorPushMessageContentGift:
		return UnmarshalPushMessageContentGift(data)

	case ConstructorPushMessageContentUpgradedGift:
		return UnmarshalPushMessageContentUpgradedGift(data)

	case ConstructorPushMessageContentScreenshotTaken:
		return UnmarshalPushMessageContentScreenshotTaken(data)

	case ConstructorPushMessageContentSticker:
		return UnmarshalPushMessageContentSticker(data)

	case ConstructorPushMessageContentStory:
		return UnmarshalPushMessageContentStory(data)

	case ConstructorPushMessageContentText:
		return UnmarshalPushMessageContentText(data)

	case ConstructorPushMessageContentVideo:
		return UnmarshalPushMessageContentVideo(data)

	case ConstructorPushMessageContentVideoNote:
		return UnmarshalPushMessageContentVideoNote(data)

	case ConstructorPushMessageContentVoiceNote:
		return UnmarshalPushMessageContentVoiceNote(data)

	case ConstructorPushMessageContentBasicGroupChatCreate:
		return UnmarshalPushMessageContentBasicGroupChatCreate(data)

	case ConstructorPushMessageContentVideoChatStarted:
		return UnmarshalPushMessageContentVideoChatStarted(data)

	case ConstructorPushMessageContentVideoChatEnded:
		return UnmarshalPushMessageContentVideoChatEnded(data)

	case ConstructorPushMessageContentInviteVideoChatParticipants:
		return UnmarshalPushMessageContentInviteVideoChatParticipants(data)

	case ConstructorPushMessageContentChatAddMembers:
		return UnmarshalPushMessageContentChatAddMembers(data)

	case ConstructorPushMessageContentChatChangePhoto:
		return UnmarshalPushMessageContentChatChangePhoto(data)

	case ConstructorPushMessageContentChatChangeTitle:
		return UnmarshalPushMessageContentChatChangeTitle(data)

	case ConstructorPushMessageContentChatSetBackground:
		return UnmarshalPushMessageContentChatSetBackground(data)

	case ConstructorPushMessageContentChatSetTheme:
		return UnmarshalPushMessageContentChatSetTheme(data)

	case ConstructorPushMessageContentChatDeleteMember:
		return UnmarshalPushMessageContentChatDeleteMember(data)

	case ConstructorPushMessageContentChatJoinByLink:
		return UnmarshalPushMessageContentChatJoinByLink(data)

	case ConstructorPushMessageContentChatJoinByRequest:
		return UnmarshalPushMessageContentChatJoinByRequest(data)

	case ConstructorPushMessageContentRecurringPayment:
		return UnmarshalPushMessageContentRecurringPayment(data)

	case ConstructorPushMessageContentSuggestProfilePhoto:
		return UnmarshalPushMessageContentSuggestProfilePhoto(data)

	case ConstructorPushMessageContentProximityAlertTriggered:
		return UnmarshalPushMessageContentProximityAlertTriggered(data)

	case ConstructorPushMessageContentMessageForwards:
		return UnmarshalPushMessageContentMessageForwards(data)

	case ConstructorPushMessageContentMediaAlbum:
		return UnmarshalPushMessageContentMediaAlbum(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPushMessageContent(dataList []json.RawMessage) ([]PushMessageContent, error) {
	list := make([]PushMessageContent, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPushMessageContent(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalNotificationType(data json.RawMessage) (NotificationType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorNotificationTypeNewMessage:
		return UnmarshalNotificationTypeNewMessage(data)

	case ConstructorNotificationTypeNewSecretChat:
		return UnmarshalNotificationTypeNewSecretChat(data)

	case ConstructorNotificationTypeNewCall:
		return UnmarshalNotificationTypeNewCall(data)

	case ConstructorNotificationTypeNewPushMessage:
		return UnmarshalNotificationTypeNewPushMessage(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfNotificationType(dataList []json.RawMessage) ([]NotificationType, error) {
	list := make([]NotificationType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalNotificationType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalNotificationGroupType(data json.RawMessage) (NotificationGroupType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorNotificationGroupTypeMessages:
		return UnmarshalNotificationGroupTypeMessages(data)

	case ConstructorNotificationGroupTypeMentions:
		return UnmarshalNotificationGroupTypeMentions(data)

	case ConstructorNotificationGroupTypeSecretChat:
		return UnmarshalNotificationGroupTypeSecretChat(data)

	case ConstructorNotificationGroupTypeCalls:
		return UnmarshalNotificationGroupTypeCalls(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfNotificationGroupType(dataList []json.RawMessage) ([]NotificationGroupType, error) {
	list := make([]NotificationGroupType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalNotificationGroupType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalOptionValue(data json.RawMessage) (OptionValue, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorOptionValueBoolean:
		return UnmarshalOptionValueBoolean(data)

	case ConstructorOptionValueEmpty:
		return UnmarshalOptionValueEmpty(data)

	case ConstructorOptionValueInteger:
		return UnmarshalOptionValueInteger(data)

	case ConstructorOptionValueString:
		return UnmarshalOptionValueString(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfOptionValue(dataList []json.RawMessage) ([]OptionValue, error) {
	list := make([]OptionValue, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalOptionValue(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalJsonValue(data json.RawMessage) (JsonValue, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorJsonValueNull:
		return UnmarshalJsonValueNull(data)

	case ConstructorJsonValueBoolean:
		return UnmarshalJsonValueBoolean(data)

	case ConstructorJsonValueNumber:
		return UnmarshalJsonValueNumber(data)

	case ConstructorJsonValueString:
		return UnmarshalJsonValueString(data)

	case ConstructorJsonValueArray:
		return UnmarshalJsonValueArray(data)

	case ConstructorJsonValueObject:
		return UnmarshalJsonValueObject(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfJsonValue(dataList []json.RawMessage) ([]JsonValue, error) {
	list := make([]JsonValue, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalJsonValue(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStoryPrivacySettings(data json.RawMessage) (StoryPrivacySettings, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStoryPrivacySettingsEveryone:
		return UnmarshalStoryPrivacySettingsEveryone(data)

	case ConstructorStoryPrivacySettingsContacts:
		return UnmarshalStoryPrivacySettingsContacts(data)

	case ConstructorStoryPrivacySettingsCloseFriends:
		return UnmarshalStoryPrivacySettingsCloseFriends(data)

	case ConstructorStoryPrivacySettingsSelectedUsers:
		return UnmarshalStoryPrivacySettingsSelectedUsers(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStoryPrivacySettings(dataList []json.RawMessage) ([]StoryPrivacySettings, error) {
	list := make([]StoryPrivacySettings, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStoryPrivacySettings(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalUserPrivacySettingRule(data json.RawMessage) (UserPrivacySettingRule, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorUserPrivacySettingRuleAllowAll:
		return UnmarshalUserPrivacySettingRuleAllowAll(data)

	case ConstructorUserPrivacySettingRuleAllowContacts:
		return UnmarshalUserPrivacySettingRuleAllowContacts(data)

	case ConstructorUserPrivacySettingRuleAllowBots:
		return UnmarshalUserPrivacySettingRuleAllowBots(data)

	case ConstructorUserPrivacySettingRuleAllowPremiumUsers:
		return UnmarshalUserPrivacySettingRuleAllowPremiumUsers(data)

	case ConstructorUserPrivacySettingRuleAllowUsers:
		return UnmarshalUserPrivacySettingRuleAllowUsers(data)

	case ConstructorUserPrivacySettingRuleAllowChatMembers:
		return UnmarshalUserPrivacySettingRuleAllowChatMembers(data)

	case ConstructorUserPrivacySettingRuleRestrictAll:
		return UnmarshalUserPrivacySettingRuleRestrictAll(data)

	case ConstructorUserPrivacySettingRuleRestrictContacts:
		return UnmarshalUserPrivacySettingRuleRestrictContacts(data)

	case ConstructorUserPrivacySettingRuleRestrictBots:
		return UnmarshalUserPrivacySettingRuleRestrictBots(data)

	case ConstructorUserPrivacySettingRuleRestrictUsers:
		return UnmarshalUserPrivacySettingRuleRestrictUsers(data)

	case ConstructorUserPrivacySettingRuleRestrictChatMembers:
		return UnmarshalUserPrivacySettingRuleRestrictChatMembers(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfUserPrivacySettingRule(dataList []json.RawMessage) ([]UserPrivacySettingRule, error) {
	list := make([]UserPrivacySettingRule, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalUserPrivacySettingRule(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalUserPrivacySetting(data json.RawMessage) (UserPrivacySetting, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorUserPrivacySettingShowStatus:
		return UnmarshalUserPrivacySettingShowStatus(data)

	case ConstructorUserPrivacySettingShowProfilePhoto:
		return UnmarshalUserPrivacySettingShowProfilePhoto(data)

	case ConstructorUserPrivacySettingShowLinkInForwardedMessages:
		return UnmarshalUserPrivacySettingShowLinkInForwardedMessages(data)

	case ConstructorUserPrivacySettingShowPhoneNumber:
		return UnmarshalUserPrivacySettingShowPhoneNumber(data)

	case ConstructorUserPrivacySettingShowBio:
		return UnmarshalUserPrivacySettingShowBio(data)

	case ConstructorUserPrivacySettingShowBirthdate:
		return UnmarshalUserPrivacySettingShowBirthdate(data)

	case ConstructorUserPrivacySettingAllowChatInvites:
		return UnmarshalUserPrivacySettingAllowChatInvites(data)

	case ConstructorUserPrivacySettingAllowCalls:
		return UnmarshalUserPrivacySettingAllowCalls(data)

	case ConstructorUserPrivacySettingAllowPeerToPeerCalls:
		return UnmarshalUserPrivacySettingAllowPeerToPeerCalls(data)

	case ConstructorUserPrivacySettingAllowFindingByPhoneNumber:
		return UnmarshalUserPrivacySettingAllowFindingByPhoneNumber(data)

	case ConstructorUserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages:
		return UnmarshalUserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages(data)

	case ConstructorUserPrivacySettingAutosaveGifts:
		return UnmarshalUserPrivacySettingAutosaveGifts(data)

	case ConstructorUserPrivacySettingAllowUnpaidMessages:
		return UnmarshalUserPrivacySettingAllowUnpaidMessages(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfUserPrivacySetting(dataList []json.RawMessage) ([]UserPrivacySetting, error) {
	list := make([]UserPrivacySetting, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalUserPrivacySetting(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalCanSendMessageToUserResult(data json.RawMessage) (CanSendMessageToUserResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorCanSendMessageToUserResultOk:
		return UnmarshalCanSendMessageToUserResultOk(data)

	case ConstructorCanSendMessageToUserResultUserHasPaidMessages:
		return UnmarshalCanSendMessageToUserResultUserHasPaidMessages(data)

	case ConstructorCanSendMessageToUserResultUserIsDeleted:
		return UnmarshalCanSendMessageToUserResultUserIsDeleted(data)

	case ConstructorCanSendMessageToUserResultUserRestrictsNewChats:
		return UnmarshalCanSendMessageToUserResultUserRestrictsNewChats(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfCanSendMessageToUserResult(dataList []json.RawMessage) ([]CanSendMessageToUserResult, error) {
	list := make([]CanSendMessageToUserResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalCanSendMessageToUserResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSessionType(data json.RawMessage) (SessionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSessionTypeAndroid:
		return UnmarshalSessionTypeAndroid(data)

	case ConstructorSessionTypeApple:
		return UnmarshalSessionTypeApple(data)

	case ConstructorSessionTypeBrave:
		return UnmarshalSessionTypeBrave(data)

	case ConstructorSessionTypeChrome:
		return UnmarshalSessionTypeChrome(data)

	case ConstructorSessionTypeEdge:
		return UnmarshalSessionTypeEdge(data)

	case ConstructorSessionTypeFirefox:
		return UnmarshalSessionTypeFirefox(data)

	case ConstructorSessionTypeIpad:
		return UnmarshalSessionTypeIpad(data)

	case ConstructorSessionTypeIphone:
		return UnmarshalSessionTypeIphone(data)

	case ConstructorSessionTypeLinux:
		return UnmarshalSessionTypeLinux(data)

	case ConstructorSessionTypeMac:
		return UnmarshalSessionTypeMac(data)

	case ConstructorSessionTypeOpera:
		return UnmarshalSessionTypeOpera(data)

	case ConstructorSessionTypeSafari:
		return UnmarshalSessionTypeSafari(data)

	case ConstructorSessionTypeUbuntu:
		return UnmarshalSessionTypeUbuntu(data)

	case ConstructorSessionTypeUnknown:
		return UnmarshalSessionTypeUnknown(data)

	case ConstructorSessionTypeVivaldi:
		return UnmarshalSessionTypeVivaldi(data)

	case ConstructorSessionTypeWindows:
		return UnmarshalSessionTypeWindows(data)

	case ConstructorSessionTypeXbox:
		return UnmarshalSessionTypeXbox(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSessionType(dataList []json.RawMessage) ([]SessionType, error) {
	list := make([]SessionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSessionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReportReason(data json.RawMessage) (ReportReason, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReportReasonSpam:
		return UnmarshalReportReasonSpam(data)

	case ConstructorReportReasonViolence:
		return UnmarshalReportReasonViolence(data)

	case ConstructorReportReasonPornography:
		return UnmarshalReportReasonPornography(data)

	case ConstructorReportReasonChildAbuse:
		return UnmarshalReportReasonChildAbuse(data)

	case ConstructorReportReasonCopyright:
		return UnmarshalReportReasonCopyright(data)

	case ConstructorReportReasonUnrelatedLocation:
		return UnmarshalReportReasonUnrelatedLocation(data)

	case ConstructorReportReasonFake:
		return UnmarshalReportReasonFake(data)

	case ConstructorReportReasonIllegalDrugs:
		return UnmarshalReportReasonIllegalDrugs(data)

	case ConstructorReportReasonPersonalDetails:
		return UnmarshalReportReasonPersonalDetails(data)

	case ConstructorReportReasonCustom:
		return UnmarshalReportReasonCustom(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReportReason(dataList []json.RawMessage) ([]ReportReason, error) {
	list := make([]ReportReason, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReportReason(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReportChatResult(data json.RawMessage) (ReportChatResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReportChatResultOk:
		return UnmarshalReportChatResultOk(data)

	case ConstructorReportChatResultOptionRequired:
		return UnmarshalReportChatResultOptionRequired(data)

	case ConstructorReportChatResultTextRequired:
		return UnmarshalReportChatResultTextRequired(data)

	case ConstructorReportChatResultMessagesRequired:
		return UnmarshalReportChatResultMessagesRequired(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReportChatResult(dataList []json.RawMessage) ([]ReportChatResult, error) {
	list := make([]ReportChatResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReportChatResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalReportStoryResult(data json.RawMessage) (ReportStoryResult, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorReportStoryResultOk:
		return UnmarshalReportStoryResultOk(data)

	case ConstructorReportStoryResultOptionRequired:
		return UnmarshalReportStoryResultOptionRequired(data)

	case ConstructorReportStoryResultTextRequired:
		return UnmarshalReportStoryResultTextRequired(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfReportStoryResult(dataList []json.RawMessage) ([]ReportStoryResult, error) {
	list := make([]ReportStoryResult, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalReportStoryResult(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalInternalLinkType(data json.RawMessage) (InternalLinkType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorInternalLinkTypeActiveSessions:
		return UnmarshalInternalLinkTypeActiveSessions(data)

	case ConstructorInternalLinkTypeAttachmentMenuBot:
		return UnmarshalInternalLinkTypeAttachmentMenuBot(data)

	case ConstructorInternalLinkTypeAuthenticationCode:
		return UnmarshalInternalLinkTypeAuthenticationCode(data)

	case ConstructorInternalLinkTypeBackground:
		return UnmarshalInternalLinkTypeBackground(data)

	case ConstructorInternalLinkTypeBotAddToChannel:
		return UnmarshalInternalLinkTypeBotAddToChannel(data)

	case ConstructorInternalLinkTypeBotStart:
		return UnmarshalInternalLinkTypeBotStart(data)

	case ConstructorInternalLinkTypeBotStartInGroup:
		return UnmarshalInternalLinkTypeBotStartInGroup(data)

	case ConstructorInternalLinkTypeBusinessChat:
		return UnmarshalInternalLinkTypeBusinessChat(data)

	case ConstructorInternalLinkTypeBuyStars:
		return UnmarshalInternalLinkTypeBuyStars(data)

	case ConstructorInternalLinkTypeChangePhoneNumber:
		return UnmarshalInternalLinkTypeChangePhoneNumber(data)

	case ConstructorInternalLinkTypeChatAffiliateProgram:
		return UnmarshalInternalLinkTypeChatAffiliateProgram(data)

	case ConstructorInternalLinkTypeChatBoost:
		return UnmarshalInternalLinkTypeChatBoost(data)

	case ConstructorInternalLinkTypeChatFolderInvite:
		return UnmarshalInternalLinkTypeChatFolderInvite(data)

	case ConstructorInternalLinkTypeChatFolderSettings:
		return UnmarshalInternalLinkTypeChatFolderSettings(data)

	case ConstructorInternalLinkTypeChatInvite:
		return UnmarshalInternalLinkTypeChatInvite(data)

	case ConstructorInternalLinkTypeDefaultMessageAutoDeleteTimerSettings:
		return UnmarshalInternalLinkTypeDefaultMessageAutoDeleteTimerSettings(data)

	case ConstructorInternalLinkTypeEditProfileSettings:
		return UnmarshalInternalLinkTypeEditProfileSettings(data)

	case ConstructorInternalLinkTypeGame:
		return UnmarshalInternalLinkTypeGame(data)

	case ConstructorInternalLinkTypeInstantView:
		return UnmarshalInternalLinkTypeInstantView(data)

	case ConstructorInternalLinkTypeInvoice:
		return UnmarshalInternalLinkTypeInvoice(data)

	case ConstructorInternalLinkTypeLanguagePack:
		return UnmarshalInternalLinkTypeLanguagePack(data)

	case ConstructorInternalLinkTypeLanguageSettings:
		return UnmarshalInternalLinkTypeLanguageSettings(data)

	case ConstructorInternalLinkTypeMainWebApp:
		return UnmarshalInternalLinkTypeMainWebApp(data)

	case ConstructorInternalLinkTypeMessage:
		return UnmarshalInternalLinkTypeMessage(data)

	case ConstructorInternalLinkTypeMessageDraft:
		return UnmarshalInternalLinkTypeMessageDraft(data)

	case ConstructorInternalLinkTypePassportDataRequest:
		return UnmarshalInternalLinkTypePassportDataRequest(data)

	case ConstructorInternalLinkTypePhoneNumberConfirmation:
		return UnmarshalInternalLinkTypePhoneNumberConfirmation(data)

	case ConstructorInternalLinkTypePremiumFeatures:
		return UnmarshalInternalLinkTypePremiumFeatures(data)

	case ConstructorInternalLinkTypePremiumGift:
		return UnmarshalInternalLinkTypePremiumGift(data)

	case ConstructorInternalLinkTypePremiumGiftCode:
		return UnmarshalInternalLinkTypePremiumGiftCode(data)

	case ConstructorInternalLinkTypePrivacyAndSecuritySettings:
		return UnmarshalInternalLinkTypePrivacyAndSecuritySettings(data)

	case ConstructorInternalLinkTypeProxy:
		return UnmarshalInternalLinkTypeProxy(data)

	case ConstructorInternalLinkTypePublicChat:
		return UnmarshalInternalLinkTypePublicChat(data)

	case ConstructorInternalLinkTypeQrCodeAuthentication:
		return UnmarshalInternalLinkTypeQrCodeAuthentication(data)

	case ConstructorInternalLinkTypeRestorePurchases:
		return UnmarshalInternalLinkTypeRestorePurchases(data)

	case ConstructorInternalLinkTypeSettings:
		return UnmarshalInternalLinkTypeSettings(data)

	case ConstructorInternalLinkTypeStickerSet:
		return UnmarshalInternalLinkTypeStickerSet(data)

	case ConstructorInternalLinkTypeStory:
		return UnmarshalInternalLinkTypeStory(data)

	case ConstructorInternalLinkTypeTheme:
		return UnmarshalInternalLinkTypeTheme(data)

	case ConstructorInternalLinkTypeThemeSettings:
		return UnmarshalInternalLinkTypeThemeSettings(data)

	case ConstructorInternalLinkTypeUnknownDeepLink:
		return UnmarshalInternalLinkTypeUnknownDeepLink(data)

	case ConstructorInternalLinkTypeUnsupportedProxy:
		return UnmarshalInternalLinkTypeUnsupportedProxy(data)

	case ConstructorInternalLinkTypeUpgradedGift:
		return UnmarshalInternalLinkTypeUpgradedGift(data)

	case ConstructorInternalLinkTypeUserPhoneNumber:
		return UnmarshalInternalLinkTypeUserPhoneNumber(data)

	case ConstructorInternalLinkTypeUserToken:
		return UnmarshalInternalLinkTypeUserToken(data)

	case ConstructorInternalLinkTypeVideoChat:
		return UnmarshalInternalLinkTypeVideoChat(data)

	case ConstructorInternalLinkTypeWebApp:
		return UnmarshalInternalLinkTypeWebApp(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfInternalLinkType(dataList []json.RawMessage) ([]InternalLinkType, error) {
	list := make([]InternalLinkType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalInternalLinkType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBlockList(data json.RawMessage) (BlockList, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBlockListMain:
		return UnmarshalBlockListMain(data)

	case ConstructorBlockListStories:
		return UnmarshalBlockListStories(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBlockList(dataList []json.RawMessage) ([]BlockList, error) {
	list := make([]BlockList, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBlockList(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalFileType(data json.RawMessage) (FileType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorFileTypeNone:
		return UnmarshalFileTypeNone(data)

	case ConstructorFileTypeAnimation:
		return UnmarshalFileTypeAnimation(data)

	case ConstructorFileTypeAudio:
		return UnmarshalFileTypeAudio(data)

	case ConstructorFileTypeDocument:
		return UnmarshalFileTypeDocument(data)

	case ConstructorFileTypeNotificationSound:
		return UnmarshalFileTypeNotificationSound(data)

	case ConstructorFileTypePhoto:
		return UnmarshalFileTypePhoto(data)

	case ConstructorFileTypePhotoStory:
		return UnmarshalFileTypePhotoStory(data)

	case ConstructorFileTypeProfilePhoto:
		return UnmarshalFileTypeProfilePhoto(data)

	case ConstructorFileTypeSecret:
		return UnmarshalFileTypeSecret(data)

	case ConstructorFileTypeSecretThumbnail:
		return UnmarshalFileTypeSecretThumbnail(data)

	case ConstructorFileTypeSecure:
		return UnmarshalFileTypeSecure(data)

	case ConstructorFileTypeSelfDestructingPhoto:
		return UnmarshalFileTypeSelfDestructingPhoto(data)

	case ConstructorFileTypeSelfDestructingVideo:
		return UnmarshalFileTypeSelfDestructingVideo(data)

	case ConstructorFileTypeSelfDestructingVideoNote:
		return UnmarshalFileTypeSelfDestructingVideoNote(data)

	case ConstructorFileTypeSelfDestructingVoiceNote:
		return UnmarshalFileTypeSelfDestructingVoiceNote(data)

	case ConstructorFileTypeSticker:
		return UnmarshalFileTypeSticker(data)

	case ConstructorFileTypeThumbnail:
		return UnmarshalFileTypeThumbnail(data)

	case ConstructorFileTypeUnknown:
		return UnmarshalFileTypeUnknown(data)

	case ConstructorFileTypeVideo:
		return UnmarshalFileTypeVideo(data)

	case ConstructorFileTypeVideoNote:
		return UnmarshalFileTypeVideoNote(data)

	case ConstructorFileTypeVideoStory:
		return UnmarshalFileTypeVideoStory(data)

	case ConstructorFileTypeVoiceNote:
		return UnmarshalFileTypeVoiceNote(data)

	case ConstructorFileTypeWallpaper:
		return UnmarshalFileTypeWallpaper(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfFileType(dataList []json.RawMessage) ([]FileType, error) {
	list := make([]FileType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalFileType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalNetworkType(data json.RawMessage) (NetworkType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorNetworkTypeNone:
		return UnmarshalNetworkTypeNone(data)

	case ConstructorNetworkTypeMobile:
		return UnmarshalNetworkTypeMobile(data)

	case ConstructorNetworkTypeMobileRoaming:
		return UnmarshalNetworkTypeMobileRoaming(data)

	case ConstructorNetworkTypeWiFi:
		return UnmarshalNetworkTypeWiFi(data)

	case ConstructorNetworkTypeOther:
		return UnmarshalNetworkTypeOther(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfNetworkType(dataList []json.RawMessage) ([]NetworkType, error) {
	list := make([]NetworkType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalNetworkType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalNetworkStatisticsEntry(data json.RawMessage) (NetworkStatisticsEntry, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorNetworkStatisticsEntryFile:
		return UnmarshalNetworkStatisticsEntryFile(data)

	case ConstructorNetworkStatisticsEntryCall:
		return UnmarshalNetworkStatisticsEntryCall(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfNetworkStatisticsEntry(dataList []json.RawMessage) ([]NetworkStatisticsEntry, error) {
	list := make([]NetworkStatisticsEntry, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalNetworkStatisticsEntry(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalAutosaveSettingsScope(data json.RawMessage) (AutosaveSettingsScope, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorAutosaveSettingsScopePrivateChats:
		return UnmarshalAutosaveSettingsScopePrivateChats(data)

	case ConstructorAutosaveSettingsScopeGroupChats:
		return UnmarshalAutosaveSettingsScopeGroupChats(data)

	case ConstructorAutosaveSettingsScopeChannelChats:
		return UnmarshalAutosaveSettingsScopeChannelChats(data)

	case ConstructorAutosaveSettingsScopeChat:
		return UnmarshalAutosaveSettingsScopeChat(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfAutosaveSettingsScope(dataList []json.RawMessage) ([]AutosaveSettingsScope, error) {
	list := make([]AutosaveSettingsScope, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalAutosaveSettingsScope(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalConnectionState(data json.RawMessage) (ConnectionState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorConnectionStateWaitingForNetwork:
		return UnmarshalConnectionStateWaitingForNetwork(data)

	case ConstructorConnectionStateConnectingToProxy:
		return UnmarshalConnectionStateConnectingToProxy(data)

	case ConstructorConnectionStateConnecting:
		return UnmarshalConnectionStateConnecting(data)

	case ConstructorConnectionStateUpdating:
		return UnmarshalConnectionStateUpdating(data)

	case ConstructorConnectionStateReady:
		return UnmarshalConnectionStateReady(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfConnectionState(dataList []json.RawMessage) ([]ConnectionState, error) {
	list := make([]ConnectionState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalConnectionState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalTopChatCategory(data json.RawMessage) (TopChatCategory, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorTopChatCategoryUsers:
		return UnmarshalTopChatCategoryUsers(data)

	case ConstructorTopChatCategoryBots:
		return UnmarshalTopChatCategoryBots(data)

	case ConstructorTopChatCategoryGroups:
		return UnmarshalTopChatCategoryGroups(data)

	case ConstructorTopChatCategoryChannels:
		return UnmarshalTopChatCategoryChannels(data)

	case ConstructorTopChatCategoryInlineBots:
		return UnmarshalTopChatCategoryInlineBots(data)

	case ConstructorTopChatCategoryWebAppBots:
		return UnmarshalTopChatCategoryWebAppBots(data)

	case ConstructorTopChatCategoryCalls:
		return UnmarshalTopChatCategoryCalls(data)

	case ConstructorTopChatCategoryForwardChats:
		return UnmarshalTopChatCategoryForwardChats(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfTopChatCategory(dataList []json.RawMessage) ([]TopChatCategory, error) {
	list := make([]TopChatCategory, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalTopChatCategory(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalTMeUrlType(data json.RawMessage) (TMeUrlType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorTMeUrlTypeUser:
		return UnmarshalTMeUrlTypeUser(data)

	case ConstructorTMeUrlTypeSupergroup:
		return UnmarshalTMeUrlTypeSupergroup(data)

	case ConstructorTMeUrlTypeChatInvite:
		return UnmarshalTMeUrlTypeChatInvite(data)

	case ConstructorTMeUrlTypeStickerSet:
		return UnmarshalTMeUrlTypeStickerSet(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfTMeUrlType(dataList []json.RawMessage) ([]TMeUrlType, error) {
	list := make([]TMeUrlType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalTMeUrlType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalSuggestedAction(data json.RawMessage) (SuggestedAction, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorSuggestedActionEnableArchiveAndMuteNewChats:
		return UnmarshalSuggestedActionEnableArchiveAndMuteNewChats(data)

	case ConstructorSuggestedActionCheckPassword:
		return UnmarshalSuggestedActionCheckPassword(data)

	case ConstructorSuggestedActionCheckPhoneNumber:
		return UnmarshalSuggestedActionCheckPhoneNumber(data)

	case ConstructorSuggestedActionViewChecksHint:
		return UnmarshalSuggestedActionViewChecksHint(data)

	case ConstructorSuggestedActionConvertToBroadcastGroup:
		return UnmarshalSuggestedActionConvertToBroadcastGroup(data)

	case ConstructorSuggestedActionSetPassword:
		return UnmarshalSuggestedActionSetPassword(data)

	case ConstructorSuggestedActionUpgradePremium:
		return UnmarshalSuggestedActionUpgradePremium(data)

	case ConstructorSuggestedActionRestorePremium:
		return UnmarshalSuggestedActionRestorePremium(data)

	case ConstructorSuggestedActionSubscribeToAnnualPremium:
		return UnmarshalSuggestedActionSubscribeToAnnualPremium(data)

	case ConstructorSuggestedActionGiftPremiumForChristmas:
		return UnmarshalSuggestedActionGiftPremiumForChristmas(data)

	case ConstructorSuggestedActionSetBirthdate:
		return UnmarshalSuggestedActionSetBirthdate(data)

	case ConstructorSuggestedActionSetProfilePhoto:
		return UnmarshalSuggestedActionSetProfilePhoto(data)

	case ConstructorSuggestedActionExtendPremium:
		return UnmarshalSuggestedActionExtendPremium(data)

	case ConstructorSuggestedActionExtendStarSubscriptions:
		return UnmarshalSuggestedActionExtendStarSubscriptions(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfSuggestedAction(dataList []json.RawMessage) ([]SuggestedAction, error) {
	list := make([]SuggestedAction, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalSuggestedAction(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalTextParseMode(data json.RawMessage) (TextParseMode, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorTextParseModeMarkdown:
		return UnmarshalTextParseModeMarkdown(data)

	case ConstructorTextParseModeHTML:
		return UnmarshalTextParseModeHTML(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfTextParseMode(dataList []json.RawMessage) ([]TextParseMode, error) {
	list := make([]TextParseMode, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalTextParseMode(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalProxyType(data json.RawMessage) (ProxyType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorProxyTypeSocks5:
		return UnmarshalProxyTypeSocks5(data)

	case ConstructorProxyTypeHttp:
		return UnmarshalProxyTypeHttp(data)

	case ConstructorProxyTypeMtproto:
		return UnmarshalProxyTypeMtproto(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfProxyType(dataList []json.RawMessage) ([]ProxyType, error) {
	list := make([]ProxyType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalProxyType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalStatisticalGraph(data json.RawMessage) (StatisticalGraph, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorStatisticalGraphData:
		return UnmarshalStatisticalGraphData(data)

	case ConstructorStatisticalGraphAsync:
		return UnmarshalStatisticalGraphAsync(data)

	case ConstructorStatisticalGraphError:
		return UnmarshalStatisticalGraphError(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfStatisticalGraph(dataList []json.RawMessage) ([]StatisticalGraph, error) {
	list := make([]StatisticalGraph, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalStatisticalGraph(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatStatisticsObjectType(data json.RawMessage) (ChatStatisticsObjectType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatStatisticsObjectTypeMessage:
		return UnmarshalChatStatisticsObjectTypeMessage(data)

	case ConstructorChatStatisticsObjectTypeStory:
		return UnmarshalChatStatisticsObjectTypeStory(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatStatisticsObjectType(dataList []json.RawMessage) ([]ChatStatisticsObjectType, error) {
	list := make([]ChatStatisticsObjectType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatStatisticsObjectType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatStatistics(data json.RawMessage) (ChatStatistics, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatStatisticsSupergroup:
		return UnmarshalChatStatisticsSupergroup(data)

	case ConstructorChatStatisticsChannel:
		return UnmarshalChatStatisticsChannel(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatStatistics(dataList []json.RawMessage) ([]ChatStatistics, error) {
	list := make([]ChatStatistics, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatStatistics(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalRevenueWithdrawalState(data json.RawMessage) (RevenueWithdrawalState, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorRevenueWithdrawalStatePending:
		return UnmarshalRevenueWithdrawalStatePending(data)

	case ConstructorRevenueWithdrawalStateSucceeded:
		return UnmarshalRevenueWithdrawalStateSucceeded(data)

	case ConstructorRevenueWithdrawalStateFailed:
		return UnmarshalRevenueWithdrawalStateFailed(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfRevenueWithdrawalState(dataList []json.RawMessage) ([]RevenueWithdrawalState, error) {
	list := make([]RevenueWithdrawalState, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalRevenueWithdrawalState(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalChatRevenueTransactionType(data json.RawMessage) (ChatRevenueTransactionType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorChatRevenueTransactionTypeEarnings:
		return UnmarshalChatRevenueTransactionTypeEarnings(data)

	case ConstructorChatRevenueTransactionTypeWithdrawal:
		return UnmarshalChatRevenueTransactionTypeWithdrawal(data)

	case ConstructorChatRevenueTransactionTypeRefund:
		return UnmarshalChatRevenueTransactionTypeRefund(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfChatRevenueTransactionType(dataList []json.RawMessage) ([]ChatRevenueTransactionType, error) {
	list := make([]ChatRevenueTransactionType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalChatRevenueTransactionType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalVectorPathCommand(data json.RawMessage) (VectorPathCommand, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorVectorPathCommandLine:
		return UnmarshalVectorPathCommandLine(data)

	case ConstructorVectorPathCommandCubicBezierCurve:
		return UnmarshalVectorPathCommandCubicBezierCurve(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfVectorPathCommand(dataList []json.RawMessage) ([]VectorPathCommand, error) {
	list := make([]VectorPathCommand, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalVectorPathCommand(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalBotCommandScope(data json.RawMessage) (BotCommandScope, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorBotCommandScopeDefault:
		return UnmarshalBotCommandScopeDefault(data)

	case ConstructorBotCommandScopeAllPrivateChats:
		return UnmarshalBotCommandScopeAllPrivateChats(data)

	case ConstructorBotCommandScopeAllGroupChats:
		return UnmarshalBotCommandScopeAllGroupChats(data)

	case ConstructorBotCommandScopeAllChatAdministrators:
		return UnmarshalBotCommandScopeAllChatAdministrators(data)

	case ConstructorBotCommandScopeChat:
		return UnmarshalBotCommandScopeChat(data)

	case ConstructorBotCommandScopeChatAdministrators:
		return UnmarshalBotCommandScopeChatAdministrators(data)

	case ConstructorBotCommandScopeChatMember:
		return UnmarshalBotCommandScopeChatMember(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfBotCommandScope(dataList []json.RawMessage) ([]BotCommandScope, error) {
	list := make([]BotCommandScope, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalBotCommandScope(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalPhoneNumberCodeType(data json.RawMessage) (PhoneNumberCodeType, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorPhoneNumberCodeTypeChange:
		return UnmarshalPhoneNumberCodeTypeChange(data)

	case ConstructorPhoneNumberCodeTypeVerify:
		return UnmarshalPhoneNumberCodeTypeVerify(data)

	case ConstructorPhoneNumberCodeTypeConfirmOwnership:
		return UnmarshalPhoneNumberCodeTypeConfirmOwnership(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfPhoneNumberCodeType(dataList []json.RawMessage) ([]PhoneNumberCodeType, error) {
	list := make([]PhoneNumberCodeType, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalPhoneNumberCodeType(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalUpdate(data json.RawMessage) (Update, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorUpdateAuthorizationState:
		return UnmarshalUpdateAuthorizationState(data)

	case ConstructorUpdateNewMessage:
		return UnmarshalUpdateNewMessage(data)

	case ConstructorUpdateMessageSendAcknowledged:
		return UnmarshalUpdateMessageSendAcknowledged(data)

	case ConstructorUpdateMessageSendSucceeded:
		return UnmarshalUpdateMessageSendSucceeded(data)

	case ConstructorUpdateMessageSendFailed:
		return UnmarshalUpdateMessageSendFailed(data)

	case ConstructorUpdateMessageContent:
		return UnmarshalUpdateMessageContent(data)

	case ConstructorUpdateMessageEdited:
		return UnmarshalUpdateMessageEdited(data)

	case ConstructorUpdateMessageIsPinned:
		return UnmarshalUpdateMessageIsPinned(data)

	case ConstructorUpdateMessageInteractionInfo:
		return UnmarshalUpdateMessageInteractionInfo(data)

	case ConstructorUpdateMessageContentOpened:
		return UnmarshalUpdateMessageContentOpened(data)

	case ConstructorUpdateMessageMentionRead:
		return UnmarshalUpdateMessageMentionRead(data)

	case ConstructorUpdateMessageUnreadReactions:
		return UnmarshalUpdateMessageUnreadReactions(data)

	case ConstructorUpdateMessageFactCheck:
		return UnmarshalUpdateMessageFactCheck(data)

	case ConstructorUpdateMessageLiveLocationViewed:
		return UnmarshalUpdateMessageLiveLocationViewed(data)

	case ConstructorUpdateVideoPublished:
		return UnmarshalUpdateVideoPublished(data)

	case ConstructorUpdateNewChat:
		return UnmarshalUpdateNewChat(data)

	case ConstructorUpdateChatTitle:
		return UnmarshalUpdateChatTitle(data)

	case ConstructorUpdateChatPhoto:
		return UnmarshalUpdateChatPhoto(data)

	case ConstructorUpdateChatAccentColors:
		return UnmarshalUpdateChatAccentColors(data)

	case ConstructorUpdateChatPermissions:
		return UnmarshalUpdateChatPermissions(data)

	case ConstructorUpdateChatLastMessage:
		return UnmarshalUpdateChatLastMessage(data)

	case ConstructorUpdateChatPosition:
		return UnmarshalUpdateChatPosition(data)

	case ConstructorUpdateChatAddedToList:
		return UnmarshalUpdateChatAddedToList(data)

	case ConstructorUpdateChatRemovedFromList:
		return UnmarshalUpdateChatRemovedFromList(data)

	case ConstructorUpdateChatReadInbox:
		return UnmarshalUpdateChatReadInbox(data)

	case ConstructorUpdateChatReadOutbox:
		return UnmarshalUpdateChatReadOutbox(data)

	case ConstructorUpdateChatActionBar:
		return UnmarshalUpdateChatActionBar(data)

	case ConstructorUpdateChatBusinessBotManageBar:
		return UnmarshalUpdateChatBusinessBotManageBar(data)

	case ConstructorUpdateChatAvailableReactions:
		return UnmarshalUpdateChatAvailableReactions(data)

	case ConstructorUpdateChatDraftMessage:
		return UnmarshalUpdateChatDraftMessage(data)

	case ConstructorUpdateChatEmojiStatus:
		return UnmarshalUpdateChatEmojiStatus(data)

	case ConstructorUpdateChatMessageSender:
		return UnmarshalUpdateChatMessageSender(data)

	case ConstructorUpdateChatMessageAutoDeleteTime:
		return UnmarshalUpdateChatMessageAutoDeleteTime(data)

	case ConstructorUpdateChatNotificationSettings:
		return UnmarshalUpdateChatNotificationSettings(data)

	case ConstructorUpdateChatPendingJoinRequests:
		return UnmarshalUpdateChatPendingJoinRequests(data)

	case ConstructorUpdateChatReplyMarkup:
		return UnmarshalUpdateChatReplyMarkup(data)

	case ConstructorUpdateChatBackground:
		return UnmarshalUpdateChatBackground(data)

	case ConstructorUpdateChatTheme:
		return UnmarshalUpdateChatTheme(data)

	case ConstructorUpdateChatUnreadMentionCount:
		return UnmarshalUpdateChatUnreadMentionCount(data)

	case ConstructorUpdateChatUnreadReactionCount:
		return UnmarshalUpdateChatUnreadReactionCount(data)

	case ConstructorUpdateChatVideoChat:
		return UnmarshalUpdateChatVideoChat(data)

	case ConstructorUpdateChatDefaultDisableNotification:
		return UnmarshalUpdateChatDefaultDisableNotification(data)

	case ConstructorUpdateChatHasProtectedContent:
		return UnmarshalUpdateChatHasProtectedContent(data)

	case ConstructorUpdateChatIsTranslatable:
		return UnmarshalUpdateChatIsTranslatable(data)

	case ConstructorUpdateChatIsMarkedAsUnread:
		return UnmarshalUpdateChatIsMarkedAsUnread(data)

	case ConstructorUpdateChatViewAsTopics:
		return UnmarshalUpdateChatViewAsTopics(data)

	case ConstructorUpdateChatBlockList:
		return UnmarshalUpdateChatBlockList(data)

	case ConstructorUpdateChatHasScheduledMessages:
		return UnmarshalUpdateChatHasScheduledMessages(data)

	case ConstructorUpdateChatFolders:
		return UnmarshalUpdateChatFolders(data)

	case ConstructorUpdateChatOnlineMemberCount:
		return UnmarshalUpdateChatOnlineMemberCount(data)

	case ConstructorUpdateSavedMessagesTopic:
		return UnmarshalUpdateSavedMessagesTopic(data)

	case ConstructorUpdateSavedMessagesTopicCount:
		return UnmarshalUpdateSavedMessagesTopicCount(data)

	case ConstructorUpdateQuickReplyShortcut:
		return UnmarshalUpdateQuickReplyShortcut(data)

	case ConstructorUpdateQuickReplyShortcutDeleted:
		return UnmarshalUpdateQuickReplyShortcutDeleted(data)

	case ConstructorUpdateQuickReplyShortcuts:
		return UnmarshalUpdateQuickReplyShortcuts(data)

	case ConstructorUpdateQuickReplyShortcutMessages:
		return UnmarshalUpdateQuickReplyShortcutMessages(data)

	case ConstructorUpdateForumTopicInfo:
		return UnmarshalUpdateForumTopicInfo(data)

	case ConstructorUpdateForumTopic:
		return UnmarshalUpdateForumTopic(data)

	case ConstructorUpdateScopeNotificationSettings:
		return UnmarshalUpdateScopeNotificationSettings(data)

	case ConstructorUpdateReactionNotificationSettings:
		return UnmarshalUpdateReactionNotificationSettings(data)

	case ConstructorUpdateNotification:
		return UnmarshalUpdateNotification(data)

	case ConstructorUpdateNotificationGroup:
		return UnmarshalUpdateNotificationGroup(data)

	case ConstructorUpdateActiveNotifications:
		return UnmarshalUpdateActiveNotifications(data)

	case ConstructorUpdateHavePendingNotifications:
		return UnmarshalUpdateHavePendingNotifications(data)

	case ConstructorUpdateDeleteMessages:
		return UnmarshalUpdateDeleteMessages(data)

	case ConstructorUpdateChatAction:
		return UnmarshalUpdateChatAction(data)

	case ConstructorUpdateUserStatus:
		return UnmarshalUpdateUserStatus(data)

	case ConstructorUpdateUser:
		return UnmarshalUpdateUser(data)

	case ConstructorUpdateBasicGroup:
		return UnmarshalUpdateBasicGroup(data)

	case ConstructorUpdateSupergroup:
		return UnmarshalUpdateSupergroup(data)

	case ConstructorUpdateSecretChat:
		return UnmarshalUpdateSecretChat(data)

	case ConstructorUpdateUserFullInfo:
		return UnmarshalUpdateUserFullInfo(data)

	case ConstructorUpdateBasicGroupFullInfo:
		return UnmarshalUpdateBasicGroupFullInfo(data)

	case ConstructorUpdateSupergroupFullInfo:
		return UnmarshalUpdateSupergroupFullInfo(data)

	case ConstructorUpdateServiceNotification:
		return UnmarshalUpdateServiceNotification(data)

	case ConstructorUpdateFile:
		return UnmarshalUpdateFile(data)

	case ConstructorUpdateFileGenerationStart:
		return UnmarshalUpdateFileGenerationStart(data)

	case ConstructorUpdateFileGenerationStop:
		return UnmarshalUpdateFileGenerationStop(data)

	case ConstructorUpdateFileDownloads:
		return UnmarshalUpdateFileDownloads(data)

	case ConstructorUpdateFileAddedToDownloads:
		return UnmarshalUpdateFileAddedToDownloads(data)

	case ConstructorUpdateFileDownload:
		return UnmarshalUpdateFileDownload(data)

	case ConstructorUpdateFileRemovedFromDownloads:
		return UnmarshalUpdateFileRemovedFromDownloads(data)

	case ConstructorUpdateApplicationVerificationRequired:
		return UnmarshalUpdateApplicationVerificationRequired(data)

	case ConstructorUpdateApplicationRecaptchaVerificationRequired:
		return UnmarshalUpdateApplicationRecaptchaVerificationRequired(data)

	case ConstructorUpdateCall:
		return UnmarshalUpdateCall(data)

	case ConstructorUpdateGroupCall:
		return UnmarshalUpdateGroupCall(data)

	case ConstructorUpdateGroupCallParticipant:
		return UnmarshalUpdateGroupCallParticipant(data)

	case ConstructorUpdateNewCallSignalingData:
		return UnmarshalUpdateNewCallSignalingData(data)

	case ConstructorUpdateUserPrivacySettingRules:
		return UnmarshalUpdateUserPrivacySettingRules(data)

	case ConstructorUpdateUnreadMessageCount:
		return UnmarshalUpdateUnreadMessageCount(data)

	case ConstructorUpdateUnreadChatCount:
		return UnmarshalUpdateUnreadChatCount(data)

	case ConstructorUpdateStory:
		return UnmarshalUpdateStory(data)

	case ConstructorUpdateStoryDeleted:
		return UnmarshalUpdateStoryDeleted(data)

	case ConstructorUpdateStorySendSucceeded:
		return UnmarshalUpdateStorySendSucceeded(data)

	case ConstructorUpdateStorySendFailed:
		return UnmarshalUpdateStorySendFailed(data)

	case ConstructorUpdateChatActiveStories:
		return UnmarshalUpdateChatActiveStories(data)

	case ConstructorUpdateStoryListChatCount:
		return UnmarshalUpdateStoryListChatCount(data)

	case ConstructorUpdateStoryStealthMode:
		return UnmarshalUpdateStoryStealthMode(data)

	case ConstructorUpdateOption:
		return UnmarshalUpdateOption(data)

	case ConstructorUpdateStickerSet:
		return UnmarshalUpdateStickerSet(data)

	case ConstructorUpdateInstalledStickerSets:
		return UnmarshalUpdateInstalledStickerSets(data)

	case ConstructorUpdateTrendingStickerSets:
		return UnmarshalUpdateTrendingStickerSets(data)

	case ConstructorUpdateRecentStickers:
		return UnmarshalUpdateRecentStickers(data)

	case ConstructorUpdateFavoriteStickers:
		return UnmarshalUpdateFavoriteStickers(data)

	case ConstructorUpdateSavedAnimations:
		return UnmarshalUpdateSavedAnimations(data)

	case ConstructorUpdateSavedNotificationSounds:
		return UnmarshalUpdateSavedNotificationSounds(data)

	case ConstructorUpdateDefaultBackground:
		return UnmarshalUpdateDefaultBackground(data)

	case ConstructorUpdateChatThemes:
		return UnmarshalUpdateChatThemes(data)

	case ConstructorUpdateAccentColors:
		return UnmarshalUpdateAccentColors(data)

	case ConstructorUpdateProfileAccentColors:
		return UnmarshalUpdateProfileAccentColors(data)

	case ConstructorUpdateLanguagePackStrings:
		return UnmarshalUpdateLanguagePackStrings(data)

	case ConstructorUpdateConnectionState:
		return UnmarshalUpdateConnectionState(data)

	case ConstructorUpdateFreezeState:
		return UnmarshalUpdateFreezeState(data)

	case ConstructorUpdateTermsOfService:
		return UnmarshalUpdateTermsOfService(data)

	case ConstructorUpdateUnconfirmedSession:
		return UnmarshalUpdateUnconfirmedSession(data)

	case ConstructorUpdateAttachmentMenuBots:
		return UnmarshalUpdateAttachmentMenuBots(data)

	case ConstructorUpdateWebAppMessageSent:
		return UnmarshalUpdateWebAppMessageSent(data)

	case ConstructorUpdateActiveEmojiReactions:
		return UnmarshalUpdateActiveEmojiReactions(data)

	case ConstructorUpdateAvailableMessageEffects:
		return UnmarshalUpdateAvailableMessageEffects(data)

	case ConstructorUpdateDefaultReactionType:
		return UnmarshalUpdateDefaultReactionType(data)

	case ConstructorUpdateDefaultPaidReactionType:
		return UnmarshalUpdateDefaultPaidReactionType(data)

	case ConstructorUpdateSavedMessagesTags:
		return UnmarshalUpdateSavedMessagesTags(data)

	case ConstructorUpdateActiveLiveLocationMessages:
		return UnmarshalUpdateActiveLiveLocationMessages(data)

	case ConstructorUpdateOwnedStarCount:
		return UnmarshalUpdateOwnedStarCount(data)

	case ConstructorUpdateChatRevenueAmount:
		return UnmarshalUpdateChatRevenueAmount(data)

	case ConstructorUpdateStarRevenueStatus:
		return UnmarshalUpdateStarRevenueStatus(data)

	case ConstructorUpdateSpeechRecognitionTrial:
		return UnmarshalUpdateSpeechRecognitionTrial(data)

	case ConstructorUpdateDiceEmojis:
		return UnmarshalUpdateDiceEmojis(data)

	case ConstructorUpdateAnimatedEmojiMessageClicked:
		return UnmarshalUpdateAnimatedEmojiMessageClicked(data)

	case ConstructorUpdateAnimationSearchParameters:
		return UnmarshalUpdateAnimationSearchParameters(data)

	case ConstructorUpdateSuggestedActions:
		return UnmarshalUpdateSuggestedActions(data)

	case ConstructorUpdateSpeedLimitNotification:
		return UnmarshalUpdateSpeedLimitNotification(data)

	case ConstructorUpdateContactCloseBirthdays:
		return UnmarshalUpdateContactCloseBirthdays(data)

	case ConstructorUpdateAutosaveSettings:
		return UnmarshalUpdateAutosaveSettings(data)

	case ConstructorUpdateBusinessConnection:
		return UnmarshalUpdateBusinessConnection(data)

	case ConstructorUpdateNewBusinessMessage:
		return UnmarshalUpdateNewBusinessMessage(data)

	case ConstructorUpdateBusinessMessageEdited:
		return UnmarshalUpdateBusinessMessageEdited(data)

	case ConstructorUpdateBusinessMessagesDeleted:
		return UnmarshalUpdateBusinessMessagesDeleted(data)

	case ConstructorUpdateNewInlineQuery:
		return UnmarshalUpdateNewInlineQuery(data)

	case ConstructorUpdateNewChosenInlineResult:
		return UnmarshalUpdateNewChosenInlineResult(data)

	case ConstructorUpdateNewCallbackQuery:
		return UnmarshalUpdateNewCallbackQuery(data)

	case ConstructorUpdateNewInlineCallbackQuery:
		return UnmarshalUpdateNewInlineCallbackQuery(data)

	case ConstructorUpdateNewBusinessCallbackQuery:
		return UnmarshalUpdateNewBusinessCallbackQuery(data)

	case ConstructorUpdateNewShippingQuery:
		return UnmarshalUpdateNewShippingQuery(data)

	case ConstructorUpdateNewPreCheckoutQuery:
		return UnmarshalUpdateNewPreCheckoutQuery(data)

	case ConstructorUpdateNewCustomEvent:
		return UnmarshalUpdateNewCustomEvent(data)

	case ConstructorUpdateNewCustomQuery:
		return UnmarshalUpdateNewCustomQuery(data)

	case ConstructorUpdatePoll:
		return UnmarshalUpdatePoll(data)

	case ConstructorUpdatePollAnswer:
		return UnmarshalUpdatePollAnswer(data)

	case ConstructorUpdateChatMember:
		return UnmarshalUpdateChatMember(data)

	case ConstructorUpdateNewChatJoinRequest:
		return UnmarshalUpdateNewChatJoinRequest(data)

	case ConstructorUpdateChatBoost:
		return UnmarshalUpdateChatBoost(data)

	case ConstructorUpdateMessageReaction:
		return UnmarshalUpdateMessageReaction(data)

	case ConstructorUpdateMessageReactions:
		return UnmarshalUpdateMessageReactions(data)

	case ConstructorUpdatePaidMediaPurchased:
		return UnmarshalUpdatePaidMediaPurchased(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfUpdate(dataList []json.RawMessage) ([]Update, error) {
	list := make([]Update, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalUpdate(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalLogStream(data json.RawMessage) (LogStream, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorLogStreamDefault:
		return UnmarshalLogStreamDefault(data)

	case ConstructorLogStreamFile:
		return UnmarshalLogStreamFile(data)

	case ConstructorLogStreamEmpty:
		return UnmarshalLogStreamEmpty(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}

func UnmarshalListOfLogStream(dataList []json.RawMessage) ([]LogStream, error) {
	list := make([]LogStream, 0, len(dataList))
	for _, data := range dataList {
		entity, err := UnmarshalLogStream(data)
		if err != nil {
			return nil, err
		}
		list = append(list, entity)
	}

	return list, nil
}

func UnmarshalError(data json.RawMessage) (*Error, error) {
	var resp Error
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOk(data json.RawMessage) (*Ok, error) {
	var resp Ok
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeTelegramMessage(data json.RawMessage) (*AuthenticationCodeTypeTelegramMessage, error) {
	var resp AuthenticationCodeTypeTelegramMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeSms(data json.RawMessage) (*AuthenticationCodeTypeSms, error) {
	var resp AuthenticationCodeTypeSms
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeSmsWord(data json.RawMessage) (*AuthenticationCodeTypeSmsWord, error) {
	var resp AuthenticationCodeTypeSmsWord
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeSmsPhrase(data json.RawMessage) (*AuthenticationCodeTypeSmsPhrase, error) {
	var resp AuthenticationCodeTypeSmsPhrase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeCall(data json.RawMessage) (*AuthenticationCodeTypeCall, error) {
	var resp AuthenticationCodeTypeCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeFlashCall(data json.RawMessage) (*AuthenticationCodeTypeFlashCall, error) {
	var resp AuthenticationCodeTypeFlashCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeMissedCall(data json.RawMessage) (*AuthenticationCodeTypeMissedCall, error) {
	var resp AuthenticationCodeTypeMissedCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeFragment(data json.RawMessage) (*AuthenticationCodeTypeFragment, error) {
	var resp AuthenticationCodeTypeFragment
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeFirebaseAndroid(data json.RawMessage) (*AuthenticationCodeTypeFirebaseAndroid, error) {
	var resp AuthenticationCodeTypeFirebaseAndroid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeTypeFirebaseIos(data json.RawMessage) (*AuthenticationCodeTypeFirebaseIos, error) {
	var resp AuthenticationCodeTypeFirebaseIos
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthenticationCodeInfo(data json.RawMessage) (*AuthenticationCodeInfo, error) {
	var resp AuthenticationCodeInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmailAddressAuthenticationCodeInfo(data json.RawMessage) (*EmailAddressAuthenticationCodeInfo, error) {
	var resp EmailAddressAuthenticationCodeInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmailAddressAuthenticationCode(data json.RawMessage) (*EmailAddressAuthenticationCode, error) {
	var resp EmailAddressAuthenticationCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmailAddressAuthenticationAppleId(data json.RawMessage) (*EmailAddressAuthenticationAppleId, error) {
	var resp EmailAddressAuthenticationAppleId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmailAddressAuthenticationGoogleId(data json.RawMessage) (*EmailAddressAuthenticationGoogleId, error) {
	var resp EmailAddressAuthenticationGoogleId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmailAddressResetStateAvailable(data json.RawMessage) (*EmailAddressResetStateAvailable, error) {
	var resp EmailAddressResetStateAvailable
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmailAddressResetStatePending(data json.RawMessage) (*EmailAddressResetStatePending, error) {
	var resp EmailAddressResetStatePending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntity(data json.RawMessage) (*TextEntity, error) {
	var resp TextEntity
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntities(data json.RawMessage) (*TextEntities, error) {
	var resp TextEntities
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFormattedText(data json.RawMessage) (*FormattedText, error) {
	var resp FormattedText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTermsOfService(data json.RawMessage) (*TermsOfService, error) {
	var resp TermsOfService
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitTdlibParameters(data json.RawMessage) (*AuthorizationStateWaitTdlibParameters, error) {
	var resp AuthorizationStateWaitTdlibParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitPhoneNumber(data json.RawMessage) (*AuthorizationStateWaitPhoneNumber, error) {
	var resp AuthorizationStateWaitPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitPremiumPurchase(data json.RawMessage) (*AuthorizationStateWaitPremiumPurchase, error) {
	var resp AuthorizationStateWaitPremiumPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitEmailAddress(data json.RawMessage) (*AuthorizationStateWaitEmailAddress, error) {
	var resp AuthorizationStateWaitEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitEmailCode(data json.RawMessage) (*AuthorizationStateWaitEmailCode, error) {
	var resp AuthorizationStateWaitEmailCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitCode(data json.RawMessage) (*AuthorizationStateWaitCode, error) {
	var resp AuthorizationStateWaitCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitOtherDeviceConfirmation(data json.RawMessage) (*AuthorizationStateWaitOtherDeviceConfirmation, error) {
	var resp AuthorizationStateWaitOtherDeviceConfirmation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitRegistration(data json.RawMessage) (*AuthorizationStateWaitRegistration, error) {
	var resp AuthorizationStateWaitRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateWaitPassword(data json.RawMessage) (*AuthorizationStateWaitPassword, error) {
	var resp AuthorizationStateWaitPassword
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateReady(data json.RawMessage) (*AuthorizationStateReady, error) {
	var resp AuthorizationStateReady
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateLoggingOut(data json.RawMessage) (*AuthorizationStateLoggingOut, error) {
	var resp AuthorizationStateLoggingOut
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateClosing(data json.RawMessage) (*AuthorizationStateClosing, error) {
	var resp AuthorizationStateClosing
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAuthorizationStateClosed(data json.RawMessage) (*AuthorizationStateClosed, error) {
	var resp AuthorizationStateClosed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFirebaseDeviceVerificationParametersSafetyNet(data json.RawMessage) (*FirebaseDeviceVerificationParametersSafetyNet, error) {
	var resp FirebaseDeviceVerificationParametersSafetyNet
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFirebaseDeviceVerificationParametersPlayIntegrity(data json.RawMessage) (*FirebaseDeviceVerificationParametersPlayIntegrity, error) {
	var resp FirebaseDeviceVerificationParametersPlayIntegrity
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPasswordState(data json.RawMessage) (*PasswordState, error) {
	var resp PasswordState
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRecoveryEmailAddress(data json.RawMessage) (*RecoveryEmailAddress, error) {
	var resp RecoveryEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTemporaryPasswordState(data json.RawMessage) (*TemporaryPasswordState, error) {
	var resp TemporaryPasswordState
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLocalFile(data json.RawMessage) (*LocalFile, error) {
	var resp LocalFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRemoteFile(data json.RawMessage) (*RemoteFile, error) {
	var resp RemoteFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFile(data json.RawMessage) (*File, error) {
	var resp File
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputFileId(data json.RawMessage) (*InputFileId, error) {
	var resp InputFileId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputFileRemote(data json.RawMessage) (*InputFileRemote, error) {
	var resp InputFileRemote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputFileLocal(data json.RawMessage) (*InputFileLocal, error) {
	var resp InputFileLocal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputFileGenerated(data json.RawMessage) (*InputFileGenerated, error) {
	var resp InputFileGenerated
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhotoSize(data json.RawMessage) (*PhotoSize, error) {
	var resp PhotoSize
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMinithumbnail(data json.RawMessage) (*Minithumbnail, error) {
	var resp Minithumbnail
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatJpeg(data json.RawMessage) (*ThumbnailFormatJpeg, error) {
	var resp ThumbnailFormatJpeg
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatGif(data json.RawMessage) (*ThumbnailFormatGif, error) {
	var resp ThumbnailFormatGif
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatMpeg4(data json.RawMessage) (*ThumbnailFormatMpeg4, error) {
	var resp ThumbnailFormatMpeg4
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatPng(data json.RawMessage) (*ThumbnailFormatPng, error) {
	var resp ThumbnailFormatPng
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatTgs(data json.RawMessage) (*ThumbnailFormatTgs, error) {
	var resp ThumbnailFormatTgs
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatWebm(data json.RawMessage) (*ThumbnailFormatWebm, error) {
	var resp ThumbnailFormatWebm
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnailFormatWebp(data json.RawMessage) (*ThumbnailFormatWebp, error) {
	var resp ThumbnailFormatWebp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThumbnail(data json.RawMessage) (*Thumbnail, error) {
	var resp Thumbnail
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMaskPointForehead(data json.RawMessage) (*MaskPointForehead, error) {
	var resp MaskPointForehead
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMaskPointEyes(data json.RawMessage) (*MaskPointEyes, error) {
	var resp MaskPointEyes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMaskPointMouth(data json.RawMessage) (*MaskPointMouth, error) {
	var resp MaskPointMouth
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMaskPointChin(data json.RawMessage) (*MaskPointChin, error) {
	var resp MaskPointChin
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMaskPosition(data json.RawMessage) (*MaskPosition, error) {
	var resp MaskPosition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerFormatWebp(data json.RawMessage) (*StickerFormatWebp, error) {
	var resp StickerFormatWebp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerFormatTgs(data json.RawMessage) (*StickerFormatTgs, error) {
	var resp StickerFormatTgs
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerFormatWebm(data json.RawMessage) (*StickerFormatWebm, error) {
	var resp StickerFormatWebm
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerTypeRegular(data json.RawMessage) (*StickerTypeRegular, error) {
	var resp StickerTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerTypeMask(data json.RawMessage) (*StickerTypeMask, error) {
	var resp StickerTypeMask
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerTypeCustomEmoji(data json.RawMessage) (*StickerTypeCustomEmoji, error) {
	var resp StickerTypeCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerFullTypeRegular(data json.RawMessage) (*StickerFullTypeRegular, error) {
	var resp StickerFullTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerFullTypeMask(data json.RawMessage) (*StickerFullTypeMask, error) {
	var resp StickerFullTypeMask
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerFullTypeCustomEmoji(data json.RawMessage) (*StickerFullTypeCustomEmoji, error) {
	var resp StickerFullTypeCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalClosedVectorPath(data json.RawMessage) (*ClosedVectorPath, error) {
	var resp ClosedVectorPath
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOutline(data json.RawMessage) (*Outline, error) {
	var resp Outline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPollOption(data json.RawMessage) (*PollOption, error) {
	var resp PollOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPollTypeRegular(data json.RawMessage) (*PollTypeRegular, error) {
	var resp PollTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPollTypeQuiz(data json.RawMessage) (*PollTypeQuiz, error) {
	var resp PollTypeQuiz
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAnimation(data json.RawMessage) (*Animation, error) {
	var resp Animation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAudio(data json.RawMessage) (*Audio, error) {
	var resp Audio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDocument(data json.RawMessage) (*Document, error) {
	var resp Document
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhoto(data json.RawMessage) (*Photo, error) {
	var resp Photo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSticker(data json.RawMessage) (*Sticker, error) {
	var resp Sticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVideo(data json.RawMessage) (*Video, error) {
	var resp Video
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVideoNote(data json.RawMessage) (*VideoNote, error) {
	var resp VideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVoiceNote(data json.RawMessage) (*VoiceNote, error) {
	var resp VoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAnimatedEmoji(data json.RawMessage) (*AnimatedEmoji, error) {
	var resp AnimatedEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalContact(data json.RawMessage) (*Contact, error) {
	var resp Contact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLocation(data json.RawMessage) (*Location, error) {
	var resp Location
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVenue(data json.RawMessage) (*Venue, error) {
	var resp Venue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGame(data json.RawMessage) (*Game, error) {
	var resp Game
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebApp(data json.RawMessage) (*WebApp, error) {
	var resp WebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPoll(data json.RawMessage) (*Poll, error) {
	var resp Poll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAlternativeVideo(data json.RawMessage) (*AlternativeVideo, error) {
	var resp AlternativeVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackground(data json.RawMessage) (*Background, error) {
	var resp Background
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgrounds(data json.RawMessage) (*Backgrounds, error) {
	var resp Backgrounds
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBackground(data json.RawMessage) (*ChatBackground, error) {
	var resp ChatBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProfilePhoto(data json.RawMessage) (*ProfilePhoto, error) {
	var resp ProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPhotoInfo(data json.RawMessage) (*ChatPhotoInfo, error) {
	var resp ChatPhotoInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserTypeRegular(data json.RawMessage) (*UserTypeRegular, error) {
	var resp UserTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserTypeDeleted(data json.RawMessage) (*UserTypeDeleted, error) {
	var resp UserTypeDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserTypeBot(data json.RawMessage) (*UserTypeBot, error) {
	var resp UserTypeBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserTypeUnknown(data json.RawMessage) (*UserTypeUnknown, error) {
	var resp UserTypeUnknown
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommand(data json.RawMessage) (*BotCommand, error) {
	var resp BotCommand
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommands(data json.RawMessage) (*BotCommands, error) {
	var resp BotCommands
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotMenuButton(data json.RawMessage) (*BotMenuButton, error) {
	var resp BotMenuButton
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotVerificationParameters(data json.RawMessage) (*BotVerificationParameters, error) {
	var resp BotVerificationParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotVerification(data json.RawMessage) (*BotVerification, error) {
	var resp BotVerification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVerificationStatus(data json.RawMessage) (*VerificationStatus, error) {
	var resp VerificationStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatLocation(data json.RawMessage) (*ChatLocation, error) {
	var resp ChatLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBirthdate(data json.RawMessage) (*Birthdate, error) {
	var resp Birthdate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCloseBirthdayUser(data json.RawMessage) (*CloseBirthdayUser, error) {
	var resp CloseBirthdayUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessAwayMessageScheduleAlways(data json.RawMessage) (*BusinessAwayMessageScheduleAlways, error) {
	var resp BusinessAwayMessageScheduleAlways
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessAwayMessageScheduleOutsideOfOpeningHours(data json.RawMessage) (*BusinessAwayMessageScheduleOutsideOfOpeningHours, error) {
	var resp BusinessAwayMessageScheduleOutsideOfOpeningHours
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessAwayMessageScheduleCustom(data json.RawMessage) (*BusinessAwayMessageScheduleCustom, error) {
	var resp BusinessAwayMessageScheduleCustom
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessLocation(data json.RawMessage) (*BusinessLocation, error) {
	var resp BusinessLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessRecipients(data json.RawMessage) (*BusinessRecipients, error) {
	var resp BusinessRecipients
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessAwayMessageSettings(data json.RawMessage) (*BusinessAwayMessageSettings, error) {
	var resp BusinessAwayMessageSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessGreetingMessageSettings(data json.RawMessage) (*BusinessGreetingMessageSettings, error) {
	var resp BusinessGreetingMessageSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessBotRights(data json.RawMessage) (*BusinessBotRights, error) {
	var resp BusinessBotRights
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessConnectedBot(data json.RawMessage) (*BusinessConnectedBot, error) {
	var resp BusinessConnectedBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessStartPage(data json.RawMessage) (*BusinessStartPage, error) {
	var resp BusinessStartPage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputBusinessStartPage(data json.RawMessage) (*InputBusinessStartPage, error) {
	var resp InputBusinessStartPage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessOpeningHoursInterval(data json.RawMessage) (*BusinessOpeningHoursInterval, error) {
	var resp BusinessOpeningHoursInterval
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessOpeningHours(data json.RawMessage) (*BusinessOpeningHours, error) {
	var resp BusinessOpeningHours
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessInfo(data json.RawMessage) (*BusinessInfo, error) {
	var resp BusinessInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessChatLink(data json.RawMessage) (*BusinessChatLink, error) {
	var resp BusinessChatLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessChatLinks(data json.RawMessage) (*BusinessChatLinks, error) {
	var resp BusinessChatLinks
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputBusinessChatLink(data json.RawMessage) (*InputBusinessChatLink, error) {
	var resp InputBusinessChatLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessChatLinkInfo(data json.RawMessage) (*BusinessChatLinkInfo, error) {
	var resp BusinessChatLinkInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPhotoStickerTypeRegularOrMask(data json.RawMessage) (*ChatPhotoStickerTypeRegularOrMask, error) {
	var resp ChatPhotoStickerTypeRegularOrMask
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPhotoStickerTypeCustomEmoji(data json.RawMessage) (*ChatPhotoStickerTypeCustomEmoji, error) {
	var resp ChatPhotoStickerTypeCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPhotoSticker(data json.RawMessage) (*ChatPhotoSticker, error) {
	var resp ChatPhotoSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAnimatedChatPhoto(data json.RawMessage) (*AnimatedChatPhoto, error) {
	var resp AnimatedChatPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPhoto(data json.RawMessage) (*ChatPhoto, error) {
	var resp ChatPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPhotos(data json.RawMessage) (*ChatPhotos, error) {
	var resp ChatPhotos
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputChatPhotoPrevious(data json.RawMessage) (*InputChatPhotoPrevious, error) {
	var resp InputChatPhotoPrevious
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputChatPhotoStatic(data json.RawMessage) (*InputChatPhotoStatic, error) {
	var resp InputChatPhotoStatic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputChatPhotoAnimation(data json.RawMessage) (*InputChatPhotoAnimation, error) {
	var resp InputChatPhotoAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputChatPhotoSticker(data json.RawMessage) (*InputChatPhotoSticker, error) {
	var resp InputChatPhotoSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPermissions(data json.RawMessage) (*ChatPermissions, error) {
	var resp ChatPermissions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatAdministratorRights(data json.RawMessage) (*ChatAdministratorRights, error) {
	var resp ChatAdministratorRights
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarAmount(data json.RawMessage) (*StarAmount, error) {
	var resp StarAmount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarSubscriptionTypeChannel(data json.RawMessage) (*StarSubscriptionTypeChannel, error) {
	var resp StarSubscriptionTypeChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarSubscriptionTypeBot(data json.RawMessage) (*StarSubscriptionTypeBot, error) {
	var resp StarSubscriptionTypeBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarSubscriptionPricing(data json.RawMessage) (*StarSubscriptionPricing, error) {
	var resp StarSubscriptionPricing
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarSubscription(data json.RawMessage) (*StarSubscription, error) {
	var resp StarSubscription
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarSubscriptions(data json.RawMessage) (*StarSubscriptions, error) {
	var resp StarSubscriptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateTypeCurrentUser(data json.RawMessage) (*AffiliateTypeCurrentUser, error) {
	var resp AffiliateTypeCurrentUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateTypeBot(data json.RawMessage) (*AffiliateTypeBot, error) {
	var resp AffiliateTypeBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateTypeChannel(data json.RawMessage) (*AffiliateTypeChannel, error) {
	var resp AffiliateTypeChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateProgramSortOrderProfitability(data json.RawMessage) (*AffiliateProgramSortOrderProfitability, error) {
	var resp AffiliateProgramSortOrderProfitability
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateProgramSortOrderCreationDate(data json.RawMessage) (*AffiliateProgramSortOrderCreationDate, error) {
	var resp AffiliateProgramSortOrderCreationDate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateProgramSortOrderRevenue(data json.RawMessage) (*AffiliateProgramSortOrderRevenue, error) {
	var resp AffiliateProgramSortOrderRevenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateProgramParameters(data json.RawMessage) (*AffiliateProgramParameters, error) {
	var resp AffiliateProgramParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateProgramInfo(data json.RawMessage) (*AffiliateProgramInfo, error) {
	var resp AffiliateProgramInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAffiliateInfo(data json.RawMessage) (*AffiliateInfo, error) {
	var resp AffiliateInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundAffiliateProgram(data json.RawMessage) (*FoundAffiliateProgram, error) {
	var resp FoundAffiliateProgram
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundAffiliatePrograms(data json.RawMessage) (*FoundAffiliatePrograms, error) {
	var resp FoundAffiliatePrograms
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectedAffiliateProgram(data json.RawMessage) (*ConnectedAffiliateProgram, error) {
	var resp ConnectedAffiliateProgram
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectedAffiliatePrograms(data json.RawMessage) (*ConnectedAffiliatePrograms, error) {
	var resp ConnectedAffiliatePrograms
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProductInfo(data json.RawMessage) (*ProductInfo, error) {
	var resp ProductInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumPaymentOption(data json.RawMessage) (*PremiumPaymentOption, error) {
	var resp PremiumPaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStatePaymentOption(data json.RawMessage) (*PremiumStatePaymentOption, error) {
	var resp PremiumStatePaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumGiftPaymentOption(data json.RawMessage) (*PremiumGiftPaymentOption, error) {
	var resp PremiumGiftPaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumGiftPaymentOptions(data json.RawMessage) (*PremiumGiftPaymentOptions, error) {
	var resp PremiumGiftPaymentOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumGiveawayPaymentOption(data json.RawMessage) (*PremiumGiveawayPaymentOption, error) {
	var resp PremiumGiveawayPaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumGiveawayPaymentOptions(data json.RawMessage) (*PremiumGiveawayPaymentOptions, error) {
	var resp PremiumGiveawayPaymentOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumGiftCodeInfo(data json.RawMessage) (*PremiumGiftCodeInfo, error) {
	var resp PremiumGiftCodeInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarPaymentOption(data json.RawMessage) (*StarPaymentOption, error) {
	var resp StarPaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarPaymentOptions(data json.RawMessage) (*StarPaymentOptions, error) {
	var resp StarPaymentOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarGiveawayWinnerOption(data json.RawMessage) (*StarGiveawayWinnerOption, error) {
	var resp StarGiveawayWinnerOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarGiveawayPaymentOption(data json.RawMessage) (*StarGiveawayPaymentOption, error) {
	var resp StarGiveawayPaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarGiveawayPaymentOptions(data json.RawMessage) (*StarGiveawayPaymentOptions, error) {
	var resp StarGiveawayPaymentOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAcceptedGiftTypes(data json.RawMessage) (*AcceptedGiftTypes, error) {
	var resp AcceptedGiftTypes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiftSettings(data json.RawMessage) (*GiftSettings, error) {
	var resp GiftSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradedGiftModel(data json.RawMessage) (*UpgradedGiftModel, error) {
	var resp UpgradedGiftModel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradedGiftSymbol(data json.RawMessage) (*UpgradedGiftSymbol, error) {
	var resp UpgradedGiftSymbol
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradedGiftBackdropColors(data json.RawMessage) (*UpgradedGiftBackdropColors, error) {
	var resp UpgradedGiftBackdropColors
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradedGiftBackdrop(data json.RawMessage) (*UpgradedGiftBackdrop, error) {
	var resp UpgradedGiftBackdrop
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradedGiftOriginalDetails(data json.RawMessage) (*UpgradedGiftOriginalDetails, error) {
	var resp UpgradedGiftOriginalDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGift(data json.RawMessage) (*Gift, error) {
	var resp Gift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGifts(data json.RawMessage) (*Gifts, error) {
	var resp Gifts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradedGift(data json.RawMessage) (*UpgradedGift, error) {
	var resp UpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpgradeGiftResult(data json.RawMessage) (*UpgradeGiftResult, error) {
	var resp UpgradeGiftResult
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSentGiftRegular(data json.RawMessage) (*SentGiftRegular, error) {
	var resp SentGiftRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSentGiftUpgraded(data json.RawMessage) (*SentGiftUpgraded, error) {
	var resp SentGiftUpgraded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReceivedGift(data json.RawMessage) (*ReceivedGift, error) {
	var resp ReceivedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReceivedGifts(data json.RawMessage) (*ReceivedGifts, error) {
	var resp ReceivedGifts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiftUpgradePreview(data json.RawMessage) (*GiftUpgradePreview, error) {
	var resp GiftUpgradePreview
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionDirectionIncoming(data json.RawMessage) (*StarTransactionDirectionIncoming, error) {
	var resp StarTransactionDirectionIncoming
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionDirectionOutgoing(data json.RawMessage) (*StarTransactionDirectionOutgoing, error) {
	var resp StarTransactionDirectionOutgoing
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypePremiumBotDeposit(data json.RawMessage) (*StarTransactionTypePremiumBotDeposit, error) {
	var resp StarTransactionTypePremiumBotDeposit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeAppStoreDeposit(data json.RawMessage) (*StarTransactionTypeAppStoreDeposit, error) {
	var resp StarTransactionTypeAppStoreDeposit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeGooglePlayDeposit(data json.RawMessage) (*StarTransactionTypeGooglePlayDeposit, error) {
	var resp StarTransactionTypeGooglePlayDeposit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeFragmentDeposit(data json.RawMessage) (*StarTransactionTypeFragmentDeposit, error) {
	var resp StarTransactionTypeFragmentDeposit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeUserDeposit(data json.RawMessage) (*StarTransactionTypeUserDeposit, error) {
	var resp StarTransactionTypeUserDeposit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeGiveawayDeposit(data json.RawMessage) (*StarTransactionTypeGiveawayDeposit, error) {
	var resp StarTransactionTypeGiveawayDeposit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeFragmentWithdrawal(data json.RawMessage) (*StarTransactionTypeFragmentWithdrawal, error) {
	var resp StarTransactionTypeFragmentWithdrawal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeTelegramAdsWithdrawal(data json.RawMessage) (*StarTransactionTypeTelegramAdsWithdrawal, error) {
	var resp StarTransactionTypeTelegramAdsWithdrawal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeTelegramApiUsage(data json.RawMessage) (*StarTransactionTypeTelegramApiUsage, error) {
	var resp StarTransactionTypeTelegramApiUsage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBotPaidMediaPurchase(data json.RawMessage) (*StarTransactionTypeBotPaidMediaPurchase, error) {
	var resp StarTransactionTypeBotPaidMediaPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBotPaidMediaSale(data json.RawMessage) (*StarTransactionTypeBotPaidMediaSale, error) {
	var resp StarTransactionTypeBotPaidMediaSale
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeChannelPaidMediaPurchase(data json.RawMessage) (*StarTransactionTypeChannelPaidMediaPurchase, error) {
	var resp StarTransactionTypeChannelPaidMediaPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeChannelPaidMediaSale(data json.RawMessage) (*StarTransactionTypeChannelPaidMediaSale, error) {
	var resp StarTransactionTypeChannelPaidMediaSale
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBotInvoicePurchase(data json.RawMessage) (*StarTransactionTypeBotInvoicePurchase, error) {
	var resp StarTransactionTypeBotInvoicePurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBotInvoiceSale(data json.RawMessage) (*StarTransactionTypeBotInvoiceSale, error) {
	var resp StarTransactionTypeBotInvoiceSale
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBotSubscriptionPurchase(data json.RawMessage) (*StarTransactionTypeBotSubscriptionPurchase, error) {
	var resp StarTransactionTypeBotSubscriptionPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBotSubscriptionSale(data json.RawMessage) (*StarTransactionTypeBotSubscriptionSale, error) {
	var resp StarTransactionTypeBotSubscriptionSale
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeChannelSubscriptionPurchase(data json.RawMessage) (*StarTransactionTypeChannelSubscriptionPurchase, error) {
	var resp StarTransactionTypeChannelSubscriptionPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeChannelSubscriptionSale(data json.RawMessage) (*StarTransactionTypeChannelSubscriptionSale, error) {
	var resp StarTransactionTypeChannelSubscriptionSale
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeGiftPurchase(data json.RawMessage) (*StarTransactionTypeGiftPurchase, error) {
	var resp StarTransactionTypeGiftPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeGiftTransfer(data json.RawMessage) (*StarTransactionTypeGiftTransfer, error) {
	var resp StarTransactionTypeGiftTransfer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeGiftSale(data json.RawMessage) (*StarTransactionTypeGiftSale, error) {
	var resp StarTransactionTypeGiftSale
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeGiftUpgrade(data json.RawMessage) (*StarTransactionTypeGiftUpgrade, error) {
	var resp StarTransactionTypeGiftUpgrade
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeChannelPaidReactionSend(data json.RawMessage) (*StarTransactionTypeChannelPaidReactionSend, error) {
	var resp StarTransactionTypeChannelPaidReactionSend
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeChannelPaidReactionReceive(data json.RawMessage) (*StarTransactionTypeChannelPaidReactionReceive, error) {
	var resp StarTransactionTypeChannelPaidReactionReceive
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeAffiliateProgramCommission(data json.RawMessage) (*StarTransactionTypeAffiliateProgramCommission, error) {
	var resp StarTransactionTypeAffiliateProgramCommission
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypePaidMessageSend(data json.RawMessage) (*StarTransactionTypePaidMessageSend, error) {
	var resp StarTransactionTypePaidMessageSend
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypePaidMessageReceive(data json.RawMessage) (*StarTransactionTypePaidMessageReceive, error) {
	var resp StarTransactionTypePaidMessageReceive
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypePremiumPurchase(data json.RawMessage) (*StarTransactionTypePremiumPurchase, error) {
	var resp StarTransactionTypePremiumPurchase
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBusinessBotTransferSend(data json.RawMessage) (*StarTransactionTypeBusinessBotTransferSend, error) {
	var resp StarTransactionTypeBusinessBotTransferSend
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeBusinessBotTransferReceive(data json.RawMessage) (*StarTransactionTypeBusinessBotTransferReceive, error) {
	var resp StarTransactionTypeBusinessBotTransferReceive
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactionTypeUnsupported(data json.RawMessage) (*StarTransactionTypeUnsupported, error) {
	var resp StarTransactionTypeUnsupported
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransaction(data json.RawMessage) (*StarTransaction, error) {
	var resp StarTransaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarTransactions(data json.RawMessage) (*StarTransactions, error) {
	var resp StarTransactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayParticipantStatusEligible(data json.RawMessage) (*GiveawayParticipantStatusEligible, error) {
	var resp GiveawayParticipantStatusEligible
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayParticipantStatusParticipating(data json.RawMessage) (*GiveawayParticipantStatusParticipating, error) {
	var resp GiveawayParticipantStatusParticipating
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayParticipantStatusAlreadyWasMember(data json.RawMessage) (*GiveawayParticipantStatusAlreadyWasMember, error) {
	var resp GiveawayParticipantStatusAlreadyWasMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayParticipantStatusAdministrator(data json.RawMessage) (*GiveawayParticipantStatusAdministrator, error) {
	var resp GiveawayParticipantStatusAdministrator
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayParticipantStatusDisallowedCountry(data json.RawMessage) (*GiveawayParticipantStatusDisallowedCountry, error) {
	var resp GiveawayParticipantStatusDisallowedCountry
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayInfoOngoing(data json.RawMessage) (*GiveawayInfoOngoing, error) {
	var resp GiveawayInfoOngoing
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayInfoCompleted(data json.RawMessage) (*GiveawayInfoCompleted, error) {
	var resp GiveawayInfoCompleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayPrizePremium(data json.RawMessage) (*GiveawayPrizePremium, error) {
	var resp GiveawayPrizePremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayPrizeStars(data json.RawMessage) (*GiveawayPrizeStars, error) {
	var resp GiveawayPrizeStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAccentColor(data json.RawMessage) (*AccentColor, error) {
	var resp AccentColor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProfileAccentColors(data json.RawMessage) (*ProfileAccentColors, error) {
	var resp ProfileAccentColors
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProfileAccentColor(data json.RawMessage) (*ProfileAccentColor, error) {
	var resp ProfileAccentColor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiStatusTypeCustomEmoji(data json.RawMessage) (*EmojiStatusTypeCustomEmoji, error) {
	var resp EmojiStatusTypeCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiStatusTypeUpgradedGift(data json.RawMessage) (*EmojiStatusTypeUpgradedGift, error) {
	var resp EmojiStatusTypeUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiStatus(data json.RawMessage) (*EmojiStatus, error) {
	var resp EmojiStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiStatuses(data json.RawMessage) (*EmojiStatuses, error) {
	var resp EmojiStatuses
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiStatusCustomEmojis(data json.RawMessage) (*EmojiStatusCustomEmojis, error) {
	var resp EmojiStatusCustomEmojis
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUsernames(data json.RawMessage) (*Usernames, error) {
	var resp Usernames
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUser(data json.RawMessage) (*User, error) {
	var resp User
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotInfo(data json.RawMessage) (*BotInfo, error) {
	var resp BotInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserFullInfo(data json.RawMessage) (*UserFullInfo, error) {
	var resp UserFullInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUsers(data json.RawMessage) (*Users, error) {
	var resp Users
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundUsers(data json.RawMessage) (*FoundUsers, error) {
	var resp FoundUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatAdministrator(data json.RawMessage) (*ChatAdministrator, error) {
	var resp ChatAdministrator
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatAdministrators(data json.RawMessage) (*ChatAdministrators, error) {
	var resp ChatAdministrators
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMemberStatusCreator(data json.RawMessage) (*ChatMemberStatusCreator, error) {
	var resp ChatMemberStatusCreator
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMemberStatusAdministrator(data json.RawMessage) (*ChatMemberStatusAdministrator, error) {
	var resp ChatMemberStatusAdministrator
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMemberStatusMember(data json.RawMessage) (*ChatMemberStatusMember, error) {
	var resp ChatMemberStatusMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMemberStatusRestricted(data json.RawMessage) (*ChatMemberStatusRestricted, error) {
	var resp ChatMemberStatusRestricted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMemberStatusLeft(data json.RawMessage) (*ChatMemberStatusLeft, error) {
	var resp ChatMemberStatusLeft
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMemberStatusBanned(data json.RawMessage) (*ChatMemberStatusBanned, error) {
	var resp ChatMemberStatusBanned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMember(data json.RawMessage) (*ChatMember, error) {
	var resp ChatMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembers(data json.RawMessage) (*ChatMembers, error) {
	var resp ChatMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterContacts(data json.RawMessage) (*ChatMembersFilterContacts, error) {
	var resp ChatMembersFilterContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterAdministrators(data json.RawMessage) (*ChatMembersFilterAdministrators, error) {
	var resp ChatMembersFilterAdministrators
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterMembers(data json.RawMessage) (*ChatMembersFilterMembers, error) {
	var resp ChatMembersFilterMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterMention(data json.RawMessage) (*ChatMembersFilterMention, error) {
	var resp ChatMembersFilterMention
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterRestricted(data json.RawMessage) (*ChatMembersFilterRestricted, error) {
	var resp ChatMembersFilterRestricted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterBanned(data json.RawMessage) (*ChatMembersFilterBanned, error) {
	var resp ChatMembersFilterBanned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMembersFilterBots(data json.RawMessage) (*ChatMembersFilterBots, error) {
	var resp ChatMembersFilterBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterRecent(data json.RawMessage) (*SupergroupMembersFilterRecent, error) {
	var resp SupergroupMembersFilterRecent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterContacts(data json.RawMessage) (*SupergroupMembersFilterContacts, error) {
	var resp SupergroupMembersFilterContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterAdministrators(data json.RawMessage) (*SupergroupMembersFilterAdministrators, error) {
	var resp SupergroupMembersFilterAdministrators
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterSearch(data json.RawMessage) (*SupergroupMembersFilterSearch, error) {
	var resp SupergroupMembersFilterSearch
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterRestricted(data json.RawMessage) (*SupergroupMembersFilterRestricted, error) {
	var resp SupergroupMembersFilterRestricted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterBanned(data json.RawMessage) (*SupergroupMembersFilterBanned, error) {
	var resp SupergroupMembersFilterBanned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterMention(data json.RawMessage) (*SupergroupMembersFilterMention, error) {
	var resp SupergroupMembersFilterMention
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupMembersFilterBots(data json.RawMessage) (*SupergroupMembersFilterBots, error) {
	var resp SupergroupMembersFilterBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLink(data json.RawMessage) (*ChatInviteLink, error) {
	var resp ChatInviteLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinks(data json.RawMessage) (*ChatInviteLinks, error) {
	var resp ChatInviteLinks
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinkCount(data json.RawMessage) (*ChatInviteLinkCount, error) {
	var resp ChatInviteLinkCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinkCounts(data json.RawMessage) (*ChatInviteLinkCounts, error) {
	var resp ChatInviteLinkCounts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinkMember(data json.RawMessage) (*ChatInviteLinkMember, error) {
	var resp ChatInviteLinkMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinkMembers(data json.RawMessage) (*ChatInviteLinkMembers, error) {
	var resp ChatInviteLinkMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInviteLinkChatTypeBasicGroup(data json.RawMessage) (*InviteLinkChatTypeBasicGroup, error) {
	var resp InviteLinkChatTypeBasicGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInviteLinkChatTypeSupergroup(data json.RawMessage) (*InviteLinkChatTypeSupergroup, error) {
	var resp InviteLinkChatTypeSupergroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInviteLinkChatTypeChannel(data json.RawMessage) (*InviteLinkChatTypeChannel, error) {
	var resp InviteLinkChatTypeChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinkSubscriptionInfo(data json.RawMessage) (*ChatInviteLinkSubscriptionInfo, error) {
	var resp ChatInviteLinkSubscriptionInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatInviteLinkInfo(data json.RawMessage) (*ChatInviteLinkInfo, error) {
	var resp ChatInviteLinkInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatJoinRequest(data json.RawMessage) (*ChatJoinRequest, error) {
	var resp ChatJoinRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatJoinRequests(data json.RawMessage) (*ChatJoinRequests, error) {
	var resp ChatJoinRequests
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatJoinRequestsInfo(data json.RawMessage) (*ChatJoinRequestsInfo, error) {
	var resp ChatJoinRequestsInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBasicGroup(data json.RawMessage) (*BasicGroup, error) {
	var resp BasicGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBasicGroupFullInfo(data json.RawMessage) (*BasicGroupFullInfo, error) {
	var resp BasicGroupFullInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroup(data json.RawMessage) (*Supergroup, error) {
	var resp Supergroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSupergroupFullInfo(data json.RawMessage) (*SupergroupFullInfo, error) {
	var resp SupergroupFullInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSecretChatStatePending(data json.RawMessage) (*SecretChatStatePending, error) {
	var resp SecretChatStatePending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSecretChatStateReady(data json.RawMessage) (*SecretChatStateReady, error) {
	var resp SecretChatStateReady
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSecretChatStateClosed(data json.RawMessage) (*SecretChatStateClosed, error) {
	var resp SecretChatStateClosed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSecretChat(data json.RawMessage) (*SecretChat, error) {
	var resp SecretChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSenderUser(data json.RawMessage) (*MessageSenderUser, error) {
	var resp MessageSenderUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSenderChat(data json.RawMessage) (*MessageSenderChat, error) {
	var resp MessageSenderChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSenders(data json.RawMessage) (*MessageSenders, error) {
	var resp MessageSenders
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMessageSender(data json.RawMessage) (*ChatMessageSender, error) {
	var resp ChatMessageSender
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatMessageSenders(data json.RawMessage) (*ChatMessageSenders, error) {
	var resp ChatMessageSenders
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReadDateRead(data json.RawMessage) (*MessageReadDateRead, error) {
	var resp MessageReadDateRead
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReadDateUnread(data json.RawMessage) (*MessageReadDateUnread, error) {
	var resp MessageReadDateUnread
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReadDateTooOld(data json.RawMessage) (*MessageReadDateTooOld, error) {
	var resp MessageReadDateTooOld
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReadDateUserPrivacyRestricted(data json.RawMessage) (*MessageReadDateUserPrivacyRestricted, error) {
	var resp MessageReadDateUserPrivacyRestricted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReadDateMyPrivacyRestricted(data json.RawMessage) (*MessageReadDateMyPrivacyRestricted, error) {
	var resp MessageReadDateMyPrivacyRestricted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageViewer(data json.RawMessage) (*MessageViewer, error) {
	var resp MessageViewer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageViewers(data json.RawMessage) (*MessageViewers, error) {
	var resp MessageViewers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageOriginUser(data json.RawMessage) (*MessageOriginUser, error) {
	var resp MessageOriginUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageOriginHiddenUser(data json.RawMessage) (*MessageOriginHiddenUser, error) {
	var resp MessageOriginHiddenUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageOriginChat(data json.RawMessage) (*MessageOriginChat, error) {
	var resp MessageOriginChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageOriginChannel(data json.RawMessage) (*MessageOriginChannel, error) {
	var resp MessageOriginChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalForwardSource(data json.RawMessage) (*ForwardSource, error) {
	var resp ForwardSource
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionTypeEmoji(data json.RawMessage) (*ReactionTypeEmoji, error) {
	var resp ReactionTypeEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionTypeCustomEmoji(data json.RawMessage) (*ReactionTypeCustomEmoji, error) {
	var resp ReactionTypeCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionTypePaid(data json.RawMessage) (*ReactionTypePaid, error) {
	var resp ReactionTypePaid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidReactionTypeRegular(data json.RawMessage) (*PaidReactionTypeRegular, error) {
	var resp PaidReactionTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidReactionTypeAnonymous(data json.RawMessage) (*PaidReactionTypeAnonymous, error) {
	var resp PaidReactionTypeAnonymous
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidReactionTypeChat(data json.RawMessage) (*PaidReactionTypeChat, error) {
	var resp PaidReactionTypeChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidReactor(data json.RawMessage) (*PaidReactor, error) {
	var resp PaidReactor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageForwardInfo(data json.RawMessage) (*MessageForwardInfo, error) {
	var resp MessageForwardInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageImportInfo(data json.RawMessage) (*MessageImportInfo, error) {
	var resp MessageImportInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReplyInfo(data json.RawMessage) (*MessageReplyInfo, error) {
	var resp MessageReplyInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReaction(data json.RawMessage) (*MessageReaction, error) {
	var resp MessageReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReactions(data json.RawMessage) (*MessageReactions, error) {
	var resp MessageReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageInteractionInfo(data json.RawMessage) (*MessageInteractionInfo, error) {
	var resp MessageInteractionInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUnreadReaction(data json.RawMessage) (*UnreadReaction, error) {
	var resp UnreadReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageEffectTypeEmojiReaction(data json.RawMessage) (*MessageEffectTypeEmojiReaction, error) {
	var resp MessageEffectTypeEmojiReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageEffectTypePremiumSticker(data json.RawMessage) (*MessageEffectTypePremiumSticker, error) {
	var resp MessageEffectTypePremiumSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageEffect(data json.RawMessage) (*MessageEffect, error) {
	var resp MessageEffect
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSendingStatePending(data json.RawMessage) (*MessageSendingStatePending, error) {
	var resp MessageSendingStatePending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSendingStateFailed(data json.RawMessage) (*MessageSendingStateFailed, error) {
	var resp MessageSendingStateFailed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextQuote(data json.RawMessage) (*TextQuote, error) {
	var resp TextQuote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputTextQuote(data json.RawMessage) (*InputTextQuote, error) {
	var resp InputTextQuote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReplyToMessage(data json.RawMessage) (*MessageReplyToMessage, error) {
	var resp MessageReplyToMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageReplyToStory(data json.RawMessage) (*MessageReplyToStory, error) {
	var resp MessageReplyToStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageReplyToMessage(data json.RawMessage) (*InputMessageReplyToMessage, error) {
	var resp InputMessageReplyToMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageReplyToExternalMessage(data json.RawMessage) (*InputMessageReplyToExternalMessage, error) {
	var resp InputMessageReplyToExternalMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageReplyToStory(data json.RawMessage) (*InputMessageReplyToStory, error) {
	var resp InputMessageReplyToStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFactCheck(data json.RawMessage) (*FactCheck, error) {
	var resp FactCheck
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessage(data json.RawMessage) (*Message, error) {
	var resp Message
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessages(data json.RawMessage) (*Messages, error) {
	var resp Messages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundMessages(data json.RawMessage) (*FoundMessages, error) {
	var resp FoundMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundChatMessages(data json.RawMessage) (*FoundChatMessages, error) {
	var resp FoundChatMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePosition(data json.RawMessage) (*MessagePosition, error) {
	var resp MessagePosition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePositions(data json.RawMessage) (*MessagePositions, error) {
	var resp MessagePositions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageCalendarDay(data json.RawMessage) (*MessageCalendarDay, error) {
	var resp MessageCalendarDay
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageCalendar(data json.RawMessage) (*MessageCalendar, error) {
	var resp MessageCalendar
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessMessage(data json.RawMessage) (*BusinessMessage, error) {
	var resp BusinessMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessMessages(data json.RawMessage) (*BusinessMessages, error) {
	var resp BusinessMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceChatHistory(data json.RawMessage) (*MessageSourceChatHistory, error) {
	var resp MessageSourceChatHistory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceMessageThreadHistory(data json.RawMessage) (*MessageSourceMessageThreadHistory, error) {
	var resp MessageSourceMessageThreadHistory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceForumTopicHistory(data json.RawMessage) (*MessageSourceForumTopicHistory, error) {
	var resp MessageSourceForumTopicHistory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceHistoryPreview(data json.RawMessage) (*MessageSourceHistoryPreview, error) {
	var resp MessageSourceHistoryPreview
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceChatList(data json.RawMessage) (*MessageSourceChatList, error) {
	var resp MessageSourceChatList
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceSearch(data json.RawMessage) (*MessageSourceSearch, error) {
	var resp MessageSourceSearch
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceChatEventLog(data json.RawMessage) (*MessageSourceChatEventLog, error) {
	var resp MessageSourceChatEventLog
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceNotification(data json.RawMessage) (*MessageSourceNotification, error) {
	var resp MessageSourceNotification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceScreenshot(data json.RawMessage) (*MessageSourceScreenshot, error) {
	var resp MessageSourceScreenshot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSourceOther(data json.RawMessage) (*MessageSourceOther, error) {
	var resp MessageSourceOther
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSponsor(data json.RawMessage) (*MessageSponsor, error) {
	var resp MessageSponsor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSponsoredMessage(data json.RawMessage) (*SponsoredMessage, error) {
	var resp SponsoredMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSponsoredMessages(data json.RawMessage) (*SponsoredMessages, error) {
	var resp SponsoredMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSponsoredChat(data json.RawMessage) (*SponsoredChat, error) {
	var resp SponsoredChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSponsoredChats(data json.RawMessage) (*SponsoredChats, error) {
	var resp SponsoredChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportOption(data json.RawMessage) (*ReportOption, error) {
	var resp ReportOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportSponsoredResultOk(data json.RawMessage) (*ReportSponsoredResultOk, error) {
	var resp ReportSponsoredResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportSponsoredResultFailed(data json.RawMessage) (*ReportSponsoredResultFailed, error) {
	var resp ReportSponsoredResultFailed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportSponsoredResultOptionRequired(data json.RawMessage) (*ReportSponsoredResultOptionRequired, error) {
	var resp ReportSponsoredResultOptionRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportSponsoredResultAdsHidden(data json.RawMessage) (*ReportSponsoredResultAdsHidden, error) {
	var resp ReportSponsoredResultAdsHidden
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportSponsoredResultPremiumRequired(data json.RawMessage) (*ReportSponsoredResultPremiumRequired, error) {
	var resp ReportSponsoredResultPremiumRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileDownload(data json.RawMessage) (*FileDownload, error) {
	var resp FileDownload
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDownloadedFileCounts(data json.RawMessage) (*DownloadedFileCounts, error) {
	var resp DownloadedFileCounts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundFileDownloads(data json.RawMessage) (*FoundFileDownloads, error) {
	var resp FoundFileDownloads
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationSettingsScopePrivateChats(data json.RawMessage) (*NotificationSettingsScopePrivateChats, error) {
	var resp NotificationSettingsScopePrivateChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationSettingsScopeGroupChats(data json.RawMessage) (*NotificationSettingsScopeGroupChats, error) {
	var resp NotificationSettingsScopeGroupChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationSettingsScopeChannelChats(data json.RawMessage) (*NotificationSettingsScopeChannelChats, error) {
	var resp NotificationSettingsScopeChannelChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatNotificationSettings(data json.RawMessage) (*ChatNotificationSettings, error) {
	var resp ChatNotificationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalScopeNotificationSettings(data json.RawMessage) (*ScopeNotificationSettings, error) {
	var resp ScopeNotificationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionNotificationSourceNone(data json.RawMessage) (*ReactionNotificationSourceNone, error) {
	var resp ReactionNotificationSourceNone
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionNotificationSourceContacts(data json.RawMessage) (*ReactionNotificationSourceContacts, error) {
	var resp ReactionNotificationSourceContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionNotificationSourceAll(data json.RawMessage) (*ReactionNotificationSourceAll, error) {
	var resp ReactionNotificationSourceAll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionNotificationSettings(data json.RawMessage) (*ReactionNotificationSettings, error) {
	var resp ReactionNotificationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDraftMessage(data json.RawMessage) (*DraftMessage, error) {
	var resp DraftMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatTypePrivate(data json.RawMessage) (*ChatTypePrivate, error) {
	var resp ChatTypePrivate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatTypeBasicGroup(data json.RawMessage) (*ChatTypeBasicGroup, error) {
	var resp ChatTypeBasicGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatTypeSupergroup(data json.RawMessage) (*ChatTypeSupergroup, error) {
	var resp ChatTypeSupergroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatTypeSecret(data json.RawMessage) (*ChatTypeSecret, error) {
	var resp ChatTypeSecret
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolderIcon(data json.RawMessage) (*ChatFolderIcon, error) {
	var resp ChatFolderIcon
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolderName(data json.RawMessage) (*ChatFolderName, error) {
	var resp ChatFolderName
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolder(data json.RawMessage) (*ChatFolder, error) {
	var resp ChatFolder
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolderInfo(data json.RawMessage) (*ChatFolderInfo, error) {
	var resp ChatFolderInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolderInviteLink(data json.RawMessage) (*ChatFolderInviteLink, error) {
	var resp ChatFolderInviteLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolderInviteLinks(data json.RawMessage) (*ChatFolderInviteLinks, error) {
	var resp ChatFolderInviteLinks
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatFolderInviteLinkInfo(data json.RawMessage) (*ChatFolderInviteLinkInfo, error) {
	var resp ChatFolderInviteLinkInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRecommendedChatFolder(data json.RawMessage) (*RecommendedChatFolder, error) {
	var resp RecommendedChatFolder
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRecommendedChatFolders(data json.RawMessage) (*RecommendedChatFolders, error) {
	var resp RecommendedChatFolders
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalArchiveChatListSettings(data json.RawMessage) (*ArchiveChatListSettings, error) {
	var resp ArchiveChatListSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatListMain(data json.RawMessage) (*ChatListMain, error) {
	var resp ChatListMain
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatListArchive(data json.RawMessage) (*ChatListArchive, error) {
	var resp ChatListArchive
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatListFolder(data json.RawMessage) (*ChatListFolder, error) {
	var resp ChatListFolder
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatLists(data json.RawMessage) (*ChatLists, error) {
	var resp ChatLists
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatSourceMtprotoProxy(data json.RawMessage) (*ChatSourceMtprotoProxy, error) {
	var resp ChatSourceMtprotoProxy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatSourcePublicServiceAnnouncement(data json.RawMessage) (*ChatSourcePublicServiceAnnouncement, error) {
	var resp ChatSourcePublicServiceAnnouncement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatPosition(data json.RawMessage) (*ChatPosition, error) {
	var resp ChatPosition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatAvailableReactionsAll(data json.RawMessage) (*ChatAvailableReactionsAll, error) {
	var resp ChatAvailableReactionsAll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatAvailableReactionsSome(data json.RawMessage) (*ChatAvailableReactionsSome, error) {
	var resp ChatAvailableReactionsSome
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedMessagesTag(data json.RawMessage) (*SavedMessagesTag, error) {
	var resp SavedMessagesTag
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedMessagesTags(data json.RawMessage) (*SavedMessagesTags, error) {
	var resp SavedMessagesTags
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessBotManageBar(data json.RawMessage) (*BusinessBotManageBar, error) {
	var resp BusinessBotManageBar
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVideoChat(data json.RawMessage) (*VideoChat, error) {
	var resp VideoChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChat(data json.RawMessage) (*Chat, error) {
	var resp Chat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChats(data json.RawMessage) (*Chats, error) {
	var resp Chats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFailedToAddMember(data json.RawMessage) (*FailedToAddMember, error) {
	var resp FailedToAddMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFailedToAddMembers(data json.RawMessage) (*FailedToAddMembers, error) {
	var resp FailedToAddMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCreatedBasicGroupChat(data json.RawMessage) (*CreatedBasicGroupChat, error) {
	var resp CreatedBasicGroupChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPublicChatTypeHasUsername(data json.RawMessage) (*PublicChatTypeHasUsername, error) {
	var resp PublicChatTypeHasUsername
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPublicChatTypeIsLocationBased(data json.RawMessage) (*PublicChatTypeIsLocationBased, error) {
	var resp PublicChatTypeIsLocationBased
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAccountInfo(data json.RawMessage) (*AccountInfo, error) {
	var resp AccountInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionBarReportSpam(data json.RawMessage) (*ChatActionBarReportSpam, error) {
	var resp ChatActionBarReportSpam
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionBarInviteMembers(data json.RawMessage) (*ChatActionBarInviteMembers, error) {
	var resp ChatActionBarInviteMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionBarReportAddBlock(data json.RawMessage) (*ChatActionBarReportAddBlock, error) {
	var resp ChatActionBarReportAddBlock
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionBarAddContact(data json.RawMessage) (*ChatActionBarAddContact, error) {
	var resp ChatActionBarAddContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionBarSharePhoneNumber(data json.RawMessage) (*ChatActionBarSharePhoneNumber, error) {
	var resp ChatActionBarSharePhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionBarJoinRequest(data json.RawMessage) (*ChatActionBarJoinRequest, error) {
	var resp ChatActionBarJoinRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeText(data json.RawMessage) (*KeyboardButtonTypeText, error) {
	var resp KeyboardButtonTypeText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeRequestPhoneNumber(data json.RawMessage) (*KeyboardButtonTypeRequestPhoneNumber, error) {
	var resp KeyboardButtonTypeRequestPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeRequestLocation(data json.RawMessage) (*KeyboardButtonTypeRequestLocation, error) {
	var resp KeyboardButtonTypeRequestLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeRequestPoll(data json.RawMessage) (*KeyboardButtonTypeRequestPoll, error) {
	var resp KeyboardButtonTypeRequestPoll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeRequestUsers(data json.RawMessage) (*KeyboardButtonTypeRequestUsers, error) {
	var resp KeyboardButtonTypeRequestUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeRequestChat(data json.RawMessage) (*KeyboardButtonTypeRequestChat, error) {
	var resp KeyboardButtonTypeRequestChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButtonTypeWebApp(data json.RawMessage) (*KeyboardButtonTypeWebApp, error) {
	var resp KeyboardButtonTypeWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalKeyboardButton(data json.RawMessage) (*KeyboardButton, error) {
	var resp KeyboardButton
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeUrl(data json.RawMessage) (*InlineKeyboardButtonTypeUrl, error) {
	var resp InlineKeyboardButtonTypeUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeLoginUrl(data json.RawMessage) (*InlineKeyboardButtonTypeLoginUrl, error) {
	var resp InlineKeyboardButtonTypeLoginUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeWebApp(data json.RawMessage) (*InlineKeyboardButtonTypeWebApp, error) {
	var resp InlineKeyboardButtonTypeWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeCallback(data json.RawMessage) (*InlineKeyboardButtonTypeCallback, error) {
	var resp InlineKeyboardButtonTypeCallback
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeCallbackWithPassword(data json.RawMessage) (*InlineKeyboardButtonTypeCallbackWithPassword, error) {
	var resp InlineKeyboardButtonTypeCallbackWithPassword
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeCallbackGame(data json.RawMessage) (*InlineKeyboardButtonTypeCallbackGame, error) {
	var resp InlineKeyboardButtonTypeCallbackGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeSwitchInline(data json.RawMessage) (*InlineKeyboardButtonTypeSwitchInline, error) {
	var resp InlineKeyboardButtonTypeSwitchInline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeBuy(data json.RawMessage) (*InlineKeyboardButtonTypeBuy, error) {
	var resp InlineKeyboardButtonTypeBuy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeUser(data json.RawMessage) (*InlineKeyboardButtonTypeUser, error) {
	var resp InlineKeyboardButtonTypeUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButtonTypeCopyText(data json.RawMessage) (*InlineKeyboardButtonTypeCopyText, error) {
	var resp InlineKeyboardButtonTypeCopyText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineKeyboardButton(data json.RawMessage) (*InlineKeyboardButton, error) {
	var resp InlineKeyboardButton
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReplyMarkupRemoveKeyboard(data json.RawMessage) (*ReplyMarkupRemoveKeyboard, error) {
	var resp ReplyMarkupRemoveKeyboard
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReplyMarkupForceReply(data json.RawMessage) (*ReplyMarkupForceReply, error) {
	var resp ReplyMarkupForceReply
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReplyMarkupShowKeyboard(data json.RawMessage) (*ReplyMarkupShowKeyboard, error) {
	var resp ReplyMarkupShowKeyboard
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReplyMarkupInlineKeyboard(data json.RawMessage) (*ReplyMarkupInlineKeyboard, error) {
	var resp ReplyMarkupInlineKeyboard
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLoginUrlInfoOpen(data json.RawMessage) (*LoginUrlInfoOpen, error) {
	var resp LoginUrlInfoOpen
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLoginUrlInfoRequestConfirmation(data json.RawMessage) (*LoginUrlInfoRequestConfirmation, error) {
	var resp LoginUrlInfoRequestConfirmation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThemeParameters(data json.RawMessage) (*ThemeParameters, error) {
	var resp ThemeParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebAppOpenModeCompact(data json.RawMessage) (*WebAppOpenModeCompact, error) {
	var resp WebAppOpenModeCompact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebAppOpenModeFullSize(data json.RawMessage) (*WebAppOpenModeFullSize, error) {
	var resp WebAppOpenModeFullSize
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebAppOpenModeFullScreen(data json.RawMessage) (*WebAppOpenModeFullScreen, error) {
	var resp WebAppOpenModeFullScreen
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundWebApp(data json.RawMessage) (*FoundWebApp, error) {
	var resp FoundWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebAppInfo(data json.RawMessage) (*WebAppInfo, error) {
	var resp WebAppInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMainWebApp(data json.RawMessage) (*MainWebApp, error) {
	var resp MainWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebAppOpenParameters(data json.RawMessage) (*WebAppOpenParameters, error) {
	var resp WebAppOpenParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageThreadInfo(data json.RawMessage) (*MessageThreadInfo, error) {
	var resp MessageThreadInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedMessagesTopicTypeMyNotes(data json.RawMessage) (*SavedMessagesTopicTypeMyNotes, error) {
	var resp SavedMessagesTopicTypeMyNotes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedMessagesTopicTypeAuthorHidden(data json.RawMessage) (*SavedMessagesTopicTypeAuthorHidden, error) {
	var resp SavedMessagesTopicTypeAuthorHidden
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedMessagesTopicTypeSavedFromChat(data json.RawMessage) (*SavedMessagesTopicTypeSavedFromChat, error) {
	var resp SavedMessagesTopicTypeSavedFromChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedMessagesTopic(data json.RawMessage) (*SavedMessagesTopic, error) {
	var resp SavedMessagesTopic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalForumTopicIcon(data json.RawMessage) (*ForumTopicIcon, error) {
	var resp ForumTopicIcon
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalForumTopicInfo(data json.RawMessage) (*ForumTopicInfo, error) {
	var resp ForumTopicInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalForumTopic(data json.RawMessage) (*ForumTopic, error) {
	var resp ForumTopic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalForumTopics(data json.RawMessage) (*ForumTopics, error) {
	var resp ForumTopics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewOptions(data json.RawMessage) (*LinkPreviewOptions, error) {
	var resp LinkPreviewOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSharedUser(data json.RawMessage) (*SharedUser, error) {
	var resp SharedUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSharedChat(data json.RawMessage) (*SharedChat, error) {
	var resp SharedChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalThemeSettings(data json.RawMessage) (*ThemeSettings, error) {
	var resp ThemeSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextPlain(data json.RawMessage) (*RichTextPlain, error) {
	var resp RichTextPlain
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextBold(data json.RawMessage) (*RichTextBold, error) {
	var resp RichTextBold
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextItalic(data json.RawMessage) (*RichTextItalic, error) {
	var resp RichTextItalic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextUnderline(data json.RawMessage) (*RichTextUnderline, error) {
	var resp RichTextUnderline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextStrikethrough(data json.RawMessage) (*RichTextStrikethrough, error) {
	var resp RichTextStrikethrough
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextFixed(data json.RawMessage) (*RichTextFixed, error) {
	var resp RichTextFixed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextUrl(data json.RawMessage) (*RichTextUrl, error) {
	var resp RichTextUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextEmailAddress(data json.RawMessage) (*RichTextEmailAddress, error) {
	var resp RichTextEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextSubscript(data json.RawMessage) (*RichTextSubscript, error) {
	var resp RichTextSubscript
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextSuperscript(data json.RawMessage) (*RichTextSuperscript, error) {
	var resp RichTextSuperscript
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextMarked(data json.RawMessage) (*RichTextMarked, error) {
	var resp RichTextMarked
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextPhoneNumber(data json.RawMessage) (*RichTextPhoneNumber, error) {
	var resp RichTextPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextIcon(data json.RawMessage) (*RichTextIcon, error) {
	var resp RichTextIcon
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextReference(data json.RawMessage) (*RichTextReference, error) {
	var resp RichTextReference
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextAnchor(data json.RawMessage) (*RichTextAnchor, error) {
	var resp RichTextAnchor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTextAnchorLink(data json.RawMessage) (*RichTextAnchorLink, error) {
	var resp RichTextAnchorLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRichTexts(data json.RawMessage) (*RichTexts, error) {
	var resp RichTexts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockCaption(data json.RawMessage) (*PageBlockCaption, error) {
	var resp PageBlockCaption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockListItem(data json.RawMessage) (*PageBlockListItem, error) {
	var resp PageBlockListItem
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockHorizontalAlignmentLeft(data json.RawMessage) (*PageBlockHorizontalAlignmentLeft, error) {
	var resp PageBlockHorizontalAlignmentLeft
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockHorizontalAlignmentCenter(data json.RawMessage) (*PageBlockHorizontalAlignmentCenter, error) {
	var resp PageBlockHorizontalAlignmentCenter
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockHorizontalAlignmentRight(data json.RawMessage) (*PageBlockHorizontalAlignmentRight, error) {
	var resp PageBlockHorizontalAlignmentRight
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockVerticalAlignmentTop(data json.RawMessage) (*PageBlockVerticalAlignmentTop, error) {
	var resp PageBlockVerticalAlignmentTop
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockVerticalAlignmentMiddle(data json.RawMessage) (*PageBlockVerticalAlignmentMiddle, error) {
	var resp PageBlockVerticalAlignmentMiddle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockVerticalAlignmentBottom(data json.RawMessage) (*PageBlockVerticalAlignmentBottom, error) {
	var resp PageBlockVerticalAlignmentBottom
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockTableCell(data json.RawMessage) (*PageBlockTableCell, error) {
	var resp PageBlockTableCell
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockRelatedArticle(data json.RawMessage) (*PageBlockRelatedArticle, error) {
	var resp PageBlockRelatedArticle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockTitle(data json.RawMessage) (*PageBlockTitle, error) {
	var resp PageBlockTitle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockSubtitle(data json.RawMessage) (*PageBlockSubtitle, error) {
	var resp PageBlockSubtitle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockAuthorDate(data json.RawMessage) (*PageBlockAuthorDate, error) {
	var resp PageBlockAuthorDate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockHeader(data json.RawMessage) (*PageBlockHeader, error) {
	var resp PageBlockHeader
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockSubheader(data json.RawMessage) (*PageBlockSubheader, error) {
	var resp PageBlockSubheader
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockKicker(data json.RawMessage) (*PageBlockKicker, error) {
	var resp PageBlockKicker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockParagraph(data json.RawMessage) (*PageBlockParagraph, error) {
	var resp PageBlockParagraph
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockPreformatted(data json.RawMessage) (*PageBlockPreformatted, error) {
	var resp PageBlockPreformatted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockFooter(data json.RawMessage) (*PageBlockFooter, error) {
	var resp PageBlockFooter
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockDivider(data json.RawMessage) (*PageBlockDivider, error) {
	var resp PageBlockDivider
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockAnchor(data json.RawMessage) (*PageBlockAnchor, error) {
	var resp PageBlockAnchor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockList(data json.RawMessage) (*PageBlockList, error) {
	var resp PageBlockList
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockBlockQuote(data json.RawMessage) (*PageBlockBlockQuote, error) {
	var resp PageBlockBlockQuote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockPullQuote(data json.RawMessage) (*PageBlockPullQuote, error) {
	var resp PageBlockPullQuote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockAnimation(data json.RawMessage) (*PageBlockAnimation, error) {
	var resp PageBlockAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockAudio(data json.RawMessage) (*PageBlockAudio, error) {
	var resp PageBlockAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockPhoto(data json.RawMessage) (*PageBlockPhoto, error) {
	var resp PageBlockPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockVideo(data json.RawMessage) (*PageBlockVideo, error) {
	var resp PageBlockVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockVoiceNote(data json.RawMessage) (*PageBlockVoiceNote, error) {
	var resp PageBlockVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockCover(data json.RawMessage) (*PageBlockCover, error) {
	var resp PageBlockCover
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockEmbedded(data json.RawMessage) (*PageBlockEmbedded, error) {
	var resp PageBlockEmbedded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockEmbeddedPost(data json.RawMessage) (*PageBlockEmbeddedPost, error) {
	var resp PageBlockEmbeddedPost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockCollage(data json.RawMessage) (*PageBlockCollage, error) {
	var resp PageBlockCollage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockSlideshow(data json.RawMessage) (*PageBlockSlideshow, error) {
	var resp PageBlockSlideshow
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockChatLink(data json.RawMessage) (*PageBlockChatLink, error) {
	var resp PageBlockChatLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockTable(data json.RawMessage) (*PageBlockTable, error) {
	var resp PageBlockTable
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockDetails(data json.RawMessage) (*PageBlockDetails, error) {
	var resp PageBlockDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockRelatedArticles(data json.RawMessage) (*PageBlockRelatedArticles, error) {
	var resp PageBlockRelatedArticles
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPageBlockMap(data json.RawMessage) (*PageBlockMap, error) {
	var resp PageBlockMap
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalWebPageInstantView(data json.RawMessage) (*WebPageInstantView, error) {
	var resp WebPageInstantView
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewAlbumMediaPhoto(data json.RawMessage) (*LinkPreviewAlbumMediaPhoto, error) {
	var resp LinkPreviewAlbumMediaPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewAlbumMediaVideo(data json.RawMessage) (*LinkPreviewAlbumMediaVideo, error) {
	var resp LinkPreviewAlbumMediaVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeAlbum(data json.RawMessage) (*LinkPreviewTypeAlbum, error) {
	var resp LinkPreviewTypeAlbum
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeAnimation(data json.RawMessage) (*LinkPreviewTypeAnimation, error) {
	var resp LinkPreviewTypeAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeApp(data json.RawMessage) (*LinkPreviewTypeApp, error) {
	var resp LinkPreviewTypeApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeArticle(data json.RawMessage) (*LinkPreviewTypeArticle, error) {
	var resp LinkPreviewTypeArticle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeAudio(data json.RawMessage) (*LinkPreviewTypeAudio, error) {
	var resp LinkPreviewTypeAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeBackground(data json.RawMessage) (*LinkPreviewTypeBackground, error) {
	var resp LinkPreviewTypeBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeChannelBoost(data json.RawMessage) (*LinkPreviewTypeChannelBoost, error) {
	var resp LinkPreviewTypeChannelBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeChat(data json.RawMessage) (*LinkPreviewTypeChat, error) {
	var resp LinkPreviewTypeChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeDocument(data json.RawMessage) (*LinkPreviewTypeDocument, error) {
	var resp LinkPreviewTypeDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeEmbeddedAnimationPlayer(data json.RawMessage) (*LinkPreviewTypeEmbeddedAnimationPlayer, error) {
	var resp LinkPreviewTypeEmbeddedAnimationPlayer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeEmbeddedAudioPlayer(data json.RawMessage) (*LinkPreviewTypeEmbeddedAudioPlayer, error) {
	var resp LinkPreviewTypeEmbeddedAudioPlayer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeEmbeddedVideoPlayer(data json.RawMessage) (*LinkPreviewTypeEmbeddedVideoPlayer, error) {
	var resp LinkPreviewTypeEmbeddedVideoPlayer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeExternalAudio(data json.RawMessage) (*LinkPreviewTypeExternalAudio, error) {
	var resp LinkPreviewTypeExternalAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeExternalVideo(data json.RawMessage) (*LinkPreviewTypeExternalVideo, error) {
	var resp LinkPreviewTypeExternalVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeInvoice(data json.RawMessage) (*LinkPreviewTypeInvoice, error) {
	var resp LinkPreviewTypeInvoice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeMessage(data json.RawMessage) (*LinkPreviewTypeMessage, error) {
	var resp LinkPreviewTypeMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypePhoto(data json.RawMessage) (*LinkPreviewTypePhoto, error) {
	var resp LinkPreviewTypePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypePremiumGiftCode(data json.RawMessage) (*LinkPreviewTypePremiumGiftCode, error) {
	var resp LinkPreviewTypePremiumGiftCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeShareableChatFolder(data json.RawMessage) (*LinkPreviewTypeShareableChatFolder, error) {
	var resp LinkPreviewTypeShareableChatFolder
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeSticker(data json.RawMessage) (*LinkPreviewTypeSticker, error) {
	var resp LinkPreviewTypeSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeStickerSet(data json.RawMessage) (*LinkPreviewTypeStickerSet, error) {
	var resp LinkPreviewTypeStickerSet
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeStory(data json.RawMessage) (*LinkPreviewTypeStory, error) {
	var resp LinkPreviewTypeStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeSupergroupBoost(data json.RawMessage) (*LinkPreviewTypeSupergroupBoost, error) {
	var resp LinkPreviewTypeSupergroupBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeTheme(data json.RawMessage) (*LinkPreviewTypeTheme, error) {
	var resp LinkPreviewTypeTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeUnsupported(data json.RawMessage) (*LinkPreviewTypeUnsupported, error) {
	var resp LinkPreviewTypeUnsupported
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeUpgradedGift(data json.RawMessage) (*LinkPreviewTypeUpgradedGift, error) {
	var resp LinkPreviewTypeUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeUser(data json.RawMessage) (*LinkPreviewTypeUser, error) {
	var resp LinkPreviewTypeUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeVideo(data json.RawMessage) (*LinkPreviewTypeVideo, error) {
	var resp LinkPreviewTypeVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeVideoChat(data json.RawMessage) (*LinkPreviewTypeVideoChat, error) {
	var resp LinkPreviewTypeVideoChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeVideoNote(data json.RawMessage) (*LinkPreviewTypeVideoNote, error) {
	var resp LinkPreviewTypeVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeVoiceNote(data json.RawMessage) (*LinkPreviewTypeVoiceNote, error) {
	var resp LinkPreviewTypeVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreviewTypeWebApp(data json.RawMessage) (*LinkPreviewTypeWebApp, error) {
	var resp LinkPreviewTypeWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLinkPreview(data json.RawMessage) (*LinkPreview, error) {
	var resp LinkPreview
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCountryInfo(data json.RawMessage) (*CountryInfo, error) {
	var resp CountryInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCountries(data json.RawMessage) (*Countries, error) {
	var resp Countries
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhoneNumberInfo(data json.RawMessage) (*PhoneNumberInfo, error) {
	var resp PhoneNumberInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCollectibleItemTypeUsername(data json.RawMessage) (*CollectibleItemTypeUsername, error) {
	var resp CollectibleItemTypeUsername
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCollectibleItemTypePhoneNumber(data json.RawMessage) (*CollectibleItemTypePhoneNumber, error) {
	var resp CollectibleItemTypePhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCollectibleItemInfo(data json.RawMessage) (*CollectibleItemInfo, error) {
	var resp CollectibleItemInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBankCardActionOpenUrl(data json.RawMessage) (*BankCardActionOpenUrl, error) {
	var resp BankCardActionOpenUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBankCardInfo(data json.RawMessage) (*BankCardInfo, error) {
	var resp BankCardInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAddress(data json.RawMessage) (*Address, error) {
	var resp Address
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLocationAddress(data json.RawMessage) (*LocationAddress, error) {
	var resp LocationAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLabeledPricePart(data json.RawMessage) (*LabeledPricePart, error) {
	var resp LabeledPricePart
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInvoice(data json.RawMessage) (*Invoice, error) {
	var resp Invoice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOrderInfo(data json.RawMessage) (*OrderInfo, error) {
	var resp OrderInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalShippingOption(data json.RawMessage) (*ShippingOption, error) {
	var resp ShippingOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSavedCredentials(data json.RawMessage) (*SavedCredentials, error) {
	var resp SavedCredentials
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputCredentialsSaved(data json.RawMessage) (*InputCredentialsSaved, error) {
	var resp InputCredentialsSaved
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputCredentialsNew(data json.RawMessage) (*InputCredentialsNew, error) {
	var resp InputCredentialsNew
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputCredentialsApplePay(data json.RawMessage) (*InputCredentialsApplePay, error) {
	var resp InputCredentialsApplePay
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputCredentialsGooglePay(data json.RawMessage) (*InputCredentialsGooglePay, error) {
	var resp InputCredentialsGooglePay
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentProviderSmartGlocal(data json.RawMessage) (*PaymentProviderSmartGlocal, error) {
	var resp PaymentProviderSmartGlocal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentProviderStripe(data json.RawMessage) (*PaymentProviderStripe, error) {
	var resp PaymentProviderStripe
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentProviderOther(data json.RawMessage) (*PaymentProviderOther, error) {
	var resp PaymentProviderOther
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentOption(data json.RawMessage) (*PaymentOption, error) {
	var resp PaymentOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentFormTypeRegular(data json.RawMessage) (*PaymentFormTypeRegular, error) {
	var resp PaymentFormTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentFormTypeStars(data json.RawMessage) (*PaymentFormTypeStars, error) {
	var resp PaymentFormTypeStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentFormTypeStarSubscription(data json.RawMessage) (*PaymentFormTypeStarSubscription, error) {
	var resp PaymentFormTypeStarSubscription
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentForm(data json.RawMessage) (*PaymentForm, error) {
	var resp PaymentForm
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalValidatedOrderInfo(data json.RawMessage) (*ValidatedOrderInfo, error) {
	var resp ValidatedOrderInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentResult(data json.RawMessage) (*PaymentResult, error) {
	var resp PaymentResult
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentReceiptTypeRegular(data json.RawMessage) (*PaymentReceiptTypeRegular, error) {
	var resp PaymentReceiptTypeRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentReceiptTypeStars(data json.RawMessage) (*PaymentReceiptTypeStars, error) {
	var resp PaymentReceiptTypeStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaymentReceipt(data json.RawMessage) (*PaymentReceipt, error) {
	var resp PaymentReceipt
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInvoiceMessage(data json.RawMessage) (*InputInvoiceMessage, error) {
	var resp InputInvoiceMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInvoiceName(data json.RawMessage) (*InputInvoiceName, error) {
	var resp InputInvoiceName
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInvoiceTelegram(data json.RawMessage) (*InputInvoiceTelegram, error) {
	var resp InputInvoiceTelegram
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidMediaPreview(data json.RawMessage) (*PaidMediaPreview, error) {
	var resp PaidMediaPreview
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidMediaPhoto(data json.RawMessage) (*PaidMediaPhoto, error) {
	var resp PaidMediaPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidMediaVideo(data json.RawMessage) (*PaidMediaVideo, error) {
	var resp PaidMediaVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPaidMediaUnsupported(data json.RawMessage) (*PaidMediaUnsupported, error) {
	var resp PaidMediaUnsupported
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGiveawayParameters(data json.RawMessage) (*GiveawayParameters, error) {
	var resp GiveawayParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDatedFile(data json.RawMessage) (*DatedFile, error) {
	var resp DatedFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypePersonalDetails(data json.RawMessage) (*PassportElementTypePersonalDetails, error) {
	var resp PassportElementTypePersonalDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypePassport(data json.RawMessage) (*PassportElementTypePassport, error) {
	var resp PassportElementTypePassport
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeDriverLicense(data json.RawMessage) (*PassportElementTypeDriverLicense, error) {
	var resp PassportElementTypeDriverLicense
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeIdentityCard(data json.RawMessage) (*PassportElementTypeIdentityCard, error) {
	var resp PassportElementTypeIdentityCard
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeInternalPassport(data json.RawMessage) (*PassportElementTypeInternalPassport, error) {
	var resp PassportElementTypeInternalPassport
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeAddress(data json.RawMessage) (*PassportElementTypeAddress, error) {
	var resp PassportElementTypeAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeUtilityBill(data json.RawMessage) (*PassportElementTypeUtilityBill, error) {
	var resp PassportElementTypeUtilityBill
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeBankStatement(data json.RawMessage) (*PassportElementTypeBankStatement, error) {
	var resp PassportElementTypeBankStatement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeRentalAgreement(data json.RawMessage) (*PassportElementTypeRentalAgreement, error) {
	var resp PassportElementTypeRentalAgreement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypePassportRegistration(data json.RawMessage) (*PassportElementTypePassportRegistration, error) {
	var resp PassportElementTypePassportRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeTemporaryRegistration(data json.RawMessage) (*PassportElementTypeTemporaryRegistration, error) {
	var resp PassportElementTypeTemporaryRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypePhoneNumber(data json.RawMessage) (*PassportElementTypePhoneNumber, error) {
	var resp PassportElementTypePhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTypeEmailAddress(data json.RawMessage) (*PassportElementTypeEmailAddress, error) {
	var resp PassportElementTypeEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDate(data json.RawMessage) (*Date, error) {
	var resp Date
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPersonalDetails(data json.RawMessage) (*PersonalDetails, error) {
	var resp PersonalDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalIdentityDocument(data json.RawMessage) (*IdentityDocument, error) {
	var resp IdentityDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputIdentityDocument(data json.RawMessage) (*InputIdentityDocument, error) {
	var resp InputIdentityDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPersonalDocument(data json.RawMessage) (*PersonalDocument, error) {
	var resp PersonalDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPersonalDocument(data json.RawMessage) (*InputPersonalDocument, error) {
	var resp InputPersonalDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementPersonalDetails(data json.RawMessage) (*PassportElementPersonalDetails, error) {
	var resp PassportElementPersonalDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementPassport(data json.RawMessage) (*PassportElementPassport, error) {
	var resp PassportElementPassport
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementDriverLicense(data json.RawMessage) (*PassportElementDriverLicense, error) {
	var resp PassportElementDriverLicense
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementIdentityCard(data json.RawMessage) (*PassportElementIdentityCard, error) {
	var resp PassportElementIdentityCard
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementInternalPassport(data json.RawMessage) (*PassportElementInternalPassport, error) {
	var resp PassportElementInternalPassport
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementAddress(data json.RawMessage) (*PassportElementAddress, error) {
	var resp PassportElementAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementUtilityBill(data json.RawMessage) (*PassportElementUtilityBill, error) {
	var resp PassportElementUtilityBill
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementBankStatement(data json.RawMessage) (*PassportElementBankStatement, error) {
	var resp PassportElementBankStatement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementRentalAgreement(data json.RawMessage) (*PassportElementRentalAgreement, error) {
	var resp PassportElementRentalAgreement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementPassportRegistration(data json.RawMessage) (*PassportElementPassportRegistration, error) {
	var resp PassportElementPassportRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementTemporaryRegistration(data json.RawMessage) (*PassportElementTemporaryRegistration, error) {
	var resp PassportElementTemporaryRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementPhoneNumber(data json.RawMessage) (*PassportElementPhoneNumber, error) {
	var resp PassportElementPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementEmailAddress(data json.RawMessage) (*PassportElementEmailAddress, error) {
	var resp PassportElementEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementPersonalDetails(data json.RawMessage) (*InputPassportElementPersonalDetails, error) {
	var resp InputPassportElementPersonalDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementPassport(data json.RawMessage) (*InputPassportElementPassport, error) {
	var resp InputPassportElementPassport
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementDriverLicense(data json.RawMessage) (*InputPassportElementDriverLicense, error) {
	var resp InputPassportElementDriverLicense
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementIdentityCard(data json.RawMessage) (*InputPassportElementIdentityCard, error) {
	var resp InputPassportElementIdentityCard
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementInternalPassport(data json.RawMessage) (*InputPassportElementInternalPassport, error) {
	var resp InputPassportElementInternalPassport
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementAddress(data json.RawMessage) (*InputPassportElementAddress, error) {
	var resp InputPassportElementAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementUtilityBill(data json.RawMessage) (*InputPassportElementUtilityBill, error) {
	var resp InputPassportElementUtilityBill
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementBankStatement(data json.RawMessage) (*InputPassportElementBankStatement, error) {
	var resp InputPassportElementBankStatement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementRentalAgreement(data json.RawMessage) (*InputPassportElementRentalAgreement, error) {
	var resp InputPassportElementRentalAgreement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementPassportRegistration(data json.RawMessage) (*InputPassportElementPassportRegistration, error) {
	var resp InputPassportElementPassportRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementTemporaryRegistration(data json.RawMessage) (*InputPassportElementTemporaryRegistration, error) {
	var resp InputPassportElementTemporaryRegistration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementPhoneNumber(data json.RawMessage) (*InputPassportElementPhoneNumber, error) {
	var resp InputPassportElementPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementEmailAddress(data json.RawMessage) (*InputPassportElementEmailAddress, error) {
	var resp InputPassportElementEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElements(data json.RawMessage) (*PassportElements, error) {
	var resp PassportElements
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceUnspecified(data json.RawMessage) (*PassportElementErrorSourceUnspecified, error) {
	var resp PassportElementErrorSourceUnspecified
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceDataField(data json.RawMessage) (*PassportElementErrorSourceDataField, error) {
	var resp PassportElementErrorSourceDataField
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceFrontSide(data json.RawMessage) (*PassportElementErrorSourceFrontSide, error) {
	var resp PassportElementErrorSourceFrontSide
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceReverseSide(data json.RawMessage) (*PassportElementErrorSourceReverseSide, error) {
	var resp PassportElementErrorSourceReverseSide
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceSelfie(data json.RawMessage) (*PassportElementErrorSourceSelfie, error) {
	var resp PassportElementErrorSourceSelfie
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceTranslationFile(data json.RawMessage) (*PassportElementErrorSourceTranslationFile, error) {
	var resp PassportElementErrorSourceTranslationFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceTranslationFiles(data json.RawMessage) (*PassportElementErrorSourceTranslationFiles, error) {
	var resp PassportElementErrorSourceTranslationFiles
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceFile(data json.RawMessage) (*PassportElementErrorSourceFile, error) {
	var resp PassportElementErrorSourceFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementErrorSourceFiles(data json.RawMessage) (*PassportElementErrorSourceFiles, error) {
	var resp PassportElementErrorSourceFiles
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementError(data json.RawMessage) (*PassportElementError, error) {
	var resp PassportElementError
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportSuitableElement(data json.RawMessage) (*PassportSuitableElement, error) {
	var resp PassportSuitableElement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportRequiredElement(data json.RawMessage) (*PassportRequiredElement, error) {
	var resp PassportRequiredElement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportAuthorizationForm(data json.RawMessage) (*PassportAuthorizationForm, error) {
	var resp PassportAuthorizationForm
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPassportElementsWithErrors(data json.RawMessage) (*PassportElementsWithErrors, error) {
	var resp PassportElementsWithErrors
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEncryptedCredentials(data json.RawMessage) (*EncryptedCredentials, error) {
	var resp EncryptedCredentials
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEncryptedPassportElement(data json.RawMessage) (*EncryptedPassportElement, error) {
	var resp EncryptedPassportElement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceUnspecified(data json.RawMessage) (*InputPassportElementErrorSourceUnspecified, error) {
	var resp InputPassportElementErrorSourceUnspecified
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceDataField(data json.RawMessage) (*InputPassportElementErrorSourceDataField, error) {
	var resp InputPassportElementErrorSourceDataField
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceFrontSide(data json.RawMessage) (*InputPassportElementErrorSourceFrontSide, error) {
	var resp InputPassportElementErrorSourceFrontSide
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceReverseSide(data json.RawMessage) (*InputPassportElementErrorSourceReverseSide, error) {
	var resp InputPassportElementErrorSourceReverseSide
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceSelfie(data json.RawMessage) (*InputPassportElementErrorSourceSelfie, error) {
	var resp InputPassportElementErrorSourceSelfie
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceTranslationFile(data json.RawMessage) (*InputPassportElementErrorSourceTranslationFile, error) {
	var resp InputPassportElementErrorSourceTranslationFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceTranslationFiles(data json.RawMessage) (*InputPassportElementErrorSourceTranslationFiles, error) {
	var resp InputPassportElementErrorSourceTranslationFiles
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceFile(data json.RawMessage) (*InputPassportElementErrorSourceFile, error) {
	var resp InputPassportElementErrorSourceFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementErrorSourceFiles(data json.RawMessage) (*InputPassportElementErrorSourceFiles, error) {
	var resp InputPassportElementErrorSourceFiles
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPassportElementError(data json.RawMessage) (*InputPassportElementError, error) {
	var resp InputPassportElementError
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageText(data json.RawMessage) (*MessageText, error) {
	var resp MessageText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageAnimation(data json.RawMessage) (*MessageAnimation, error) {
	var resp MessageAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageAudio(data json.RawMessage) (*MessageAudio, error) {
	var resp MessageAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageDocument(data json.RawMessage) (*MessageDocument, error) {
	var resp MessageDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePaidMedia(data json.RawMessage) (*MessagePaidMedia, error) {
	var resp MessagePaidMedia
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePhoto(data json.RawMessage) (*MessagePhoto, error) {
	var resp MessagePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSticker(data json.RawMessage) (*MessageSticker, error) {
	var resp MessageSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVideo(data json.RawMessage) (*MessageVideo, error) {
	var resp MessageVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVideoNote(data json.RawMessage) (*MessageVideoNote, error) {
	var resp MessageVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVoiceNote(data json.RawMessage) (*MessageVoiceNote, error) {
	var resp MessageVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageExpiredPhoto(data json.RawMessage) (*MessageExpiredPhoto, error) {
	var resp MessageExpiredPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageExpiredVideo(data json.RawMessage) (*MessageExpiredVideo, error) {
	var resp MessageExpiredVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageExpiredVideoNote(data json.RawMessage) (*MessageExpiredVideoNote, error) {
	var resp MessageExpiredVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageExpiredVoiceNote(data json.RawMessage) (*MessageExpiredVoiceNote, error) {
	var resp MessageExpiredVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageLocation(data json.RawMessage) (*MessageLocation, error) {
	var resp MessageLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVenue(data json.RawMessage) (*MessageVenue, error) {
	var resp MessageVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageContact(data json.RawMessage) (*MessageContact, error) {
	var resp MessageContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageAnimatedEmoji(data json.RawMessage) (*MessageAnimatedEmoji, error) {
	var resp MessageAnimatedEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageDice(data json.RawMessage) (*MessageDice, error) {
	var resp MessageDice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGame(data json.RawMessage) (*MessageGame, error) {
	var resp MessageGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePoll(data json.RawMessage) (*MessagePoll, error) {
	var resp MessagePoll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageStory(data json.RawMessage) (*MessageStory, error) {
	var resp MessageStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageInvoice(data json.RawMessage) (*MessageInvoice, error) {
	var resp MessageInvoice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageCall(data json.RawMessage) (*MessageCall, error) {
	var resp MessageCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVideoChatScheduled(data json.RawMessage) (*MessageVideoChatScheduled, error) {
	var resp MessageVideoChatScheduled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVideoChatStarted(data json.RawMessage) (*MessageVideoChatStarted, error) {
	var resp MessageVideoChatStarted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageVideoChatEnded(data json.RawMessage) (*MessageVideoChatEnded, error) {
	var resp MessageVideoChatEnded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageInviteVideoChatParticipants(data json.RawMessage) (*MessageInviteVideoChatParticipants, error) {
	var resp MessageInviteVideoChatParticipants
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageBasicGroupChatCreate(data json.RawMessage) (*MessageBasicGroupChatCreate, error) {
	var resp MessageBasicGroupChatCreate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSupergroupChatCreate(data json.RawMessage) (*MessageSupergroupChatCreate, error) {
	var resp MessageSupergroupChatCreate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatChangeTitle(data json.RawMessage) (*MessageChatChangeTitle, error) {
	var resp MessageChatChangeTitle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatChangePhoto(data json.RawMessage) (*MessageChatChangePhoto, error) {
	var resp MessageChatChangePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatDeletePhoto(data json.RawMessage) (*MessageChatDeletePhoto, error) {
	var resp MessageChatDeletePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatAddMembers(data json.RawMessage) (*MessageChatAddMembers, error) {
	var resp MessageChatAddMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatJoinByLink(data json.RawMessage) (*MessageChatJoinByLink, error) {
	var resp MessageChatJoinByLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatJoinByRequest(data json.RawMessage) (*MessageChatJoinByRequest, error) {
	var resp MessageChatJoinByRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatDeleteMember(data json.RawMessage) (*MessageChatDeleteMember, error) {
	var resp MessageChatDeleteMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatUpgradeTo(data json.RawMessage) (*MessageChatUpgradeTo, error) {
	var resp MessageChatUpgradeTo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatUpgradeFrom(data json.RawMessage) (*MessageChatUpgradeFrom, error) {
	var resp MessageChatUpgradeFrom
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePinMessage(data json.RawMessage) (*MessagePinMessage, error) {
	var resp MessagePinMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageScreenshotTaken(data json.RawMessage) (*MessageScreenshotTaken, error) {
	var resp MessageScreenshotTaken
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatSetBackground(data json.RawMessage) (*MessageChatSetBackground, error) {
	var resp MessageChatSetBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatSetTheme(data json.RawMessage) (*MessageChatSetTheme, error) {
	var resp MessageChatSetTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatSetMessageAutoDeleteTime(data json.RawMessage) (*MessageChatSetMessageAutoDeleteTime, error) {
	var resp MessageChatSetMessageAutoDeleteTime
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatBoost(data json.RawMessage) (*MessageChatBoost, error) {
	var resp MessageChatBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageForumTopicCreated(data json.RawMessage) (*MessageForumTopicCreated, error) {
	var resp MessageForumTopicCreated
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageForumTopicEdited(data json.RawMessage) (*MessageForumTopicEdited, error) {
	var resp MessageForumTopicEdited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageForumTopicIsClosedToggled(data json.RawMessage) (*MessageForumTopicIsClosedToggled, error) {
	var resp MessageForumTopicIsClosedToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageForumTopicIsHiddenToggled(data json.RawMessage) (*MessageForumTopicIsHiddenToggled, error) {
	var resp MessageForumTopicIsHiddenToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSuggestProfilePhoto(data json.RawMessage) (*MessageSuggestProfilePhoto, error) {
	var resp MessageSuggestProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageCustomServiceAction(data json.RawMessage) (*MessageCustomServiceAction, error) {
	var resp MessageCustomServiceAction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGameScore(data json.RawMessage) (*MessageGameScore, error) {
	var resp MessageGameScore
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePaymentSuccessful(data json.RawMessage) (*MessagePaymentSuccessful, error) {
	var resp MessagePaymentSuccessful
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePaymentSuccessfulBot(data json.RawMessage) (*MessagePaymentSuccessfulBot, error) {
	var resp MessagePaymentSuccessfulBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePaymentRefunded(data json.RawMessage) (*MessagePaymentRefunded, error) {
	var resp MessagePaymentRefunded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiftedPremium(data json.RawMessage) (*MessageGiftedPremium, error) {
	var resp MessageGiftedPremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePremiumGiftCode(data json.RawMessage) (*MessagePremiumGiftCode, error) {
	var resp MessagePremiumGiftCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiveawayCreated(data json.RawMessage) (*MessageGiveawayCreated, error) {
	var resp MessageGiveawayCreated
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiveaway(data json.RawMessage) (*MessageGiveaway, error) {
	var resp MessageGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiveawayCompleted(data json.RawMessage) (*MessageGiveawayCompleted, error) {
	var resp MessageGiveawayCompleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiveawayWinners(data json.RawMessage) (*MessageGiveawayWinners, error) {
	var resp MessageGiveawayWinners
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiftedStars(data json.RawMessage) (*MessageGiftedStars, error) {
	var resp MessageGiftedStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGiveawayPrizeStars(data json.RawMessage) (*MessageGiveawayPrizeStars, error) {
	var resp MessageGiveawayPrizeStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageGift(data json.RawMessage) (*MessageGift, error) {
	var resp MessageGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageUpgradedGift(data json.RawMessage) (*MessageUpgradedGift, error) {
	var resp MessageUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageRefundedUpgradedGift(data json.RawMessage) (*MessageRefundedUpgradedGift, error) {
	var resp MessageRefundedUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePaidMessagesRefunded(data json.RawMessage) (*MessagePaidMessagesRefunded, error) {
	var resp MessagePaidMessagesRefunded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePaidMessagePriceChanged(data json.RawMessage) (*MessagePaidMessagePriceChanged, error) {
	var resp MessagePaidMessagePriceChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageContactRegistered(data json.RawMessage) (*MessageContactRegistered, error) {
	var resp MessageContactRegistered
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageUsersShared(data json.RawMessage) (*MessageUsersShared, error) {
	var resp MessageUsersShared
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageChatShared(data json.RawMessage) (*MessageChatShared, error) {
	var resp MessageChatShared
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageBotWriteAccessAllowed(data json.RawMessage) (*MessageBotWriteAccessAllowed, error) {
	var resp MessageBotWriteAccessAllowed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageWebAppDataSent(data json.RawMessage) (*MessageWebAppDataSent, error) {
	var resp MessageWebAppDataSent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageWebAppDataReceived(data json.RawMessage) (*MessageWebAppDataReceived, error) {
	var resp MessageWebAppDataReceived
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePassportDataSent(data json.RawMessage) (*MessagePassportDataSent, error) {
	var resp MessagePassportDataSent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessagePassportDataReceived(data json.RawMessage) (*MessagePassportDataReceived, error) {
	var resp MessagePassportDataReceived
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageProximityAlertTriggered(data json.RawMessage) (*MessageProximityAlertTriggered, error) {
	var resp MessageProximityAlertTriggered
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageUnsupported(data json.RawMessage) (*MessageUnsupported, error) {
	var resp MessageUnsupported
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeMention(data json.RawMessage) (*TextEntityTypeMention, error) {
	var resp TextEntityTypeMention
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeHashtag(data json.RawMessage) (*TextEntityTypeHashtag, error) {
	var resp TextEntityTypeHashtag
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeCashtag(data json.RawMessage) (*TextEntityTypeCashtag, error) {
	var resp TextEntityTypeCashtag
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeBotCommand(data json.RawMessage) (*TextEntityTypeBotCommand, error) {
	var resp TextEntityTypeBotCommand
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeUrl(data json.RawMessage) (*TextEntityTypeUrl, error) {
	var resp TextEntityTypeUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeEmailAddress(data json.RawMessage) (*TextEntityTypeEmailAddress, error) {
	var resp TextEntityTypeEmailAddress
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypePhoneNumber(data json.RawMessage) (*TextEntityTypePhoneNumber, error) {
	var resp TextEntityTypePhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeBankCardNumber(data json.RawMessage) (*TextEntityTypeBankCardNumber, error) {
	var resp TextEntityTypeBankCardNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeBold(data json.RawMessage) (*TextEntityTypeBold, error) {
	var resp TextEntityTypeBold
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeItalic(data json.RawMessage) (*TextEntityTypeItalic, error) {
	var resp TextEntityTypeItalic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeUnderline(data json.RawMessage) (*TextEntityTypeUnderline, error) {
	var resp TextEntityTypeUnderline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeStrikethrough(data json.RawMessage) (*TextEntityTypeStrikethrough, error) {
	var resp TextEntityTypeStrikethrough
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeSpoiler(data json.RawMessage) (*TextEntityTypeSpoiler, error) {
	var resp TextEntityTypeSpoiler
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeCode(data json.RawMessage) (*TextEntityTypeCode, error) {
	var resp TextEntityTypeCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypePre(data json.RawMessage) (*TextEntityTypePre, error) {
	var resp TextEntityTypePre
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypePreCode(data json.RawMessage) (*TextEntityTypePreCode, error) {
	var resp TextEntityTypePreCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeBlockQuote(data json.RawMessage) (*TextEntityTypeBlockQuote, error) {
	var resp TextEntityTypeBlockQuote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeExpandableBlockQuote(data json.RawMessage) (*TextEntityTypeExpandableBlockQuote, error) {
	var resp TextEntityTypeExpandableBlockQuote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeTextUrl(data json.RawMessage) (*TextEntityTypeTextUrl, error) {
	var resp TextEntityTypeTextUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeMentionName(data json.RawMessage) (*TextEntityTypeMentionName, error) {
	var resp TextEntityTypeMentionName
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeCustomEmoji(data json.RawMessage) (*TextEntityTypeCustomEmoji, error) {
	var resp TextEntityTypeCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextEntityTypeMediaTimestamp(data json.RawMessage) (*TextEntityTypeMediaTimestamp, error) {
	var resp TextEntityTypeMediaTimestamp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputThumbnail(data json.RawMessage) (*InputThumbnail, error) {
	var resp InputThumbnail
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPaidMediaTypePhoto(data json.RawMessage) (*InputPaidMediaTypePhoto, error) {
	var resp InputPaidMediaTypePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPaidMediaTypeVideo(data json.RawMessage) (*InputPaidMediaTypeVideo, error) {
	var resp InputPaidMediaTypeVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputPaidMedia(data json.RawMessage) (*InputPaidMedia, error) {
	var resp InputPaidMedia
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSchedulingStateSendAtDate(data json.RawMessage) (*MessageSchedulingStateSendAtDate, error) {
	var resp MessageSchedulingStateSendAtDate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSchedulingStateSendWhenOnline(data json.RawMessage) (*MessageSchedulingStateSendWhenOnline, error) {
	var resp MessageSchedulingStateSendWhenOnline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSchedulingStateSendWhenVideoProcessed(data json.RawMessage) (*MessageSchedulingStateSendWhenVideoProcessed, error) {
	var resp MessageSchedulingStateSendWhenVideoProcessed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSelfDestructTypeTimer(data json.RawMessage) (*MessageSelfDestructTypeTimer, error) {
	var resp MessageSelfDestructTypeTimer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSelfDestructTypeImmediately(data json.RawMessage) (*MessageSelfDestructTypeImmediately, error) {
	var resp MessageSelfDestructTypeImmediately
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageSendOptions(data json.RawMessage) (*MessageSendOptions, error) {
	var resp MessageSendOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageCopyOptions(data json.RawMessage) (*MessageCopyOptions, error) {
	var resp MessageCopyOptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageText(data json.RawMessage) (*InputMessageText, error) {
	var resp InputMessageText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageAnimation(data json.RawMessage) (*InputMessageAnimation, error) {
	var resp InputMessageAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageAudio(data json.RawMessage) (*InputMessageAudio, error) {
	var resp InputMessageAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageDocument(data json.RawMessage) (*InputMessageDocument, error) {
	var resp InputMessageDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessagePaidMedia(data json.RawMessage) (*InputMessagePaidMedia, error) {
	var resp InputMessagePaidMedia
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessagePhoto(data json.RawMessage) (*InputMessagePhoto, error) {
	var resp InputMessagePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageSticker(data json.RawMessage) (*InputMessageSticker, error) {
	var resp InputMessageSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageVideo(data json.RawMessage) (*InputMessageVideo, error) {
	var resp InputMessageVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageVideoNote(data json.RawMessage) (*InputMessageVideoNote, error) {
	var resp InputMessageVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageVoiceNote(data json.RawMessage) (*InputMessageVoiceNote, error) {
	var resp InputMessageVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageLocation(data json.RawMessage) (*InputMessageLocation, error) {
	var resp InputMessageLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageVenue(data json.RawMessage) (*InputMessageVenue, error) {
	var resp InputMessageVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageContact(data json.RawMessage) (*InputMessageContact, error) {
	var resp InputMessageContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageDice(data json.RawMessage) (*InputMessageDice, error) {
	var resp InputMessageDice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageGame(data json.RawMessage) (*InputMessageGame, error) {
	var resp InputMessageGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageInvoice(data json.RawMessage) (*InputMessageInvoice, error) {
	var resp InputMessageInvoice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessagePoll(data json.RawMessage) (*InputMessagePoll, error) {
	var resp InputMessagePoll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageStory(data json.RawMessage) (*InputMessageStory, error) {
	var resp InputMessageStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputMessageForwarded(data json.RawMessage) (*InputMessageForwarded, error) {
	var resp InputMessageForwarded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageProperties(data json.RawMessage) (*MessageProperties, error) {
	var resp MessageProperties
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterEmpty(data json.RawMessage) (*SearchMessagesFilterEmpty, error) {
	var resp SearchMessagesFilterEmpty
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterAnimation(data json.RawMessage) (*SearchMessagesFilterAnimation, error) {
	var resp SearchMessagesFilterAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterAudio(data json.RawMessage) (*SearchMessagesFilterAudio, error) {
	var resp SearchMessagesFilterAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterDocument(data json.RawMessage) (*SearchMessagesFilterDocument, error) {
	var resp SearchMessagesFilterDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterPhoto(data json.RawMessage) (*SearchMessagesFilterPhoto, error) {
	var resp SearchMessagesFilterPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterVideo(data json.RawMessage) (*SearchMessagesFilterVideo, error) {
	var resp SearchMessagesFilterVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterVoiceNote(data json.RawMessage) (*SearchMessagesFilterVoiceNote, error) {
	var resp SearchMessagesFilterVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterPhotoAndVideo(data json.RawMessage) (*SearchMessagesFilterPhotoAndVideo, error) {
	var resp SearchMessagesFilterPhotoAndVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterUrl(data json.RawMessage) (*SearchMessagesFilterUrl, error) {
	var resp SearchMessagesFilterUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterChatPhoto(data json.RawMessage) (*SearchMessagesFilterChatPhoto, error) {
	var resp SearchMessagesFilterChatPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterVideoNote(data json.RawMessage) (*SearchMessagesFilterVideoNote, error) {
	var resp SearchMessagesFilterVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterVoiceAndVideoNote(data json.RawMessage) (*SearchMessagesFilterVoiceAndVideoNote, error) {
	var resp SearchMessagesFilterVoiceAndVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterMention(data json.RawMessage) (*SearchMessagesFilterMention, error) {
	var resp SearchMessagesFilterMention
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterUnreadMention(data json.RawMessage) (*SearchMessagesFilterUnreadMention, error) {
	var resp SearchMessagesFilterUnreadMention
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterUnreadReaction(data json.RawMessage) (*SearchMessagesFilterUnreadReaction, error) {
	var resp SearchMessagesFilterUnreadReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterFailedToSend(data json.RawMessage) (*SearchMessagesFilterFailedToSend, error) {
	var resp SearchMessagesFilterFailedToSend
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesFilterPinned(data json.RawMessage) (*SearchMessagesFilterPinned, error) {
	var resp SearchMessagesFilterPinned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesChatTypeFilterPrivate(data json.RawMessage) (*SearchMessagesChatTypeFilterPrivate, error) {
	var resp SearchMessagesChatTypeFilterPrivate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesChatTypeFilterGroup(data json.RawMessage) (*SearchMessagesChatTypeFilterGroup, error) {
	var resp SearchMessagesChatTypeFilterGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSearchMessagesChatTypeFilterChannel(data json.RawMessage) (*SearchMessagesChatTypeFilterChannel, error) {
	var resp SearchMessagesChatTypeFilterChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionTyping(data json.RawMessage) (*ChatActionTyping, error) {
	var resp ChatActionTyping
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionRecordingVideo(data json.RawMessage) (*ChatActionRecordingVideo, error) {
	var resp ChatActionRecordingVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionUploadingVideo(data json.RawMessage) (*ChatActionUploadingVideo, error) {
	var resp ChatActionUploadingVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionRecordingVoiceNote(data json.RawMessage) (*ChatActionRecordingVoiceNote, error) {
	var resp ChatActionRecordingVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionUploadingVoiceNote(data json.RawMessage) (*ChatActionUploadingVoiceNote, error) {
	var resp ChatActionUploadingVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionUploadingPhoto(data json.RawMessage) (*ChatActionUploadingPhoto, error) {
	var resp ChatActionUploadingPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionUploadingDocument(data json.RawMessage) (*ChatActionUploadingDocument, error) {
	var resp ChatActionUploadingDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionChoosingSticker(data json.RawMessage) (*ChatActionChoosingSticker, error) {
	var resp ChatActionChoosingSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionChoosingLocation(data json.RawMessage) (*ChatActionChoosingLocation, error) {
	var resp ChatActionChoosingLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionChoosingContact(data json.RawMessage) (*ChatActionChoosingContact, error) {
	var resp ChatActionChoosingContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionStartPlayingGame(data json.RawMessage) (*ChatActionStartPlayingGame, error) {
	var resp ChatActionStartPlayingGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionRecordingVideoNote(data json.RawMessage) (*ChatActionRecordingVideoNote, error) {
	var resp ChatActionRecordingVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionUploadingVideoNote(data json.RawMessage) (*ChatActionUploadingVideoNote, error) {
	var resp ChatActionUploadingVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionWatchingAnimations(data json.RawMessage) (*ChatActionWatchingAnimations, error) {
	var resp ChatActionWatchingAnimations
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActionCancel(data json.RawMessage) (*ChatActionCancel, error) {
	var resp ChatActionCancel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserStatusEmpty(data json.RawMessage) (*UserStatusEmpty, error) {
	var resp UserStatusEmpty
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserStatusOnline(data json.RawMessage) (*UserStatusOnline, error) {
	var resp UserStatusOnline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserStatusOffline(data json.RawMessage) (*UserStatusOffline, error) {
	var resp UserStatusOffline
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserStatusRecently(data json.RawMessage) (*UserStatusRecently, error) {
	var resp UserStatusRecently
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserStatusLastWeek(data json.RawMessage) (*UserStatusLastWeek, error) {
	var resp UserStatusLastWeek
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserStatusLastMonth(data json.RawMessage) (*UserStatusLastMonth, error) {
	var resp UserStatusLastMonth
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiKeyword(data json.RawMessage) (*EmojiKeyword, error) {
	var resp EmojiKeyword
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiKeywords(data json.RawMessage) (*EmojiKeywords, error) {
	var resp EmojiKeywords
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickers(data json.RawMessage) (*Stickers, error) {
	var resp Stickers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojis(data json.RawMessage) (*Emojis, error) {
	var resp Emojis
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerSet(data json.RawMessage) (*StickerSet, error) {
	var resp StickerSet
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerSetInfo(data json.RawMessage) (*StickerSetInfo, error) {
	var resp StickerSetInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStickerSets(data json.RawMessage) (*StickerSets, error) {
	var resp StickerSets
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTrendingStickerSets(data json.RawMessage) (*TrendingStickerSets, error) {
	var resp TrendingStickerSets
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategorySourceSearch(data json.RawMessage) (*EmojiCategorySourceSearch, error) {
	var resp EmojiCategorySourceSearch
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategorySourcePremium(data json.RawMessage) (*EmojiCategorySourcePremium, error) {
	var resp EmojiCategorySourcePremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategory(data json.RawMessage) (*EmojiCategory, error) {
	var resp EmojiCategory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategories(data json.RawMessage) (*EmojiCategories, error) {
	var resp EmojiCategories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategoryTypeDefault(data json.RawMessage) (*EmojiCategoryTypeDefault, error) {
	var resp EmojiCategoryTypeDefault
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategoryTypeRegularStickers(data json.RawMessage) (*EmojiCategoryTypeRegularStickers, error) {
	var resp EmojiCategoryTypeRegularStickers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategoryTypeEmojiStatus(data json.RawMessage) (*EmojiCategoryTypeEmojiStatus, error) {
	var resp EmojiCategoryTypeEmojiStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiCategoryTypeChatPhoto(data json.RawMessage) (*EmojiCategoryTypeChatPhoto, error) {
	var resp EmojiCategoryTypeChatPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCurrentWeather(data json.RawMessage) (*CurrentWeather, error) {
	var resp CurrentWeather
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaPosition(data json.RawMessage) (*StoryAreaPosition, error) {
	var resp StoryAreaPosition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeLocation(data json.RawMessage) (*StoryAreaTypeLocation, error) {
	var resp StoryAreaTypeLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeVenue(data json.RawMessage) (*StoryAreaTypeVenue, error) {
	var resp StoryAreaTypeVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeSuggestedReaction(data json.RawMessage) (*StoryAreaTypeSuggestedReaction, error) {
	var resp StoryAreaTypeSuggestedReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeMessage(data json.RawMessage) (*StoryAreaTypeMessage, error) {
	var resp StoryAreaTypeMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeLink(data json.RawMessage) (*StoryAreaTypeLink, error) {
	var resp StoryAreaTypeLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeWeather(data json.RawMessage) (*StoryAreaTypeWeather, error) {
	var resp StoryAreaTypeWeather
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryAreaTypeUpgradedGift(data json.RawMessage) (*StoryAreaTypeUpgradedGift, error) {
	var resp StoryAreaTypeUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryArea(data json.RawMessage) (*StoryArea, error) {
	var resp StoryArea
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeLocation(data json.RawMessage) (*InputStoryAreaTypeLocation, error) {
	var resp InputStoryAreaTypeLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeFoundVenue(data json.RawMessage) (*InputStoryAreaTypeFoundVenue, error) {
	var resp InputStoryAreaTypeFoundVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypePreviousVenue(data json.RawMessage) (*InputStoryAreaTypePreviousVenue, error) {
	var resp InputStoryAreaTypePreviousVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeSuggestedReaction(data json.RawMessage) (*InputStoryAreaTypeSuggestedReaction, error) {
	var resp InputStoryAreaTypeSuggestedReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeMessage(data json.RawMessage) (*InputStoryAreaTypeMessage, error) {
	var resp InputStoryAreaTypeMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeLink(data json.RawMessage) (*InputStoryAreaTypeLink, error) {
	var resp InputStoryAreaTypeLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeWeather(data json.RawMessage) (*InputStoryAreaTypeWeather, error) {
	var resp InputStoryAreaTypeWeather
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreaTypeUpgradedGift(data json.RawMessage) (*InputStoryAreaTypeUpgradedGift, error) {
	var resp InputStoryAreaTypeUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryArea(data json.RawMessage) (*InputStoryArea, error) {
	var resp InputStoryArea
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryAreas(data json.RawMessage) (*InputStoryAreas, error) {
	var resp InputStoryAreas
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryVideo(data json.RawMessage) (*StoryVideo, error) {
	var resp StoryVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryContentPhoto(data json.RawMessage) (*StoryContentPhoto, error) {
	var resp StoryContentPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryContentVideo(data json.RawMessage) (*StoryContentVideo, error) {
	var resp StoryContentVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryContentUnsupported(data json.RawMessage) (*StoryContentUnsupported, error) {
	var resp StoryContentUnsupported
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryContentPhoto(data json.RawMessage) (*InputStoryContentPhoto, error) {
	var resp InputStoryContentPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputStoryContentVideo(data json.RawMessage) (*InputStoryContentVideo, error) {
	var resp InputStoryContentVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryListMain(data json.RawMessage) (*StoryListMain, error) {
	var resp StoryListMain
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryListArchive(data json.RawMessage) (*StoryListArchive, error) {
	var resp StoryListArchive
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryOriginPublicStory(data json.RawMessage) (*StoryOriginPublicStory, error) {
	var resp StoryOriginPublicStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryOriginHiddenUser(data json.RawMessage) (*StoryOriginHiddenUser, error) {
	var resp StoryOriginHiddenUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryRepostInfo(data json.RawMessage) (*StoryRepostInfo, error) {
	var resp StoryRepostInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInteractionInfo(data json.RawMessage) (*StoryInteractionInfo, error) {
	var resp StoryInteractionInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStory(data json.RawMessage) (*Story, error) {
	var resp Story
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStories(data json.RawMessage) (*Stories, error) {
	var resp Stories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundStories(data json.RawMessage) (*FoundStories, error) {
	var resp FoundStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryFullId(data json.RawMessage) (*StoryFullId, error) {
	var resp StoryFullId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInfo(data json.RawMessage) (*StoryInfo, error) {
	var resp StoryInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatActiveStories(data json.RawMessage) (*ChatActiveStories, error) {
	var resp ChatActiveStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInteractionTypeView(data json.RawMessage) (*StoryInteractionTypeView, error) {
	var resp StoryInteractionTypeView
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInteractionTypeForward(data json.RawMessage) (*StoryInteractionTypeForward, error) {
	var resp StoryInteractionTypeForward
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInteractionTypeRepost(data json.RawMessage) (*StoryInteractionTypeRepost, error) {
	var resp StoryInteractionTypeRepost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInteraction(data json.RawMessage) (*StoryInteraction, error) {
	var resp StoryInteraction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryInteractions(data json.RawMessage) (*StoryInteractions, error) {
	var resp StoryInteractions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalQuickReplyMessage(data json.RawMessage) (*QuickReplyMessage, error) {
	var resp QuickReplyMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalQuickReplyMessages(data json.RawMessage) (*QuickReplyMessages, error) {
	var resp QuickReplyMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalQuickReplyShortcut(data json.RawMessage) (*QuickReplyShortcut, error) {
	var resp QuickReplyShortcut
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPublicForwardMessage(data json.RawMessage) (*PublicForwardMessage, error) {
	var resp PublicForwardMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPublicForwardStory(data json.RawMessage) (*PublicForwardStory, error) {
	var resp PublicForwardStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPublicForwards(data json.RawMessage) (*PublicForwards, error) {
	var resp PublicForwards
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotMediaPreview(data json.RawMessage) (*BotMediaPreview, error) {
	var resp BotMediaPreview
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotMediaPreviews(data json.RawMessage) (*BotMediaPreviews, error) {
	var resp BotMediaPreviews
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotMediaPreviewInfo(data json.RawMessage) (*BotMediaPreviewInfo, error) {
	var resp BotMediaPreviewInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostLevelFeatures(data json.RawMessage) (*ChatBoostLevelFeatures, error) {
	var resp ChatBoostLevelFeatures
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostFeatures(data json.RawMessage) (*ChatBoostFeatures, error) {
	var resp ChatBoostFeatures
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostSourceGiftCode(data json.RawMessage) (*ChatBoostSourceGiftCode, error) {
	var resp ChatBoostSourceGiftCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostSourceGiveaway(data json.RawMessage) (*ChatBoostSourceGiveaway, error) {
	var resp ChatBoostSourceGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostSourcePremium(data json.RawMessage) (*ChatBoostSourcePremium, error) {
	var resp ChatBoostSourcePremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPrepaidGiveaway(data json.RawMessage) (*PrepaidGiveaway, error) {
	var resp PrepaidGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostStatus(data json.RawMessage) (*ChatBoostStatus, error) {
	var resp ChatBoostStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoost(data json.RawMessage) (*ChatBoost, error) {
	var resp ChatBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundChatBoosts(data json.RawMessage) (*FoundChatBoosts, error) {
	var resp FoundChatBoosts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostSlot(data json.RawMessage) (*ChatBoostSlot, error) {
	var resp ChatBoostSlot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostSlots(data json.RawMessage) (*ChatBoostSlots, error) {
	var resp ChatBoostSlots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalResendCodeReasonUserRequest(data json.RawMessage) (*ResendCodeReasonUserRequest, error) {
	var resp ResendCodeReasonUserRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalResendCodeReasonVerificationFailed(data json.RawMessage) (*ResendCodeReasonVerificationFailed, error) {
	var resp ResendCodeReasonVerificationFailed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallDiscardReasonEmpty(data json.RawMessage) (*CallDiscardReasonEmpty, error) {
	var resp CallDiscardReasonEmpty
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallDiscardReasonMissed(data json.RawMessage) (*CallDiscardReasonMissed, error) {
	var resp CallDiscardReasonMissed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallDiscardReasonDeclined(data json.RawMessage) (*CallDiscardReasonDeclined, error) {
	var resp CallDiscardReasonDeclined
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallDiscardReasonDisconnected(data json.RawMessage) (*CallDiscardReasonDisconnected, error) {
	var resp CallDiscardReasonDisconnected
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallDiscardReasonHungUp(data json.RawMessage) (*CallDiscardReasonHungUp, error) {
	var resp CallDiscardReasonHungUp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallDiscardReasonAllowGroupCall(data json.RawMessage) (*CallDiscardReasonAllowGroupCall, error) {
	var resp CallDiscardReasonAllowGroupCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProtocol(data json.RawMessage) (*CallProtocol, error) {
	var resp CallProtocol
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallServerTypeTelegramReflector(data json.RawMessage) (*CallServerTypeTelegramReflector, error) {
	var resp CallServerTypeTelegramReflector
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallServerTypeWebrtc(data json.RawMessage) (*CallServerTypeWebrtc, error) {
	var resp CallServerTypeWebrtc
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallServer(data json.RawMessage) (*CallServer, error) {
	var resp CallServer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallId(data json.RawMessage) (*CallId, error) {
	var resp CallId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallId(data json.RawMessage) (*GroupCallId, error) {
	var resp GroupCallId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallStatePending(data json.RawMessage) (*CallStatePending, error) {
	var resp CallStatePending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallStateExchangingKeys(data json.RawMessage) (*CallStateExchangingKeys, error) {
	var resp CallStateExchangingKeys
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallStateReady(data json.RawMessage) (*CallStateReady, error) {
	var resp CallStateReady
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallStateHangingUp(data json.RawMessage) (*CallStateHangingUp, error) {
	var resp CallStateHangingUp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallStateDiscarded(data json.RawMessage) (*CallStateDiscarded, error) {
	var resp CallStateDiscarded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallStateError(data json.RawMessage) (*CallStateError, error) {
	var resp CallStateError
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallVideoQualityThumbnail(data json.RawMessage) (*GroupCallVideoQualityThumbnail, error) {
	var resp GroupCallVideoQualityThumbnail
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallVideoQualityMedium(data json.RawMessage) (*GroupCallVideoQualityMedium, error) {
	var resp GroupCallVideoQualityMedium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallVideoQualityFull(data json.RawMessage) (*GroupCallVideoQualityFull, error) {
	var resp GroupCallVideoQualityFull
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallStream(data json.RawMessage) (*GroupCallStream, error) {
	var resp GroupCallStream
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallStreams(data json.RawMessage) (*GroupCallStreams, error) {
	var resp GroupCallStreams
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRtmpUrl(data json.RawMessage) (*RtmpUrl, error) {
	var resp RtmpUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallRecentSpeaker(data json.RawMessage) (*GroupCallRecentSpeaker, error) {
	var resp GroupCallRecentSpeaker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCall(data json.RawMessage) (*GroupCall, error) {
	var resp GroupCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallVideoSourceGroup(data json.RawMessage) (*GroupCallVideoSourceGroup, error) {
	var resp GroupCallVideoSourceGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallParticipantVideoInfo(data json.RawMessage) (*GroupCallParticipantVideoInfo, error) {
	var resp GroupCallParticipantVideoInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGroupCallParticipant(data json.RawMessage) (*GroupCallParticipant, error) {
	var resp GroupCallParticipant
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemEcho(data json.RawMessage) (*CallProblemEcho, error) {
	var resp CallProblemEcho
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemNoise(data json.RawMessage) (*CallProblemNoise, error) {
	var resp CallProblemNoise
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemInterruptions(data json.RawMessage) (*CallProblemInterruptions, error) {
	var resp CallProblemInterruptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemDistortedSpeech(data json.RawMessage) (*CallProblemDistortedSpeech, error) {
	var resp CallProblemDistortedSpeech
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemSilentLocal(data json.RawMessage) (*CallProblemSilentLocal, error) {
	var resp CallProblemSilentLocal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemSilentRemote(data json.RawMessage) (*CallProblemSilentRemote, error) {
	var resp CallProblemSilentRemote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemDropped(data json.RawMessage) (*CallProblemDropped, error) {
	var resp CallProblemDropped
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemDistortedVideo(data json.RawMessage) (*CallProblemDistortedVideo, error) {
	var resp CallProblemDistortedVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallProblemPixelatedVideo(data json.RawMessage) (*CallProblemPixelatedVideo, error) {
	var resp CallProblemPixelatedVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCall(data json.RawMessage) (*Call, error) {
	var resp Call
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFirebaseAuthenticationSettingsAndroid(data json.RawMessage) (*FirebaseAuthenticationSettingsAndroid, error) {
	var resp FirebaseAuthenticationSettingsAndroid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFirebaseAuthenticationSettingsIos(data json.RawMessage) (*FirebaseAuthenticationSettingsIos, error) {
	var resp FirebaseAuthenticationSettingsIos
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhoneNumberAuthenticationSettings(data json.RawMessage) (*PhoneNumberAuthenticationSettings, error) {
	var resp PhoneNumberAuthenticationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAddedReaction(data json.RawMessage) (*AddedReaction, error) {
	var resp AddedReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAddedReactions(data json.RawMessage) (*AddedReactions, error) {
	var resp AddedReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAvailableReaction(data json.RawMessage) (*AvailableReaction, error) {
	var resp AvailableReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAvailableReactions(data json.RawMessage) (*AvailableReactions, error) {
	var resp AvailableReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalEmojiReaction(data json.RawMessage) (*EmojiReaction, error) {
	var resp EmojiReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionUnavailabilityReasonAnonymousAdministrator(data json.RawMessage) (*ReactionUnavailabilityReasonAnonymousAdministrator, error) {
	var resp ReactionUnavailabilityReasonAnonymousAdministrator
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReactionUnavailabilityReasonGuest(data json.RawMessage) (*ReactionUnavailabilityReasonGuest, error) {
	var resp ReactionUnavailabilityReasonGuest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAnimations(data json.RawMessage) (*Animations, error) {
	var resp Animations
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDiceStickersRegular(data json.RawMessage) (*DiceStickersRegular, error) {
	var resp DiceStickersRegular
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDiceStickersSlotMachine(data json.RawMessage) (*DiceStickersSlotMachine, error) {
	var resp DiceStickersSlotMachine
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalImportedContacts(data json.RawMessage) (*ImportedContacts, error) {
	var resp ImportedContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSpeechRecognitionResultPending(data json.RawMessage) (*SpeechRecognitionResultPending, error) {
	var resp SpeechRecognitionResultPending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSpeechRecognitionResultText(data json.RawMessage) (*SpeechRecognitionResultText, error) {
	var resp SpeechRecognitionResultText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSpeechRecognitionResultError(data json.RawMessage) (*SpeechRecognitionResultError, error) {
	var resp SpeechRecognitionResultError
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessConnection(data json.RawMessage) (*BusinessConnection, error) {
	var resp BusinessConnection
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAttachmentMenuBotColor(data json.RawMessage) (*AttachmentMenuBotColor, error) {
	var resp AttachmentMenuBotColor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAttachmentMenuBot(data json.RawMessage) (*AttachmentMenuBot, error) {
	var resp AttachmentMenuBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSentWebAppMessage(data json.RawMessage) (*SentWebAppMessage, error) {
	var resp SentWebAppMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotWriteAccessAllowReasonConnectedWebsite(data json.RawMessage) (*BotWriteAccessAllowReasonConnectedWebsite, error) {
	var resp BotWriteAccessAllowReasonConnectedWebsite
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotWriteAccessAllowReasonAddedToAttachmentMenu(data json.RawMessage) (*BotWriteAccessAllowReasonAddedToAttachmentMenu, error) {
	var resp BotWriteAccessAllowReasonAddedToAttachmentMenu
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotWriteAccessAllowReasonLaunchedWebApp(data json.RawMessage) (*BotWriteAccessAllowReasonLaunchedWebApp, error) {
	var resp BotWriteAccessAllowReasonLaunchedWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotWriteAccessAllowReasonAcceptedRequest(data json.RawMessage) (*BotWriteAccessAllowReasonAcceptedRequest, error) {
	var resp BotWriteAccessAllowReasonAcceptedRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalHttpUrl(data json.RawMessage) (*HttpUrl, error) {
	var resp HttpUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserLink(data json.RawMessage) (*UserLink, error) {
	var resp UserLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTargetChatTypes(data json.RawMessage) (*TargetChatTypes, error) {
	var resp TargetChatTypes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTargetChatCurrent(data json.RawMessage) (*TargetChatCurrent, error) {
	var resp TargetChatCurrent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTargetChatChosen(data json.RawMessage) (*TargetChatChosen, error) {
	var resp TargetChatChosen
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTargetChatInternalLink(data json.RawMessage) (*TargetChatInternalLink, error) {
	var resp TargetChatInternalLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultAnimation(data json.RawMessage) (*InputInlineQueryResultAnimation, error) {
	var resp InputInlineQueryResultAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultArticle(data json.RawMessage) (*InputInlineQueryResultArticle, error) {
	var resp InputInlineQueryResultArticle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultAudio(data json.RawMessage) (*InputInlineQueryResultAudio, error) {
	var resp InputInlineQueryResultAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultContact(data json.RawMessage) (*InputInlineQueryResultContact, error) {
	var resp InputInlineQueryResultContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultDocument(data json.RawMessage) (*InputInlineQueryResultDocument, error) {
	var resp InputInlineQueryResultDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultGame(data json.RawMessage) (*InputInlineQueryResultGame, error) {
	var resp InputInlineQueryResultGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultLocation(data json.RawMessage) (*InputInlineQueryResultLocation, error) {
	var resp InputInlineQueryResultLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultPhoto(data json.RawMessage) (*InputInlineQueryResultPhoto, error) {
	var resp InputInlineQueryResultPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultSticker(data json.RawMessage) (*InputInlineQueryResultSticker, error) {
	var resp InputInlineQueryResultSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultVenue(data json.RawMessage) (*InputInlineQueryResultVenue, error) {
	var resp InputInlineQueryResultVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultVideo(data json.RawMessage) (*InputInlineQueryResultVideo, error) {
	var resp InputInlineQueryResultVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputInlineQueryResultVoiceNote(data json.RawMessage) (*InputInlineQueryResultVoiceNote, error) {
	var resp InputInlineQueryResultVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultArticle(data json.RawMessage) (*InlineQueryResultArticle, error) {
	var resp InlineQueryResultArticle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultContact(data json.RawMessage) (*InlineQueryResultContact, error) {
	var resp InlineQueryResultContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultLocation(data json.RawMessage) (*InlineQueryResultLocation, error) {
	var resp InlineQueryResultLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultVenue(data json.RawMessage) (*InlineQueryResultVenue, error) {
	var resp InlineQueryResultVenue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultGame(data json.RawMessage) (*InlineQueryResultGame, error) {
	var resp InlineQueryResultGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultAnimation(data json.RawMessage) (*InlineQueryResultAnimation, error) {
	var resp InlineQueryResultAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultAudio(data json.RawMessage) (*InlineQueryResultAudio, error) {
	var resp InlineQueryResultAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultDocument(data json.RawMessage) (*InlineQueryResultDocument, error) {
	var resp InlineQueryResultDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultPhoto(data json.RawMessage) (*InlineQueryResultPhoto, error) {
	var resp InlineQueryResultPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultSticker(data json.RawMessage) (*InlineQueryResultSticker, error) {
	var resp InlineQueryResultSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultVideo(data json.RawMessage) (*InlineQueryResultVideo, error) {
	var resp InlineQueryResultVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultVoiceNote(data json.RawMessage) (*InlineQueryResultVoiceNote, error) {
	var resp InlineQueryResultVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultsButtonTypeStartBot(data json.RawMessage) (*InlineQueryResultsButtonTypeStartBot, error) {
	var resp InlineQueryResultsButtonTypeStartBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultsButtonTypeWebApp(data json.RawMessage) (*InlineQueryResultsButtonTypeWebApp, error) {
	var resp InlineQueryResultsButtonTypeWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResultsButton(data json.RawMessage) (*InlineQueryResultsButton, error) {
	var resp InlineQueryResultsButton
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInlineQueryResults(data json.RawMessage) (*InlineQueryResults, error) {
	var resp InlineQueryResults
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPreparedInlineMessageId(data json.RawMessage) (*PreparedInlineMessageId, error) {
	var resp PreparedInlineMessageId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPreparedInlineMessage(data json.RawMessage) (*PreparedInlineMessage, error) {
	var resp PreparedInlineMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallbackQueryPayloadData(data json.RawMessage) (*CallbackQueryPayloadData, error) {
	var resp CallbackQueryPayloadData
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallbackQueryPayloadDataWithPassword(data json.RawMessage) (*CallbackQueryPayloadDataWithPassword, error) {
	var resp CallbackQueryPayloadDataWithPassword
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallbackQueryPayloadGame(data json.RawMessage) (*CallbackQueryPayloadGame, error) {
	var resp CallbackQueryPayloadGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCallbackQueryAnswer(data json.RawMessage) (*CallbackQueryAnswer, error) {
	var resp CallbackQueryAnswer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCustomRequestResult(data json.RawMessage) (*CustomRequestResult, error) {
	var resp CustomRequestResult
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGameHighScore(data json.RawMessage) (*GameHighScore, error) {
	var resp GameHighScore
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalGameHighScores(data json.RawMessage) (*GameHighScores, error) {
	var resp GameHighScores
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMessageEdited(data json.RawMessage) (*ChatEventMessageEdited, error) {
	var resp ChatEventMessageEdited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMessageDeleted(data json.RawMessage) (*ChatEventMessageDeleted, error) {
	var resp ChatEventMessageDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMessagePinned(data json.RawMessage) (*ChatEventMessagePinned, error) {
	var resp ChatEventMessagePinned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMessageUnpinned(data json.RawMessage) (*ChatEventMessageUnpinned, error) {
	var resp ChatEventMessageUnpinned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventPollStopped(data json.RawMessage) (*ChatEventPollStopped, error) {
	var resp ChatEventPollStopped
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberJoined(data json.RawMessage) (*ChatEventMemberJoined, error) {
	var resp ChatEventMemberJoined
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberJoinedByInviteLink(data json.RawMessage) (*ChatEventMemberJoinedByInviteLink, error) {
	var resp ChatEventMemberJoinedByInviteLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberJoinedByRequest(data json.RawMessage) (*ChatEventMemberJoinedByRequest, error) {
	var resp ChatEventMemberJoinedByRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberInvited(data json.RawMessage) (*ChatEventMemberInvited, error) {
	var resp ChatEventMemberInvited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberLeft(data json.RawMessage) (*ChatEventMemberLeft, error) {
	var resp ChatEventMemberLeft
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberPromoted(data json.RawMessage) (*ChatEventMemberPromoted, error) {
	var resp ChatEventMemberPromoted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberRestricted(data json.RawMessage) (*ChatEventMemberRestricted, error) {
	var resp ChatEventMemberRestricted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMemberSubscriptionExtended(data json.RawMessage) (*ChatEventMemberSubscriptionExtended, error) {
	var resp ChatEventMemberSubscriptionExtended
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventAvailableReactionsChanged(data json.RawMessage) (*ChatEventAvailableReactionsChanged, error) {
	var resp ChatEventAvailableReactionsChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventBackgroundChanged(data json.RawMessage) (*ChatEventBackgroundChanged, error) {
	var resp ChatEventBackgroundChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventDescriptionChanged(data json.RawMessage) (*ChatEventDescriptionChanged, error) {
	var resp ChatEventDescriptionChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventEmojiStatusChanged(data json.RawMessage) (*ChatEventEmojiStatusChanged, error) {
	var resp ChatEventEmojiStatusChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventLinkedChatChanged(data json.RawMessage) (*ChatEventLinkedChatChanged, error) {
	var resp ChatEventLinkedChatChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventLocationChanged(data json.RawMessage) (*ChatEventLocationChanged, error) {
	var resp ChatEventLocationChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventMessageAutoDeleteTimeChanged(data json.RawMessage) (*ChatEventMessageAutoDeleteTimeChanged, error) {
	var resp ChatEventMessageAutoDeleteTimeChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventPermissionsChanged(data json.RawMessage) (*ChatEventPermissionsChanged, error) {
	var resp ChatEventPermissionsChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventPhotoChanged(data json.RawMessage) (*ChatEventPhotoChanged, error) {
	var resp ChatEventPhotoChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventSlowModeDelayChanged(data json.RawMessage) (*ChatEventSlowModeDelayChanged, error) {
	var resp ChatEventSlowModeDelayChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventStickerSetChanged(data json.RawMessage) (*ChatEventStickerSetChanged, error) {
	var resp ChatEventStickerSetChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventCustomEmojiStickerSetChanged(data json.RawMessage) (*ChatEventCustomEmojiStickerSetChanged, error) {
	var resp ChatEventCustomEmojiStickerSetChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventTitleChanged(data json.RawMessage) (*ChatEventTitleChanged, error) {
	var resp ChatEventTitleChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventUsernameChanged(data json.RawMessage) (*ChatEventUsernameChanged, error) {
	var resp ChatEventUsernameChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventActiveUsernamesChanged(data json.RawMessage) (*ChatEventActiveUsernamesChanged, error) {
	var resp ChatEventActiveUsernamesChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventAccentColorChanged(data json.RawMessage) (*ChatEventAccentColorChanged, error) {
	var resp ChatEventAccentColorChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventProfileAccentColorChanged(data json.RawMessage) (*ChatEventProfileAccentColorChanged, error) {
	var resp ChatEventProfileAccentColorChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventHasProtectedContentToggled(data json.RawMessage) (*ChatEventHasProtectedContentToggled, error) {
	var resp ChatEventHasProtectedContentToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventInvitesToggled(data json.RawMessage) (*ChatEventInvitesToggled, error) {
	var resp ChatEventInvitesToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventIsAllHistoryAvailableToggled(data json.RawMessage) (*ChatEventIsAllHistoryAvailableToggled, error) {
	var resp ChatEventIsAllHistoryAvailableToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventHasAggressiveAntiSpamEnabledToggled(data json.RawMessage) (*ChatEventHasAggressiveAntiSpamEnabledToggled, error) {
	var resp ChatEventHasAggressiveAntiSpamEnabledToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventSignMessagesToggled(data json.RawMessage) (*ChatEventSignMessagesToggled, error) {
	var resp ChatEventSignMessagesToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventShowMessageSenderToggled(data json.RawMessage) (*ChatEventShowMessageSenderToggled, error) {
	var resp ChatEventShowMessageSenderToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventInviteLinkEdited(data json.RawMessage) (*ChatEventInviteLinkEdited, error) {
	var resp ChatEventInviteLinkEdited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventInviteLinkRevoked(data json.RawMessage) (*ChatEventInviteLinkRevoked, error) {
	var resp ChatEventInviteLinkRevoked
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventInviteLinkDeleted(data json.RawMessage) (*ChatEventInviteLinkDeleted, error) {
	var resp ChatEventInviteLinkDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventVideoChatCreated(data json.RawMessage) (*ChatEventVideoChatCreated, error) {
	var resp ChatEventVideoChatCreated
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventVideoChatEnded(data json.RawMessage) (*ChatEventVideoChatEnded, error) {
	var resp ChatEventVideoChatEnded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventVideoChatMuteNewParticipantsToggled(data json.RawMessage) (*ChatEventVideoChatMuteNewParticipantsToggled, error) {
	var resp ChatEventVideoChatMuteNewParticipantsToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventVideoChatParticipantIsMutedToggled(data json.RawMessage) (*ChatEventVideoChatParticipantIsMutedToggled, error) {
	var resp ChatEventVideoChatParticipantIsMutedToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventVideoChatParticipantVolumeLevelChanged(data json.RawMessage) (*ChatEventVideoChatParticipantVolumeLevelChanged, error) {
	var resp ChatEventVideoChatParticipantVolumeLevelChanged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventIsForumToggled(data json.RawMessage) (*ChatEventIsForumToggled, error) {
	var resp ChatEventIsForumToggled
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventForumTopicCreated(data json.RawMessage) (*ChatEventForumTopicCreated, error) {
	var resp ChatEventForumTopicCreated
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventForumTopicEdited(data json.RawMessage) (*ChatEventForumTopicEdited, error) {
	var resp ChatEventForumTopicEdited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventForumTopicToggleIsClosed(data json.RawMessage) (*ChatEventForumTopicToggleIsClosed, error) {
	var resp ChatEventForumTopicToggleIsClosed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventForumTopicToggleIsHidden(data json.RawMessage) (*ChatEventForumTopicToggleIsHidden, error) {
	var resp ChatEventForumTopicToggleIsHidden
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventForumTopicDeleted(data json.RawMessage) (*ChatEventForumTopicDeleted, error) {
	var resp ChatEventForumTopicDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventForumTopicPinned(data json.RawMessage) (*ChatEventForumTopicPinned, error) {
	var resp ChatEventForumTopicPinned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEvent(data json.RawMessage) (*ChatEvent, error) {
	var resp ChatEvent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEvents(data json.RawMessage) (*ChatEvents, error) {
	var resp ChatEvents
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatEventLogFilters(data json.RawMessage) (*ChatEventLogFilters, error) {
	var resp ChatEventLogFilters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLanguagePackStringValueOrdinary(data json.RawMessage) (*LanguagePackStringValueOrdinary, error) {
	var resp LanguagePackStringValueOrdinary
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLanguagePackStringValuePluralized(data json.RawMessage) (*LanguagePackStringValuePluralized, error) {
	var resp LanguagePackStringValuePluralized
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLanguagePackStringValueDeleted(data json.RawMessage) (*LanguagePackStringValueDeleted, error) {
	var resp LanguagePackStringValueDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLanguagePackString(data json.RawMessage) (*LanguagePackString, error) {
	var resp LanguagePackString
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLanguagePackStrings(data json.RawMessage) (*LanguagePackStrings, error) {
	var resp LanguagePackStrings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLanguagePackInfo(data json.RawMessage) (*LanguagePackInfo, error) {
	var resp LanguagePackInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLocalizationTargetInfo(data json.RawMessage) (*LocalizationTargetInfo, error) {
	var resp LocalizationTargetInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeSupergroupCount(data json.RawMessage) (*PremiumLimitTypeSupergroupCount, error) {
	var resp PremiumLimitTypeSupergroupCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypePinnedChatCount(data json.RawMessage) (*PremiumLimitTypePinnedChatCount, error) {
	var resp PremiumLimitTypePinnedChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeCreatedPublicChatCount(data json.RawMessage) (*PremiumLimitTypeCreatedPublicChatCount, error) {
	var resp PremiumLimitTypeCreatedPublicChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeSavedAnimationCount(data json.RawMessage) (*PremiumLimitTypeSavedAnimationCount, error) {
	var resp PremiumLimitTypeSavedAnimationCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeFavoriteStickerCount(data json.RawMessage) (*PremiumLimitTypeFavoriteStickerCount, error) {
	var resp PremiumLimitTypeFavoriteStickerCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeChatFolderCount(data json.RawMessage) (*PremiumLimitTypeChatFolderCount, error) {
	var resp PremiumLimitTypeChatFolderCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeChatFolderChosenChatCount(data json.RawMessage) (*PremiumLimitTypeChatFolderChosenChatCount, error) {
	var resp PremiumLimitTypeChatFolderChosenChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypePinnedArchivedChatCount(data json.RawMessage) (*PremiumLimitTypePinnedArchivedChatCount, error) {
	var resp PremiumLimitTypePinnedArchivedChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypePinnedSavedMessagesTopicCount(data json.RawMessage) (*PremiumLimitTypePinnedSavedMessagesTopicCount, error) {
	var resp PremiumLimitTypePinnedSavedMessagesTopicCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeCaptionLength(data json.RawMessage) (*PremiumLimitTypeCaptionLength, error) {
	var resp PremiumLimitTypeCaptionLength
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeBioLength(data json.RawMessage) (*PremiumLimitTypeBioLength, error) {
	var resp PremiumLimitTypeBioLength
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeChatFolderInviteLinkCount(data json.RawMessage) (*PremiumLimitTypeChatFolderInviteLinkCount, error) {
	var resp PremiumLimitTypeChatFolderInviteLinkCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeShareableChatFolderCount(data json.RawMessage) (*PremiumLimitTypeShareableChatFolderCount, error) {
	var resp PremiumLimitTypeShareableChatFolderCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeActiveStoryCount(data json.RawMessage) (*PremiumLimitTypeActiveStoryCount, error) {
	var resp PremiumLimitTypeActiveStoryCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeWeeklySentStoryCount(data json.RawMessage) (*PremiumLimitTypeWeeklySentStoryCount, error) {
	var resp PremiumLimitTypeWeeklySentStoryCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeMonthlySentStoryCount(data json.RawMessage) (*PremiumLimitTypeMonthlySentStoryCount, error) {
	var resp PremiumLimitTypeMonthlySentStoryCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeStoryCaptionLength(data json.RawMessage) (*PremiumLimitTypeStoryCaptionLength, error) {
	var resp PremiumLimitTypeStoryCaptionLength
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeStorySuggestedReactionAreaCount(data json.RawMessage) (*PremiumLimitTypeStorySuggestedReactionAreaCount, error) {
	var resp PremiumLimitTypeStorySuggestedReactionAreaCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimitTypeSimilarChatCount(data json.RawMessage) (*PremiumLimitTypeSimilarChatCount, error) {
	var resp PremiumLimitTypeSimilarChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureIncreasedLimits(data json.RawMessage) (*PremiumFeatureIncreasedLimits, error) {
	var resp PremiumFeatureIncreasedLimits
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureIncreasedUploadFileSize(data json.RawMessage) (*PremiumFeatureIncreasedUploadFileSize, error) {
	var resp PremiumFeatureIncreasedUploadFileSize
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureImprovedDownloadSpeed(data json.RawMessage) (*PremiumFeatureImprovedDownloadSpeed, error) {
	var resp PremiumFeatureImprovedDownloadSpeed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureVoiceRecognition(data json.RawMessage) (*PremiumFeatureVoiceRecognition, error) {
	var resp PremiumFeatureVoiceRecognition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureDisabledAds(data json.RawMessage) (*PremiumFeatureDisabledAds, error) {
	var resp PremiumFeatureDisabledAds
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureUniqueReactions(data json.RawMessage) (*PremiumFeatureUniqueReactions, error) {
	var resp PremiumFeatureUniqueReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureUniqueStickers(data json.RawMessage) (*PremiumFeatureUniqueStickers, error) {
	var resp PremiumFeatureUniqueStickers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureCustomEmoji(data json.RawMessage) (*PremiumFeatureCustomEmoji, error) {
	var resp PremiumFeatureCustomEmoji
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureAdvancedChatManagement(data json.RawMessage) (*PremiumFeatureAdvancedChatManagement, error) {
	var resp PremiumFeatureAdvancedChatManagement
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureProfileBadge(data json.RawMessage) (*PremiumFeatureProfileBadge, error) {
	var resp PremiumFeatureProfileBadge
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureEmojiStatus(data json.RawMessage) (*PremiumFeatureEmojiStatus, error) {
	var resp PremiumFeatureEmojiStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureAnimatedProfilePhoto(data json.RawMessage) (*PremiumFeatureAnimatedProfilePhoto, error) {
	var resp PremiumFeatureAnimatedProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureForumTopicIcon(data json.RawMessage) (*PremiumFeatureForumTopicIcon, error) {
	var resp PremiumFeatureForumTopicIcon
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureAppIcons(data json.RawMessage) (*PremiumFeatureAppIcons, error) {
	var resp PremiumFeatureAppIcons
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureRealTimeChatTranslation(data json.RawMessage) (*PremiumFeatureRealTimeChatTranslation, error) {
	var resp PremiumFeatureRealTimeChatTranslation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureUpgradedStories(data json.RawMessage) (*PremiumFeatureUpgradedStories, error) {
	var resp PremiumFeatureUpgradedStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureChatBoost(data json.RawMessage) (*PremiumFeatureChatBoost, error) {
	var resp PremiumFeatureChatBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureAccentColor(data json.RawMessage) (*PremiumFeatureAccentColor, error) {
	var resp PremiumFeatureAccentColor
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureBackgroundForBoth(data json.RawMessage) (*PremiumFeatureBackgroundForBoth, error) {
	var resp PremiumFeatureBackgroundForBoth
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureSavedMessagesTags(data json.RawMessage) (*PremiumFeatureSavedMessagesTags, error) {
	var resp PremiumFeatureSavedMessagesTags
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureMessagePrivacy(data json.RawMessage) (*PremiumFeatureMessagePrivacy, error) {
	var resp PremiumFeatureMessagePrivacy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureLastSeenTimes(data json.RawMessage) (*PremiumFeatureLastSeenTimes, error) {
	var resp PremiumFeatureLastSeenTimes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureBusiness(data json.RawMessage) (*PremiumFeatureBusiness, error) {
	var resp PremiumFeatureBusiness
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatureMessageEffects(data json.RawMessage) (*PremiumFeatureMessageEffects, error) {
	var resp PremiumFeatureMessageEffects
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureLocation(data json.RawMessage) (*BusinessFeatureLocation, error) {
	var resp BusinessFeatureLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureOpeningHours(data json.RawMessage) (*BusinessFeatureOpeningHours, error) {
	var resp BusinessFeatureOpeningHours
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureQuickReplies(data json.RawMessage) (*BusinessFeatureQuickReplies, error) {
	var resp BusinessFeatureQuickReplies
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureGreetingMessage(data json.RawMessage) (*BusinessFeatureGreetingMessage, error) {
	var resp BusinessFeatureGreetingMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureAwayMessage(data json.RawMessage) (*BusinessFeatureAwayMessage, error) {
	var resp BusinessFeatureAwayMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureAccountLinks(data json.RawMessage) (*BusinessFeatureAccountLinks, error) {
	var resp BusinessFeatureAccountLinks
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureStartPage(data json.RawMessage) (*BusinessFeatureStartPage, error) {
	var resp BusinessFeatureStartPage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureBots(data json.RawMessage) (*BusinessFeatureBots, error) {
	var resp BusinessFeatureBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureEmojiStatus(data json.RawMessage) (*BusinessFeatureEmojiStatus, error) {
	var resp BusinessFeatureEmojiStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureChatFolderTags(data json.RawMessage) (*BusinessFeatureChatFolderTags, error) {
	var resp BusinessFeatureChatFolderTags
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatureUpgradedStories(data json.RawMessage) (*BusinessFeatureUpgradedStories, error) {
	var resp BusinessFeatureUpgradedStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeaturePriorityOrder(data json.RawMessage) (*PremiumStoryFeaturePriorityOrder, error) {
	var resp PremiumStoryFeaturePriorityOrder
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeatureStealthMode(data json.RawMessage) (*PremiumStoryFeatureStealthMode, error) {
	var resp PremiumStoryFeatureStealthMode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeaturePermanentViewsHistory(data json.RawMessage) (*PremiumStoryFeaturePermanentViewsHistory, error) {
	var resp PremiumStoryFeaturePermanentViewsHistory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeatureCustomExpirationDuration(data json.RawMessage) (*PremiumStoryFeatureCustomExpirationDuration, error) {
	var resp PremiumStoryFeatureCustomExpirationDuration
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeatureSaveStories(data json.RawMessage) (*PremiumStoryFeatureSaveStories, error) {
	var resp PremiumStoryFeatureSaveStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeatureLinksAndFormatting(data json.RawMessage) (*PremiumStoryFeatureLinksAndFormatting, error) {
	var resp PremiumStoryFeatureLinksAndFormatting
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumStoryFeatureVideoQuality(data json.RawMessage) (*PremiumStoryFeatureVideoQuality, error) {
	var resp PremiumStoryFeatureVideoQuality
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumLimit(data json.RawMessage) (*PremiumLimit, error) {
	var resp PremiumLimit
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeatures(data json.RawMessage) (*PremiumFeatures, error) {
	var resp PremiumFeatures
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeatures(data json.RawMessage) (*BusinessFeatures, error) {
	var resp BusinessFeatures
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumSourceLimitExceeded(data json.RawMessage) (*PremiumSourceLimitExceeded, error) {
	var resp PremiumSourceLimitExceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumSourceFeature(data json.RawMessage) (*PremiumSourceFeature, error) {
	var resp PremiumSourceFeature
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumSourceBusinessFeature(data json.RawMessage) (*PremiumSourceBusinessFeature, error) {
	var resp PremiumSourceBusinessFeature
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumSourceStoryFeature(data json.RawMessage) (*PremiumSourceStoryFeature, error) {
	var resp PremiumSourceStoryFeature
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumSourceLink(data json.RawMessage) (*PremiumSourceLink, error) {
	var resp PremiumSourceLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumSourceSettings(data json.RawMessage) (*PremiumSourceSettings, error) {
	var resp PremiumSourceSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumFeaturePromotionAnimation(data json.RawMessage) (*PremiumFeaturePromotionAnimation, error) {
	var resp PremiumFeaturePromotionAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBusinessFeaturePromotionAnimation(data json.RawMessage) (*BusinessFeaturePromotionAnimation, error) {
	var resp BusinessFeaturePromotionAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPremiumState(data json.RawMessage) (*PremiumState, error) {
	var resp PremiumState
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposePremiumSubscription(data json.RawMessage) (*StorePaymentPurposePremiumSubscription, error) {
	var resp StorePaymentPurposePremiumSubscription
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposePremiumGift(data json.RawMessage) (*StorePaymentPurposePremiumGift, error) {
	var resp StorePaymentPurposePremiumGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposePremiumGiftCodes(data json.RawMessage) (*StorePaymentPurposePremiumGiftCodes, error) {
	var resp StorePaymentPurposePremiumGiftCodes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposePremiumGiveaway(data json.RawMessage) (*StorePaymentPurposePremiumGiveaway, error) {
	var resp StorePaymentPurposePremiumGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposeStarGiveaway(data json.RawMessage) (*StorePaymentPurposeStarGiveaway, error) {
	var resp StorePaymentPurposeStarGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposeStars(data json.RawMessage) (*StorePaymentPurposeStars, error) {
	var resp StorePaymentPurposeStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorePaymentPurposeGiftedStars(data json.RawMessage) (*StorePaymentPurposeGiftedStars, error) {
	var resp StorePaymentPurposeGiftedStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoreTransactionAppStore(data json.RawMessage) (*StoreTransactionAppStore, error) {
	var resp StoreTransactionAppStore
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoreTransactionGooglePlay(data json.RawMessage) (*StoreTransactionGooglePlay, error) {
	var resp StoreTransactionGooglePlay
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposePremiumGift(data json.RawMessage) (*TelegramPaymentPurposePremiumGift, error) {
	var resp TelegramPaymentPurposePremiumGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposePremiumGiftCodes(data json.RawMessage) (*TelegramPaymentPurposePremiumGiftCodes, error) {
	var resp TelegramPaymentPurposePremiumGiftCodes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposePremiumGiveaway(data json.RawMessage) (*TelegramPaymentPurposePremiumGiveaway, error) {
	var resp TelegramPaymentPurposePremiumGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposeStars(data json.RawMessage) (*TelegramPaymentPurposeStars, error) {
	var resp TelegramPaymentPurposeStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposeGiftedStars(data json.RawMessage) (*TelegramPaymentPurposeGiftedStars, error) {
	var resp TelegramPaymentPurposeGiftedStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposeStarGiveaway(data json.RawMessage) (*TelegramPaymentPurposeStarGiveaway, error) {
	var resp TelegramPaymentPurposeStarGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTelegramPaymentPurposeJoinChat(data json.RawMessage) (*TelegramPaymentPurposeJoinChat, error) {
	var resp TelegramPaymentPurposeJoinChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenFirebaseCloudMessaging(data json.RawMessage) (*DeviceTokenFirebaseCloudMessaging, error) {
	var resp DeviceTokenFirebaseCloudMessaging
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenApplePush(data json.RawMessage) (*DeviceTokenApplePush, error) {
	var resp DeviceTokenApplePush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenApplePushVoIP(data json.RawMessage) (*DeviceTokenApplePushVoIP, error) {
	var resp DeviceTokenApplePushVoIP
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenWindowsPush(data json.RawMessage) (*DeviceTokenWindowsPush, error) {
	var resp DeviceTokenWindowsPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenMicrosoftPush(data json.RawMessage) (*DeviceTokenMicrosoftPush, error) {
	var resp DeviceTokenMicrosoftPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenMicrosoftPushVoIP(data json.RawMessage) (*DeviceTokenMicrosoftPushVoIP, error) {
	var resp DeviceTokenMicrosoftPushVoIP
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenWebPush(data json.RawMessage) (*DeviceTokenWebPush, error) {
	var resp DeviceTokenWebPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenSimplePush(data json.RawMessage) (*DeviceTokenSimplePush, error) {
	var resp DeviceTokenSimplePush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenUbuntuPush(data json.RawMessage) (*DeviceTokenUbuntuPush, error) {
	var resp DeviceTokenUbuntuPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenBlackBerryPush(data json.RawMessage) (*DeviceTokenBlackBerryPush, error) {
	var resp DeviceTokenBlackBerryPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenTizenPush(data json.RawMessage) (*DeviceTokenTizenPush, error) {
	var resp DeviceTokenTizenPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeviceTokenHuaweiPush(data json.RawMessage) (*DeviceTokenHuaweiPush, error) {
	var resp DeviceTokenHuaweiPush
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushReceiverId(data json.RawMessage) (*PushReceiverId, error) {
	var resp PushReceiverId
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundFillSolid(data json.RawMessage) (*BackgroundFillSolid, error) {
	var resp BackgroundFillSolid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundFillGradient(data json.RawMessage) (*BackgroundFillGradient, error) {
	var resp BackgroundFillGradient
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundFillFreeformGradient(data json.RawMessage) (*BackgroundFillFreeformGradient, error) {
	var resp BackgroundFillFreeformGradient
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundTypeWallpaper(data json.RawMessage) (*BackgroundTypeWallpaper, error) {
	var resp BackgroundTypeWallpaper
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundTypePattern(data json.RawMessage) (*BackgroundTypePattern, error) {
	var resp BackgroundTypePattern
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundTypeFill(data json.RawMessage) (*BackgroundTypeFill, error) {
	var resp BackgroundTypeFill
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBackgroundTypeChatTheme(data json.RawMessage) (*BackgroundTypeChatTheme, error) {
	var resp BackgroundTypeChatTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputBackgroundLocal(data json.RawMessage) (*InputBackgroundLocal, error) {
	var resp InputBackgroundLocal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputBackgroundRemote(data json.RawMessage) (*InputBackgroundRemote, error) {
	var resp InputBackgroundRemote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputBackgroundPrevious(data json.RawMessage) (*InputBackgroundPrevious, error) {
	var resp InputBackgroundPrevious
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatTheme(data json.RawMessage) (*ChatTheme, error) {
	var resp ChatTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTimeZone(data json.RawMessage) (*TimeZone, error) {
	var resp TimeZone
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTimeZones(data json.RawMessage) (*TimeZones, error) {
	var resp TimeZones
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalHashtags(data json.RawMessage) (*Hashtags, error) {
	var resp Hashtags
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendStoryResultOk(data json.RawMessage) (*CanSendStoryResultOk, error) {
	var resp CanSendStoryResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendStoryResultPremiumNeeded(data json.RawMessage) (*CanSendStoryResultPremiumNeeded, error) {
	var resp CanSendStoryResultPremiumNeeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendStoryResultBoostNeeded(data json.RawMessage) (*CanSendStoryResultBoostNeeded, error) {
	var resp CanSendStoryResultBoostNeeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendStoryResultActiveStoryLimitExceeded(data json.RawMessage) (*CanSendStoryResultActiveStoryLimitExceeded, error) {
	var resp CanSendStoryResultActiveStoryLimitExceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendStoryResultWeeklyLimitExceeded(data json.RawMessage) (*CanSendStoryResultWeeklyLimitExceeded, error) {
	var resp CanSendStoryResultWeeklyLimitExceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendStoryResultMonthlyLimitExceeded(data json.RawMessage) (*CanSendStoryResultMonthlyLimitExceeded, error) {
	var resp CanSendStoryResultMonthlyLimitExceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanTransferOwnershipResultOk(data json.RawMessage) (*CanTransferOwnershipResultOk, error) {
	var resp CanTransferOwnershipResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanTransferOwnershipResultPasswordNeeded(data json.RawMessage) (*CanTransferOwnershipResultPasswordNeeded, error) {
	var resp CanTransferOwnershipResultPasswordNeeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanTransferOwnershipResultPasswordTooFresh(data json.RawMessage) (*CanTransferOwnershipResultPasswordTooFresh, error) {
	var resp CanTransferOwnershipResultPasswordTooFresh
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanTransferOwnershipResultSessionTooFresh(data json.RawMessage) (*CanTransferOwnershipResultSessionTooFresh, error) {
	var resp CanTransferOwnershipResultSessionTooFresh
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckChatUsernameResultOk(data json.RawMessage) (*CheckChatUsernameResultOk, error) {
	var resp CheckChatUsernameResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckChatUsernameResultUsernameInvalid(data json.RawMessage) (*CheckChatUsernameResultUsernameInvalid, error) {
	var resp CheckChatUsernameResultUsernameInvalid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckChatUsernameResultUsernameOccupied(data json.RawMessage) (*CheckChatUsernameResultUsernameOccupied, error) {
	var resp CheckChatUsernameResultUsernameOccupied
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckChatUsernameResultUsernamePurchasable(data json.RawMessage) (*CheckChatUsernameResultUsernamePurchasable, error) {
	var resp CheckChatUsernameResultUsernamePurchasable
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckChatUsernameResultPublicChatsTooMany(data json.RawMessage) (*CheckChatUsernameResultPublicChatsTooMany, error) {
	var resp CheckChatUsernameResultPublicChatsTooMany
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckChatUsernameResultPublicGroupsUnavailable(data json.RawMessage) (*CheckChatUsernameResultPublicGroupsUnavailable, error) {
	var resp CheckChatUsernameResultPublicGroupsUnavailable
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckStickerSetNameResultOk(data json.RawMessage) (*CheckStickerSetNameResultOk, error) {
	var resp CheckStickerSetNameResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckStickerSetNameResultNameInvalid(data json.RawMessage) (*CheckStickerSetNameResultNameInvalid, error) {
	var resp CheckStickerSetNameResultNameInvalid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCheckStickerSetNameResultNameOccupied(data json.RawMessage) (*CheckStickerSetNameResultNameOccupied, error) {
	var resp CheckStickerSetNameResultNameOccupied
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalResetPasswordResultOk(data json.RawMessage) (*ResetPasswordResultOk, error) {
	var resp ResetPasswordResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalResetPasswordResultPending(data json.RawMessage) (*ResetPasswordResultPending, error) {
	var resp ResetPasswordResultPending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalResetPasswordResultDeclined(data json.RawMessage) (*ResetPasswordResultDeclined, error) {
	var resp ResetPasswordResultDeclined
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageFileTypePrivate(data json.RawMessage) (*MessageFileTypePrivate, error) {
	var resp MessageFileTypePrivate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageFileTypeGroup(data json.RawMessage) (*MessageFileTypeGroup, error) {
	var resp MessageFileTypeGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageFileTypeUnknown(data json.RawMessage) (*MessageFileTypeUnknown, error) {
	var resp MessageFileTypeUnknown
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentHidden(data json.RawMessage) (*PushMessageContentHidden, error) {
	var resp PushMessageContentHidden
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentAnimation(data json.RawMessage) (*PushMessageContentAnimation, error) {
	var resp PushMessageContentAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentAudio(data json.RawMessage) (*PushMessageContentAudio, error) {
	var resp PushMessageContentAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentContact(data json.RawMessage) (*PushMessageContentContact, error) {
	var resp PushMessageContentContact
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentContactRegistered(data json.RawMessage) (*PushMessageContentContactRegistered, error) {
	var resp PushMessageContentContactRegistered
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentDocument(data json.RawMessage) (*PushMessageContentDocument, error) {
	var resp PushMessageContentDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentGame(data json.RawMessage) (*PushMessageContentGame, error) {
	var resp PushMessageContentGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentGameScore(data json.RawMessage) (*PushMessageContentGameScore, error) {
	var resp PushMessageContentGameScore
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentInvoice(data json.RawMessage) (*PushMessageContentInvoice, error) {
	var resp PushMessageContentInvoice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentLocation(data json.RawMessage) (*PushMessageContentLocation, error) {
	var resp PushMessageContentLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentPaidMedia(data json.RawMessage) (*PushMessageContentPaidMedia, error) {
	var resp PushMessageContentPaidMedia
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentPhoto(data json.RawMessage) (*PushMessageContentPhoto, error) {
	var resp PushMessageContentPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentPoll(data json.RawMessage) (*PushMessageContentPoll, error) {
	var resp PushMessageContentPoll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentPremiumGiftCode(data json.RawMessage) (*PushMessageContentPremiumGiftCode, error) {
	var resp PushMessageContentPremiumGiftCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentGiveaway(data json.RawMessage) (*PushMessageContentGiveaway, error) {
	var resp PushMessageContentGiveaway
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentGift(data json.RawMessage) (*PushMessageContentGift, error) {
	var resp PushMessageContentGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentUpgradedGift(data json.RawMessage) (*PushMessageContentUpgradedGift, error) {
	var resp PushMessageContentUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentScreenshotTaken(data json.RawMessage) (*PushMessageContentScreenshotTaken, error) {
	var resp PushMessageContentScreenshotTaken
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentSticker(data json.RawMessage) (*PushMessageContentSticker, error) {
	var resp PushMessageContentSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentStory(data json.RawMessage) (*PushMessageContentStory, error) {
	var resp PushMessageContentStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentText(data json.RawMessage) (*PushMessageContentText, error) {
	var resp PushMessageContentText
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentVideo(data json.RawMessage) (*PushMessageContentVideo, error) {
	var resp PushMessageContentVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentVideoNote(data json.RawMessage) (*PushMessageContentVideoNote, error) {
	var resp PushMessageContentVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentVoiceNote(data json.RawMessage) (*PushMessageContentVoiceNote, error) {
	var resp PushMessageContentVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentBasicGroupChatCreate(data json.RawMessage) (*PushMessageContentBasicGroupChatCreate, error) {
	var resp PushMessageContentBasicGroupChatCreate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentVideoChatStarted(data json.RawMessage) (*PushMessageContentVideoChatStarted, error) {
	var resp PushMessageContentVideoChatStarted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentVideoChatEnded(data json.RawMessage) (*PushMessageContentVideoChatEnded, error) {
	var resp PushMessageContentVideoChatEnded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentInviteVideoChatParticipants(data json.RawMessage) (*PushMessageContentInviteVideoChatParticipants, error) {
	var resp PushMessageContentInviteVideoChatParticipants
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatAddMembers(data json.RawMessage) (*PushMessageContentChatAddMembers, error) {
	var resp PushMessageContentChatAddMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatChangePhoto(data json.RawMessage) (*PushMessageContentChatChangePhoto, error) {
	var resp PushMessageContentChatChangePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatChangeTitle(data json.RawMessage) (*PushMessageContentChatChangeTitle, error) {
	var resp PushMessageContentChatChangeTitle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatSetBackground(data json.RawMessage) (*PushMessageContentChatSetBackground, error) {
	var resp PushMessageContentChatSetBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatSetTheme(data json.RawMessage) (*PushMessageContentChatSetTheme, error) {
	var resp PushMessageContentChatSetTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatDeleteMember(data json.RawMessage) (*PushMessageContentChatDeleteMember, error) {
	var resp PushMessageContentChatDeleteMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatJoinByLink(data json.RawMessage) (*PushMessageContentChatJoinByLink, error) {
	var resp PushMessageContentChatJoinByLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentChatJoinByRequest(data json.RawMessage) (*PushMessageContentChatJoinByRequest, error) {
	var resp PushMessageContentChatJoinByRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentRecurringPayment(data json.RawMessage) (*PushMessageContentRecurringPayment, error) {
	var resp PushMessageContentRecurringPayment
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentSuggestProfilePhoto(data json.RawMessage) (*PushMessageContentSuggestProfilePhoto, error) {
	var resp PushMessageContentSuggestProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentProximityAlertTriggered(data json.RawMessage) (*PushMessageContentProximityAlertTriggered, error) {
	var resp PushMessageContentProximityAlertTriggered
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentMessageForwards(data json.RawMessage) (*PushMessageContentMessageForwards, error) {
	var resp PushMessageContentMessageForwards
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPushMessageContentMediaAlbum(data json.RawMessage) (*PushMessageContentMediaAlbum, error) {
	var resp PushMessageContentMediaAlbum
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationTypeNewMessage(data json.RawMessage) (*NotificationTypeNewMessage, error) {
	var resp NotificationTypeNewMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationTypeNewSecretChat(data json.RawMessage) (*NotificationTypeNewSecretChat, error) {
	var resp NotificationTypeNewSecretChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationTypeNewCall(data json.RawMessage) (*NotificationTypeNewCall, error) {
	var resp NotificationTypeNewCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationTypeNewPushMessage(data json.RawMessage) (*NotificationTypeNewPushMessage, error) {
	var resp NotificationTypeNewPushMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationGroupTypeMessages(data json.RawMessage) (*NotificationGroupTypeMessages, error) {
	var resp NotificationGroupTypeMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationGroupTypeMentions(data json.RawMessage) (*NotificationGroupTypeMentions, error) {
	var resp NotificationGroupTypeMentions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationGroupTypeSecretChat(data json.RawMessage) (*NotificationGroupTypeSecretChat, error) {
	var resp NotificationGroupTypeSecretChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationGroupTypeCalls(data json.RawMessage) (*NotificationGroupTypeCalls, error) {
	var resp NotificationGroupTypeCalls
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationSound(data json.RawMessage) (*NotificationSound, error) {
	var resp NotificationSound
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationSounds(data json.RawMessage) (*NotificationSounds, error) {
	var resp NotificationSounds
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotification(data json.RawMessage) (*Notification, error) {
	var resp Notification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNotificationGroup(data json.RawMessage) (*NotificationGroup, error) {
	var resp NotificationGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOptionValueBoolean(data json.RawMessage) (*OptionValueBoolean, error) {
	var resp OptionValueBoolean
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOptionValueEmpty(data json.RawMessage) (*OptionValueEmpty, error) {
	var resp OptionValueEmpty
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOptionValueInteger(data json.RawMessage) (*OptionValueInteger, error) {
	var resp OptionValueInteger
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalOptionValueString(data json.RawMessage) (*OptionValueString, error) {
	var resp OptionValueString
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonObjectMember(data json.RawMessage) (*JsonObjectMember, error) {
	var resp JsonObjectMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonValueNull(data json.RawMessage) (*JsonValueNull, error) {
	var resp JsonValueNull
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonValueBoolean(data json.RawMessage) (*JsonValueBoolean, error) {
	var resp JsonValueBoolean
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonValueNumber(data json.RawMessage) (*JsonValueNumber, error) {
	var resp JsonValueNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonValueString(data json.RawMessage) (*JsonValueString, error) {
	var resp JsonValueString
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonValueArray(data json.RawMessage) (*JsonValueArray, error) {
	var resp JsonValueArray
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalJsonValueObject(data json.RawMessage) (*JsonValueObject, error) {
	var resp JsonValueObject
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryPrivacySettingsEveryone(data json.RawMessage) (*StoryPrivacySettingsEveryone, error) {
	var resp StoryPrivacySettingsEveryone
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryPrivacySettingsContacts(data json.RawMessage) (*StoryPrivacySettingsContacts, error) {
	var resp StoryPrivacySettingsContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryPrivacySettingsCloseFriends(data json.RawMessage) (*StoryPrivacySettingsCloseFriends, error) {
	var resp StoryPrivacySettingsCloseFriends
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryPrivacySettingsSelectedUsers(data json.RawMessage) (*StoryPrivacySettingsSelectedUsers, error) {
	var resp StoryPrivacySettingsSelectedUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleAllowAll(data json.RawMessage) (*UserPrivacySettingRuleAllowAll, error) {
	var resp UserPrivacySettingRuleAllowAll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleAllowContacts(data json.RawMessage) (*UserPrivacySettingRuleAllowContacts, error) {
	var resp UserPrivacySettingRuleAllowContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleAllowBots(data json.RawMessage) (*UserPrivacySettingRuleAllowBots, error) {
	var resp UserPrivacySettingRuleAllowBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleAllowPremiumUsers(data json.RawMessage) (*UserPrivacySettingRuleAllowPremiumUsers, error) {
	var resp UserPrivacySettingRuleAllowPremiumUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleAllowUsers(data json.RawMessage) (*UserPrivacySettingRuleAllowUsers, error) {
	var resp UserPrivacySettingRuleAllowUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleAllowChatMembers(data json.RawMessage) (*UserPrivacySettingRuleAllowChatMembers, error) {
	var resp UserPrivacySettingRuleAllowChatMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleRestrictAll(data json.RawMessage) (*UserPrivacySettingRuleRestrictAll, error) {
	var resp UserPrivacySettingRuleRestrictAll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleRestrictContacts(data json.RawMessage) (*UserPrivacySettingRuleRestrictContacts, error) {
	var resp UserPrivacySettingRuleRestrictContacts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleRestrictBots(data json.RawMessage) (*UserPrivacySettingRuleRestrictBots, error) {
	var resp UserPrivacySettingRuleRestrictBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleRestrictUsers(data json.RawMessage) (*UserPrivacySettingRuleRestrictUsers, error) {
	var resp UserPrivacySettingRuleRestrictUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRuleRestrictChatMembers(data json.RawMessage) (*UserPrivacySettingRuleRestrictChatMembers, error) {
	var resp UserPrivacySettingRuleRestrictChatMembers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingRules(data json.RawMessage) (*UserPrivacySettingRules, error) {
	var resp UserPrivacySettingRules
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingShowStatus(data json.RawMessage) (*UserPrivacySettingShowStatus, error) {
	var resp UserPrivacySettingShowStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingShowProfilePhoto(data json.RawMessage) (*UserPrivacySettingShowProfilePhoto, error) {
	var resp UserPrivacySettingShowProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingShowLinkInForwardedMessages(data json.RawMessage) (*UserPrivacySettingShowLinkInForwardedMessages, error) {
	var resp UserPrivacySettingShowLinkInForwardedMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingShowPhoneNumber(data json.RawMessage) (*UserPrivacySettingShowPhoneNumber, error) {
	var resp UserPrivacySettingShowPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingShowBio(data json.RawMessage) (*UserPrivacySettingShowBio, error) {
	var resp UserPrivacySettingShowBio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingShowBirthdate(data json.RawMessage) (*UserPrivacySettingShowBirthdate, error) {
	var resp UserPrivacySettingShowBirthdate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAllowChatInvites(data json.RawMessage) (*UserPrivacySettingAllowChatInvites, error) {
	var resp UserPrivacySettingAllowChatInvites
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAllowCalls(data json.RawMessage) (*UserPrivacySettingAllowCalls, error) {
	var resp UserPrivacySettingAllowCalls
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAllowPeerToPeerCalls(data json.RawMessage) (*UserPrivacySettingAllowPeerToPeerCalls, error) {
	var resp UserPrivacySettingAllowPeerToPeerCalls
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAllowFindingByPhoneNumber(data json.RawMessage) (*UserPrivacySettingAllowFindingByPhoneNumber, error) {
	var resp UserPrivacySettingAllowFindingByPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages(data json.RawMessage) (*UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages, error) {
	var resp UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAutosaveGifts(data json.RawMessage) (*UserPrivacySettingAutosaveGifts, error) {
	var resp UserPrivacySettingAutosaveGifts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserPrivacySettingAllowUnpaidMessages(data json.RawMessage) (*UserPrivacySettingAllowUnpaidMessages, error) {
	var resp UserPrivacySettingAllowUnpaidMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReadDatePrivacySettings(data json.RawMessage) (*ReadDatePrivacySettings, error) {
	var resp ReadDatePrivacySettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNewChatPrivacySettings(data json.RawMessage) (*NewChatPrivacySettings, error) {
	var resp NewChatPrivacySettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendMessageToUserResultOk(data json.RawMessage) (*CanSendMessageToUserResultOk, error) {
	var resp CanSendMessageToUserResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendMessageToUserResultUserHasPaidMessages(data json.RawMessage) (*CanSendMessageToUserResultUserHasPaidMessages, error) {
	var resp CanSendMessageToUserResultUserHasPaidMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendMessageToUserResultUserIsDeleted(data json.RawMessage) (*CanSendMessageToUserResultUserIsDeleted, error) {
	var resp CanSendMessageToUserResultUserIsDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCanSendMessageToUserResultUserRestrictsNewChats(data json.RawMessage) (*CanSendMessageToUserResultUserRestrictsNewChats, error) {
	var resp CanSendMessageToUserResultUserRestrictsNewChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAccountTtl(data json.RawMessage) (*AccountTtl, error) {
	var resp AccountTtl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageAutoDeleteTime(data json.RawMessage) (*MessageAutoDeleteTime, error) {
	var resp MessageAutoDeleteTime
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeAndroid(data json.RawMessage) (*SessionTypeAndroid, error) {
	var resp SessionTypeAndroid
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeApple(data json.RawMessage) (*SessionTypeApple, error) {
	var resp SessionTypeApple
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeBrave(data json.RawMessage) (*SessionTypeBrave, error) {
	var resp SessionTypeBrave
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeChrome(data json.RawMessage) (*SessionTypeChrome, error) {
	var resp SessionTypeChrome
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeEdge(data json.RawMessage) (*SessionTypeEdge, error) {
	var resp SessionTypeEdge
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeFirefox(data json.RawMessage) (*SessionTypeFirefox, error) {
	var resp SessionTypeFirefox
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeIpad(data json.RawMessage) (*SessionTypeIpad, error) {
	var resp SessionTypeIpad
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeIphone(data json.RawMessage) (*SessionTypeIphone, error) {
	var resp SessionTypeIphone
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeLinux(data json.RawMessage) (*SessionTypeLinux, error) {
	var resp SessionTypeLinux
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeMac(data json.RawMessage) (*SessionTypeMac, error) {
	var resp SessionTypeMac
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeOpera(data json.RawMessage) (*SessionTypeOpera, error) {
	var resp SessionTypeOpera
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeSafari(data json.RawMessage) (*SessionTypeSafari, error) {
	var resp SessionTypeSafari
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeUbuntu(data json.RawMessage) (*SessionTypeUbuntu, error) {
	var resp SessionTypeUbuntu
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeUnknown(data json.RawMessage) (*SessionTypeUnknown, error) {
	var resp SessionTypeUnknown
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeVivaldi(data json.RawMessage) (*SessionTypeVivaldi, error) {
	var resp SessionTypeVivaldi
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeWindows(data json.RawMessage) (*SessionTypeWindows, error) {
	var resp SessionTypeWindows
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessionTypeXbox(data json.RawMessage) (*SessionTypeXbox, error) {
	var resp SessionTypeXbox
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSession(data json.RawMessage) (*Session, error) {
	var resp Session
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSessions(data json.RawMessage) (*Sessions, error) {
	var resp Sessions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUnconfirmedSession(data json.RawMessage) (*UnconfirmedSession, error) {
	var resp UnconfirmedSession
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectedWebsite(data json.RawMessage) (*ConnectedWebsite, error) {
	var resp ConnectedWebsite
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectedWebsites(data json.RawMessage) (*ConnectedWebsites, error) {
	var resp ConnectedWebsites
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonSpam(data json.RawMessage) (*ReportReasonSpam, error) {
	var resp ReportReasonSpam
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonViolence(data json.RawMessage) (*ReportReasonViolence, error) {
	var resp ReportReasonViolence
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonPornography(data json.RawMessage) (*ReportReasonPornography, error) {
	var resp ReportReasonPornography
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonChildAbuse(data json.RawMessage) (*ReportReasonChildAbuse, error) {
	var resp ReportReasonChildAbuse
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonCopyright(data json.RawMessage) (*ReportReasonCopyright, error) {
	var resp ReportReasonCopyright
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonUnrelatedLocation(data json.RawMessage) (*ReportReasonUnrelatedLocation, error) {
	var resp ReportReasonUnrelatedLocation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonFake(data json.RawMessage) (*ReportReasonFake, error) {
	var resp ReportReasonFake
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonIllegalDrugs(data json.RawMessage) (*ReportReasonIllegalDrugs, error) {
	var resp ReportReasonIllegalDrugs
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonPersonalDetails(data json.RawMessage) (*ReportReasonPersonalDetails, error) {
	var resp ReportReasonPersonalDetails
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportReasonCustom(data json.RawMessage) (*ReportReasonCustom, error) {
	var resp ReportReasonCustom
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportChatResultOk(data json.RawMessage) (*ReportChatResultOk, error) {
	var resp ReportChatResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportChatResultOptionRequired(data json.RawMessage) (*ReportChatResultOptionRequired, error) {
	var resp ReportChatResultOptionRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportChatResultTextRequired(data json.RawMessage) (*ReportChatResultTextRequired, error) {
	var resp ReportChatResultTextRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportChatResultMessagesRequired(data json.RawMessage) (*ReportChatResultMessagesRequired, error) {
	var resp ReportChatResultMessagesRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportStoryResultOk(data json.RawMessage) (*ReportStoryResultOk, error) {
	var resp ReportStoryResultOk
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportStoryResultOptionRequired(data json.RawMessage) (*ReportStoryResultOptionRequired, error) {
	var resp ReportStoryResultOptionRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalReportStoryResultTextRequired(data json.RawMessage) (*ReportStoryResultTextRequired, error) {
	var resp ReportStoryResultTextRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeActiveSessions(data json.RawMessage) (*InternalLinkTypeActiveSessions, error) {
	var resp InternalLinkTypeActiveSessions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeAttachmentMenuBot(data json.RawMessage) (*InternalLinkTypeAttachmentMenuBot, error) {
	var resp InternalLinkTypeAttachmentMenuBot
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeAuthenticationCode(data json.RawMessage) (*InternalLinkTypeAuthenticationCode, error) {
	var resp InternalLinkTypeAuthenticationCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeBackground(data json.RawMessage) (*InternalLinkTypeBackground, error) {
	var resp InternalLinkTypeBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeBotAddToChannel(data json.RawMessage) (*InternalLinkTypeBotAddToChannel, error) {
	var resp InternalLinkTypeBotAddToChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeBotStart(data json.RawMessage) (*InternalLinkTypeBotStart, error) {
	var resp InternalLinkTypeBotStart
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeBotStartInGroup(data json.RawMessage) (*InternalLinkTypeBotStartInGroup, error) {
	var resp InternalLinkTypeBotStartInGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeBusinessChat(data json.RawMessage) (*InternalLinkTypeBusinessChat, error) {
	var resp InternalLinkTypeBusinessChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeBuyStars(data json.RawMessage) (*InternalLinkTypeBuyStars, error) {
	var resp InternalLinkTypeBuyStars
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeChangePhoneNumber(data json.RawMessage) (*InternalLinkTypeChangePhoneNumber, error) {
	var resp InternalLinkTypeChangePhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeChatAffiliateProgram(data json.RawMessage) (*InternalLinkTypeChatAffiliateProgram, error) {
	var resp InternalLinkTypeChatAffiliateProgram
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeChatBoost(data json.RawMessage) (*InternalLinkTypeChatBoost, error) {
	var resp InternalLinkTypeChatBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeChatFolderInvite(data json.RawMessage) (*InternalLinkTypeChatFolderInvite, error) {
	var resp InternalLinkTypeChatFolderInvite
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeChatFolderSettings(data json.RawMessage) (*InternalLinkTypeChatFolderSettings, error) {
	var resp InternalLinkTypeChatFolderSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeChatInvite(data json.RawMessage) (*InternalLinkTypeChatInvite, error) {
	var resp InternalLinkTypeChatInvite
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeDefaultMessageAutoDeleteTimerSettings(data json.RawMessage) (*InternalLinkTypeDefaultMessageAutoDeleteTimerSettings, error) {
	var resp InternalLinkTypeDefaultMessageAutoDeleteTimerSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeEditProfileSettings(data json.RawMessage) (*InternalLinkTypeEditProfileSettings, error) {
	var resp InternalLinkTypeEditProfileSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeGame(data json.RawMessage) (*InternalLinkTypeGame, error) {
	var resp InternalLinkTypeGame
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeInstantView(data json.RawMessage) (*InternalLinkTypeInstantView, error) {
	var resp InternalLinkTypeInstantView
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeInvoice(data json.RawMessage) (*InternalLinkTypeInvoice, error) {
	var resp InternalLinkTypeInvoice
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeLanguagePack(data json.RawMessage) (*InternalLinkTypeLanguagePack, error) {
	var resp InternalLinkTypeLanguagePack
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeLanguageSettings(data json.RawMessage) (*InternalLinkTypeLanguageSettings, error) {
	var resp InternalLinkTypeLanguageSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeMainWebApp(data json.RawMessage) (*InternalLinkTypeMainWebApp, error) {
	var resp InternalLinkTypeMainWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeMessage(data json.RawMessage) (*InternalLinkTypeMessage, error) {
	var resp InternalLinkTypeMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeMessageDraft(data json.RawMessage) (*InternalLinkTypeMessageDraft, error) {
	var resp InternalLinkTypeMessageDraft
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePassportDataRequest(data json.RawMessage) (*InternalLinkTypePassportDataRequest, error) {
	var resp InternalLinkTypePassportDataRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePhoneNumberConfirmation(data json.RawMessage) (*InternalLinkTypePhoneNumberConfirmation, error) {
	var resp InternalLinkTypePhoneNumberConfirmation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePremiumFeatures(data json.RawMessage) (*InternalLinkTypePremiumFeatures, error) {
	var resp InternalLinkTypePremiumFeatures
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePremiumGift(data json.RawMessage) (*InternalLinkTypePremiumGift, error) {
	var resp InternalLinkTypePremiumGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePremiumGiftCode(data json.RawMessage) (*InternalLinkTypePremiumGiftCode, error) {
	var resp InternalLinkTypePremiumGiftCode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePrivacyAndSecuritySettings(data json.RawMessage) (*InternalLinkTypePrivacyAndSecuritySettings, error) {
	var resp InternalLinkTypePrivacyAndSecuritySettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeProxy(data json.RawMessage) (*InternalLinkTypeProxy, error) {
	var resp InternalLinkTypeProxy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypePublicChat(data json.RawMessage) (*InternalLinkTypePublicChat, error) {
	var resp InternalLinkTypePublicChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeQrCodeAuthentication(data json.RawMessage) (*InternalLinkTypeQrCodeAuthentication, error) {
	var resp InternalLinkTypeQrCodeAuthentication
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeRestorePurchases(data json.RawMessage) (*InternalLinkTypeRestorePurchases, error) {
	var resp InternalLinkTypeRestorePurchases
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeSettings(data json.RawMessage) (*InternalLinkTypeSettings, error) {
	var resp InternalLinkTypeSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeStickerSet(data json.RawMessage) (*InternalLinkTypeStickerSet, error) {
	var resp InternalLinkTypeStickerSet
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeStory(data json.RawMessage) (*InternalLinkTypeStory, error) {
	var resp InternalLinkTypeStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeTheme(data json.RawMessage) (*InternalLinkTypeTheme, error) {
	var resp InternalLinkTypeTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeThemeSettings(data json.RawMessage) (*InternalLinkTypeThemeSettings, error) {
	var resp InternalLinkTypeThemeSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeUnknownDeepLink(data json.RawMessage) (*InternalLinkTypeUnknownDeepLink, error) {
	var resp InternalLinkTypeUnknownDeepLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeUnsupportedProxy(data json.RawMessage) (*InternalLinkTypeUnsupportedProxy, error) {
	var resp InternalLinkTypeUnsupportedProxy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeUpgradedGift(data json.RawMessage) (*InternalLinkTypeUpgradedGift, error) {
	var resp InternalLinkTypeUpgradedGift
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeUserPhoneNumber(data json.RawMessage) (*InternalLinkTypeUserPhoneNumber, error) {
	var resp InternalLinkTypeUserPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeUserToken(data json.RawMessage) (*InternalLinkTypeUserToken, error) {
	var resp InternalLinkTypeUserToken
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeVideoChat(data json.RawMessage) (*InternalLinkTypeVideoChat, error) {
	var resp InternalLinkTypeVideoChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInternalLinkTypeWebApp(data json.RawMessage) (*InternalLinkTypeWebApp, error) {
	var resp InternalLinkTypeWebApp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageLink(data json.RawMessage) (*MessageLink, error) {
	var resp MessageLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageLinkInfo(data json.RawMessage) (*MessageLinkInfo, error) {
	var resp MessageLinkInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostLink(data json.RawMessage) (*ChatBoostLink, error) {
	var resp ChatBoostLink
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatBoostLinkInfo(data json.RawMessage) (*ChatBoostLinkInfo, error) {
	var resp ChatBoostLinkInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBlockListMain(data json.RawMessage) (*BlockListMain, error) {
	var resp BlockListMain
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBlockListStories(data json.RawMessage) (*BlockListStories, error) {
	var resp BlockListStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFilePart(data json.RawMessage) (*FilePart, error) {
	var resp FilePart
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeNone(data json.RawMessage) (*FileTypeNone, error) {
	var resp FileTypeNone
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeAnimation(data json.RawMessage) (*FileTypeAnimation, error) {
	var resp FileTypeAnimation
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeAudio(data json.RawMessage) (*FileTypeAudio, error) {
	var resp FileTypeAudio
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeDocument(data json.RawMessage) (*FileTypeDocument, error) {
	var resp FileTypeDocument
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeNotificationSound(data json.RawMessage) (*FileTypeNotificationSound, error) {
	var resp FileTypeNotificationSound
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypePhoto(data json.RawMessage) (*FileTypePhoto, error) {
	var resp FileTypePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypePhotoStory(data json.RawMessage) (*FileTypePhotoStory, error) {
	var resp FileTypePhotoStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeProfilePhoto(data json.RawMessage) (*FileTypeProfilePhoto, error) {
	var resp FileTypeProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSecret(data json.RawMessage) (*FileTypeSecret, error) {
	var resp FileTypeSecret
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSecretThumbnail(data json.RawMessage) (*FileTypeSecretThumbnail, error) {
	var resp FileTypeSecretThumbnail
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSecure(data json.RawMessage) (*FileTypeSecure, error) {
	var resp FileTypeSecure
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSelfDestructingPhoto(data json.RawMessage) (*FileTypeSelfDestructingPhoto, error) {
	var resp FileTypeSelfDestructingPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSelfDestructingVideo(data json.RawMessage) (*FileTypeSelfDestructingVideo, error) {
	var resp FileTypeSelfDestructingVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSelfDestructingVideoNote(data json.RawMessage) (*FileTypeSelfDestructingVideoNote, error) {
	var resp FileTypeSelfDestructingVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSelfDestructingVoiceNote(data json.RawMessage) (*FileTypeSelfDestructingVoiceNote, error) {
	var resp FileTypeSelfDestructingVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeSticker(data json.RawMessage) (*FileTypeSticker, error) {
	var resp FileTypeSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeThumbnail(data json.RawMessage) (*FileTypeThumbnail, error) {
	var resp FileTypeThumbnail
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeUnknown(data json.RawMessage) (*FileTypeUnknown, error) {
	var resp FileTypeUnknown
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeVideo(data json.RawMessage) (*FileTypeVideo, error) {
	var resp FileTypeVideo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeVideoNote(data json.RawMessage) (*FileTypeVideoNote, error) {
	var resp FileTypeVideoNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeVideoStory(data json.RawMessage) (*FileTypeVideoStory, error) {
	var resp FileTypeVideoStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeVoiceNote(data json.RawMessage) (*FileTypeVoiceNote, error) {
	var resp FileTypeVoiceNote
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileTypeWallpaper(data json.RawMessage) (*FileTypeWallpaper, error) {
	var resp FileTypeWallpaper
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorageStatisticsByFileType(data json.RawMessage) (*StorageStatisticsByFileType, error) {
	var resp StorageStatisticsByFileType
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorageStatisticsByChat(data json.RawMessage) (*StorageStatisticsByChat, error) {
	var resp StorageStatisticsByChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorageStatistics(data json.RawMessage) (*StorageStatistics, error) {
	var resp StorageStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStorageStatisticsFast(data json.RawMessage) (*StorageStatisticsFast, error) {
	var resp StorageStatisticsFast
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDatabaseStatistics(data json.RawMessage) (*DatabaseStatistics, error) {
	var resp DatabaseStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkTypeNone(data json.RawMessage) (*NetworkTypeNone, error) {
	var resp NetworkTypeNone
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkTypeMobile(data json.RawMessage) (*NetworkTypeMobile, error) {
	var resp NetworkTypeMobile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkTypeMobileRoaming(data json.RawMessage) (*NetworkTypeMobileRoaming, error) {
	var resp NetworkTypeMobileRoaming
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkTypeWiFi(data json.RawMessage) (*NetworkTypeWiFi, error) {
	var resp NetworkTypeWiFi
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkTypeOther(data json.RawMessage) (*NetworkTypeOther, error) {
	var resp NetworkTypeOther
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkStatisticsEntryFile(data json.RawMessage) (*NetworkStatisticsEntryFile, error) {
	var resp NetworkStatisticsEntryFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkStatisticsEntryCall(data json.RawMessage) (*NetworkStatisticsEntryCall, error) {
	var resp NetworkStatisticsEntryCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalNetworkStatistics(data json.RawMessage) (*NetworkStatistics, error) {
	var resp NetworkStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutoDownloadSettings(data json.RawMessage) (*AutoDownloadSettings, error) {
	var resp AutoDownloadSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutoDownloadSettingsPresets(data json.RawMessage) (*AutoDownloadSettingsPresets, error) {
	var resp AutoDownloadSettingsPresets
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutosaveSettingsScopePrivateChats(data json.RawMessage) (*AutosaveSettingsScopePrivateChats, error) {
	var resp AutosaveSettingsScopePrivateChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutosaveSettingsScopeGroupChats(data json.RawMessage) (*AutosaveSettingsScopeGroupChats, error) {
	var resp AutosaveSettingsScopeGroupChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutosaveSettingsScopeChannelChats(data json.RawMessage) (*AutosaveSettingsScopeChannelChats, error) {
	var resp AutosaveSettingsScopeChannelChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutosaveSettingsScopeChat(data json.RawMessage) (*AutosaveSettingsScopeChat, error) {
	var resp AutosaveSettingsScopeChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalScopeAutosaveSettings(data json.RawMessage) (*ScopeAutosaveSettings, error) {
	var resp ScopeAutosaveSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutosaveSettingsException(data json.RawMessage) (*AutosaveSettingsException, error) {
	var resp AutosaveSettingsException
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalAutosaveSettings(data json.RawMessage) (*AutosaveSettings, error) {
	var resp AutosaveSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectionStateWaitingForNetwork(data json.RawMessage) (*ConnectionStateWaitingForNetwork, error) {
	var resp ConnectionStateWaitingForNetwork
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectionStateConnectingToProxy(data json.RawMessage) (*ConnectionStateConnectingToProxy, error) {
	var resp ConnectionStateConnectingToProxy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectionStateConnecting(data json.RawMessage) (*ConnectionStateConnecting, error) {
	var resp ConnectionStateConnecting
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectionStateUpdating(data json.RawMessage) (*ConnectionStateUpdating, error) {
	var resp ConnectionStateUpdating
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalConnectionStateReady(data json.RawMessage) (*ConnectionStateReady, error) {
	var resp ConnectionStateReady
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryUsers(data json.RawMessage) (*TopChatCategoryUsers, error) {
	var resp TopChatCategoryUsers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryBots(data json.RawMessage) (*TopChatCategoryBots, error) {
	var resp TopChatCategoryBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryGroups(data json.RawMessage) (*TopChatCategoryGroups, error) {
	var resp TopChatCategoryGroups
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryChannels(data json.RawMessage) (*TopChatCategoryChannels, error) {
	var resp TopChatCategoryChannels
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryInlineBots(data json.RawMessage) (*TopChatCategoryInlineBots, error) {
	var resp TopChatCategoryInlineBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryWebAppBots(data json.RawMessage) (*TopChatCategoryWebAppBots, error) {
	var resp TopChatCategoryWebAppBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryCalls(data json.RawMessage) (*TopChatCategoryCalls, error) {
	var resp TopChatCategoryCalls
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTopChatCategoryForwardChats(data json.RawMessage) (*TopChatCategoryForwardChats, error) {
	var resp TopChatCategoryForwardChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundPosition(data json.RawMessage) (*FoundPosition, error) {
	var resp FoundPosition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFoundPositions(data json.RawMessage) (*FoundPositions, error) {
	var resp FoundPositions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTMeUrlTypeUser(data json.RawMessage) (*TMeUrlTypeUser, error) {
	var resp TMeUrlTypeUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTMeUrlTypeSupergroup(data json.RawMessage) (*TMeUrlTypeSupergroup, error) {
	var resp TMeUrlTypeSupergroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTMeUrlTypeChatInvite(data json.RawMessage) (*TMeUrlTypeChatInvite, error) {
	var resp TMeUrlTypeChatInvite
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTMeUrlTypeStickerSet(data json.RawMessage) (*TMeUrlTypeStickerSet, error) {
	var resp TMeUrlTypeStickerSet
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTMeUrl(data json.RawMessage) (*TMeUrl, error) {
	var resp TMeUrl
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTMeUrls(data json.RawMessage) (*TMeUrls, error) {
	var resp TMeUrls
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionEnableArchiveAndMuteNewChats(data json.RawMessage) (*SuggestedActionEnableArchiveAndMuteNewChats, error) {
	var resp SuggestedActionEnableArchiveAndMuteNewChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionCheckPassword(data json.RawMessage) (*SuggestedActionCheckPassword, error) {
	var resp SuggestedActionCheckPassword
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionCheckPhoneNumber(data json.RawMessage) (*SuggestedActionCheckPhoneNumber, error) {
	var resp SuggestedActionCheckPhoneNumber
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionViewChecksHint(data json.RawMessage) (*SuggestedActionViewChecksHint, error) {
	var resp SuggestedActionViewChecksHint
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionConvertToBroadcastGroup(data json.RawMessage) (*SuggestedActionConvertToBroadcastGroup, error) {
	var resp SuggestedActionConvertToBroadcastGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionSetPassword(data json.RawMessage) (*SuggestedActionSetPassword, error) {
	var resp SuggestedActionSetPassword
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionUpgradePremium(data json.RawMessage) (*SuggestedActionUpgradePremium, error) {
	var resp SuggestedActionUpgradePremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionRestorePremium(data json.RawMessage) (*SuggestedActionRestorePremium, error) {
	var resp SuggestedActionRestorePremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionSubscribeToAnnualPremium(data json.RawMessage) (*SuggestedActionSubscribeToAnnualPremium, error) {
	var resp SuggestedActionSubscribeToAnnualPremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionGiftPremiumForChristmas(data json.RawMessage) (*SuggestedActionGiftPremiumForChristmas, error) {
	var resp SuggestedActionGiftPremiumForChristmas
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionSetBirthdate(data json.RawMessage) (*SuggestedActionSetBirthdate, error) {
	var resp SuggestedActionSetBirthdate
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionSetProfilePhoto(data json.RawMessage) (*SuggestedActionSetProfilePhoto, error) {
	var resp SuggestedActionSetProfilePhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionExtendPremium(data json.RawMessage) (*SuggestedActionExtendPremium, error) {
	var resp SuggestedActionExtendPremium
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSuggestedActionExtendStarSubscriptions(data json.RawMessage) (*SuggestedActionExtendStarSubscriptions, error) {
	var resp SuggestedActionExtendStarSubscriptions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalCount(data json.RawMessage) (*Count, error) {
	var resp Count
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalText(data json.RawMessage) (*Text, error) {
	var resp Text
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalSeconds(data json.RawMessage) (*Seconds, error) {
	var resp Seconds
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalFileDownloadedPrefixSize(data json.RawMessage) (*FileDownloadedPrefixSize, error) {
	var resp FileDownloadedPrefixSize
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarCount(data json.RawMessage) (*StarCount, error) {
	var resp StarCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDeepLinkInfo(data json.RawMessage) (*DeepLinkInfo, error) {
	var resp DeepLinkInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextParseModeMarkdown(data json.RawMessage) (*TextParseModeMarkdown, error) {
	var resp TextParseModeMarkdown
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTextParseModeHTML(data json.RawMessage) (*TextParseModeHTML, error) {
	var resp TextParseModeHTML
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProxyTypeSocks5(data json.RawMessage) (*ProxyTypeSocks5, error) {
	var resp ProxyTypeSocks5
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProxyTypeHttp(data json.RawMessage) (*ProxyTypeHttp, error) {
	var resp ProxyTypeHttp
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProxyTypeMtproto(data json.RawMessage) (*ProxyTypeMtproto, error) {
	var resp ProxyTypeMtproto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProxy(data json.RawMessage) (*Proxy, error) {
	var resp Proxy
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalProxies(data json.RawMessage) (*Proxies, error) {
	var resp Proxies
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalInputSticker(data json.RawMessage) (*InputSticker, error) {
	var resp InputSticker
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalDateRange(data json.RawMessage) (*DateRange, error) {
	var resp DateRange
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStatisticalValue(data json.RawMessage) (*StatisticalValue, error) {
	var resp StatisticalValue
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStatisticalGraphData(data json.RawMessage) (*StatisticalGraphData, error) {
	var resp StatisticalGraphData
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStatisticalGraphAsync(data json.RawMessage) (*StatisticalGraphAsync, error) {
	var resp StatisticalGraphAsync
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStatisticalGraphError(data json.RawMessage) (*StatisticalGraphError, error) {
	var resp StatisticalGraphError
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsObjectTypeMessage(data json.RawMessage) (*ChatStatisticsObjectTypeMessage, error) {
	var resp ChatStatisticsObjectTypeMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsObjectTypeStory(data json.RawMessage) (*ChatStatisticsObjectTypeStory, error) {
	var resp ChatStatisticsObjectTypeStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsInteractionInfo(data json.RawMessage) (*ChatStatisticsInteractionInfo, error) {
	var resp ChatStatisticsInteractionInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsMessageSenderInfo(data json.RawMessage) (*ChatStatisticsMessageSenderInfo, error) {
	var resp ChatStatisticsMessageSenderInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsAdministratorActionsInfo(data json.RawMessage) (*ChatStatisticsAdministratorActionsInfo, error) {
	var resp ChatStatisticsAdministratorActionsInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsInviterInfo(data json.RawMessage) (*ChatStatisticsInviterInfo, error) {
	var resp ChatStatisticsInviterInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsSupergroup(data json.RawMessage) (*ChatStatisticsSupergroup, error) {
	var resp ChatStatisticsSupergroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatStatisticsChannel(data json.RawMessage) (*ChatStatisticsChannel, error) {
	var resp ChatStatisticsChannel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueAmount(data json.RawMessage) (*ChatRevenueAmount, error) {
	var resp ChatRevenueAmount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueStatistics(data json.RawMessage) (*ChatRevenueStatistics, error) {
	var resp ChatRevenueStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalMessageStatistics(data json.RawMessage) (*MessageStatistics, error) {
	var resp MessageStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStoryStatistics(data json.RawMessage) (*StoryStatistics, error) {
	var resp StoryStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRevenueWithdrawalStatePending(data json.RawMessage) (*RevenueWithdrawalStatePending, error) {
	var resp RevenueWithdrawalStatePending
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRevenueWithdrawalStateSucceeded(data json.RawMessage) (*RevenueWithdrawalStateSucceeded, error) {
	var resp RevenueWithdrawalStateSucceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalRevenueWithdrawalStateFailed(data json.RawMessage) (*RevenueWithdrawalStateFailed, error) {
	var resp RevenueWithdrawalStateFailed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueTransactionTypeEarnings(data json.RawMessage) (*ChatRevenueTransactionTypeEarnings, error) {
	var resp ChatRevenueTransactionTypeEarnings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueTransactionTypeWithdrawal(data json.RawMessage) (*ChatRevenueTransactionTypeWithdrawal, error) {
	var resp ChatRevenueTransactionTypeWithdrawal
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueTransactionTypeRefund(data json.RawMessage) (*ChatRevenueTransactionTypeRefund, error) {
	var resp ChatRevenueTransactionTypeRefund
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueTransaction(data json.RawMessage) (*ChatRevenueTransaction, error) {
	var resp ChatRevenueTransaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalChatRevenueTransactions(data json.RawMessage) (*ChatRevenueTransactions, error) {
	var resp ChatRevenueTransactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarRevenueStatus(data json.RawMessage) (*StarRevenueStatus, error) {
	var resp StarRevenueStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalStarRevenueStatistics(data json.RawMessage) (*StarRevenueStatistics, error) {
	var resp StarRevenueStatistics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPoint(data json.RawMessage) (*Point, error) {
	var resp Point
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVectorPathCommandLine(data json.RawMessage) (*VectorPathCommandLine, error) {
	var resp VectorPathCommandLine
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalVectorPathCommandCubicBezierCurve(data json.RawMessage) (*VectorPathCommandCubicBezierCurve, error) {
	var resp VectorPathCommandCubicBezierCurve
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeDefault(data json.RawMessage) (*BotCommandScopeDefault, error) {
	var resp BotCommandScopeDefault
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeAllPrivateChats(data json.RawMessage) (*BotCommandScopeAllPrivateChats, error) {
	var resp BotCommandScopeAllPrivateChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeAllGroupChats(data json.RawMessage) (*BotCommandScopeAllGroupChats, error) {
	var resp BotCommandScopeAllGroupChats
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeAllChatAdministrators(data json.RawMessage) (*BotCommandScopeAllChatAdministrators, error) {
	var resp BotCommandScopeAllChatAdministrators
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeChat(data json.RawMessage) (*BotCommandScopeChat, error) {
	var resp BotCommandScopeChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeChatAdministrators(data json.RawMessage) (*BotCommandScopeChatAdministrators, error) {
	var resp BotCommandScopeChatAdministrators
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalBotCommandScopeChatMember(data json.RawMessage) (*BotCommandScopeChatMember, error) {
	var resp BotCommandScopeChatMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhoneNumberCodeTypeChange(data json.RawMessage) (*PhoneNumberCodeTypeChange, error) {
	var resp PhoneNumberCodeTypeChange
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhoneNumberCodeTypeVerify(data json.RawMessage) (*PhoneNumberCodeTypeVerify, error) {
	var resp PhoneNumberCodeTypeVerify
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalPhoneNumberCodeTypeConfirmOwnership(data json.RawMessage) (*PhoneNumberCodeTypeConfirmOwnership, error) {
	var resp PhoneNumberCodeTypeConfirmOwnership
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAuthorizationState(data json.RawMessage) (*UpdateAuthorizationState, error) {
	var resp UpdateAuthorizationState
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewMessage(data json.RawMessage) (*UpdateNewMessage, error) {
	var resp UpdateNewMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageSendAcknowledged(data json.RawMessage) (*UpdateMessageSendAcknowledged, error) {
	var resp UpdateMessageSendAcknowledged
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageSendSucceeded(data json.RawMessage) (*UpdateMessageSendSucceeded, error) {
	var resp UpdateMessageSendSucceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageSendFailed(data json.RawMessage) (*UpdateMessageSendFailed, error) {
	var resp UpdateMessageSendFailed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageContent(data json.RawMessage) (*UpdateMessageContent, error) {
	var resp UpdateMessageContent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageEdited(data json.RawMessage) (*UpdateMessageEdited, error) {
	var resp UpdateMessageEdited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageIsPinned(data json.RawMessage) (*UpdateMessageIsPinned, error) {
	var resp UpdateMessageIsPinned
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageInteractionInfo(data json.RawMessage) (*UpdateMessageInteractionInfo, error) {
	var resp UpdateMessageInteractionInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageContentOpened(data json.RawMessage) (*UpdateMessageContentOpened, error) {
	var resp UpdateMessageContentOpened
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageMentionRead(data json.RawMessage) (*UpdateMessageMentionRead, error) {
	var resp UpdateMessageMentionRead
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageUnreadReactions(data json.RawMessage) (*UpdateMessageUnreadReactions, error) {
	var resp UpdateMessageUnreadReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageFactCheck(data json.RawMessage) (*UpdateMessageFactCheck, error) {
	var resp UpdateMessageFactCheck
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageLiveLocationViewed(data json.RawMessage) (*UpdateMessageLiveLocationViewed, error) {
	var resp UpdateMessageLiveLocationViewed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateVideoPublished(data json.RawMessage) (*UpdateVideoPublished, error) {
	var resp UpdateVideoPublished
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewChat(data json.RawMessage) (*UpdateNewChat, error) {
	var resp UpdateNewChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatTitle(data json.RawMessage) (*UpdateChatTitle, error) {
	var resp UpdateChatTitle
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatPhoto(data json.RawMessage) (*UpdateChatPhoto, error) {
	var resp UpdateChatPhoto
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatAccentColors(data json.RawMessage) (*UpdateChatAccentColors, error) {
	var resp UpdateChatAccentColors
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatPermissions(data json.RawMessage) (*UpdateChatPermissions, error) {
	var resp UpdateChatPermissions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatLastMessage(data json.RawMessage) (*UpdateChatLastMessage, error) {
	var resp UpdateChatLastMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatPosition(data json.RawMessage) (*UpdateChatPosition, error) {
	var resp UpdateChatPosition
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatAddedToList(data json.RawMessage) (*UpdateChatAddedToList, error) {
	var resp UpdateChatAddedToList
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatRemovedFromList(data json.RawMessage) (*UpdateChatRemovedFromList, error) {
	var resp UpdateChatRemovedFromList
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatReadInbox(data json.RawMessage) (*UpdateChatReadInbox, error) {
	var resp UpdateChatReadInbox
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatReadOutbox(data json.RawMessage) (*UpdateChatReadOutbox, error) {
	var resp UpdateChatReadOutbox
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatActionBar(data json.RawMessage) (*UpdateChatActionBar, error) {
	var resp UpdateChatActionBar
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatBusinessBotManageBar(data json.RawMessage) (*UpdateChatBusinessBotManageBar, error) {
	var resp UpdateChatBusinessBotManageBar
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatAvailableReactions(data json.RawMessage) (*UpdateChatAvailableReactions, error) {
	var resp UpdateChatAvailableReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatDraftMessage(data json.RawMessage) (*UpdateChatDraftMessage, error) {
	var resp UpdateChatDraftMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatEmojiStatus(data json.RawMessage) (*UpdateChatEmojiStatus, error) {
	var resp UpdateChatEmojiStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatMessageSender(data json.RawMessage) (*UpdateChatMessageSender, error) {
	var resp UpdateChatMessageSender
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatMessageAutoDeleteTime(data json.RawMessage) (*UpdateChatMessageAutoDeleteTime, error) {
	var resp UpdateChatMessageAutoDeleteTime
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatNotificationSettings(data json.RawMessage) (*UpdateChatNotificationSettings, error) {
	var resp UpdateChatNotificationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatPendingJoinRequests(data json.RawMessage) (*UpdateChatPendingJoinRequests, error) {
	var resp UpdateChatPendingJoinRequests
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatReplyMarkup(data json.RawMessage) (*UpdateChatReplyMarkup, error) {
	var resp UpdateChatReplyMarkup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatBackground(data json.RawMessage) (*UpdateChatBackground, error) {
	var resp UpdateChatBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatTheme(data json.RawMessage) (*UpdateChatTheme, error) {
	var resp UpdateChatTheme
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatUnreadMentionCount(data json.RawMessage) (*UpdateChatUnreadMentionCount, error) {
	var resp UpdateChatUnreadMentionCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatUnreadReactionCount(data json.RawMessage) (*UpdateChatUnreadReactionCount, error) {
	var resp UpdateChatUnreadReactionCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatVideoChat(data json.RawMessage) (*UpdateChatVideoChat, error) {
	var resp UpdateChatVideoChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatDefaultDisableNotification(data json.RawMessage) (*UpdateChatDefaultDisableNotification, error) {
	var resp UpdateChatDefaultDisableNotification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatHasProtectedContent(data json.RawMessage) (*UpdateChatHasProtectedContent, error) {
	var resp UpdateChatHasProtectedContent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatIsTranslatable(data json.RawMessage) (*UpdateChatIsTranslatable, error) {
	var resp UpdateChatIsTranslatable
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatIsMarkedAsUnread(data json.RawMessage) (*UpdateChatIsMarkedAsUnread, error) {
	var resp UpdateChatIsMarkedAsUnread
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatViewAsTopics(data json.RawMessage) (*UpdateChatViewAsTopics, error) {
	var resp UpdateChatViewAsTopics
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatBlockList(data json.RawMessage) (*UpdateChatBlockList, error) {
	var resp UpdateChatBlockList
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatHasScheduledMessages(data json.RawMessage) (*UpdateChatHasScheduledMessages, error) {
	var resp UpdateChatHasScheduledMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatFolders(data json.RawMessage) (*UpdateChatFolders, error) {
	var resp UpdateChatFolders
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatOnlineMemberCount(data json.RawMessage) (*UpdateChatOnlineMemberCount, error) {
	var resp UpdateChatOnlineMemberCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSavedMessagesTopic(data json.RawMessage) (*UpdateSavedMessagesTopic, error) {
	var resp UpdateSavedMessagesTopic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSavedMessagesTopicCount(data json.RawMessage) (*UpdateSavedMessagesTopicCount, error) {
	var resp UpdateSavedMessagesTopicCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateQuickReplyShortcut(data json.RawMessage) (*UpdateQuickReplyShortcut, error) {
	var resp UpdateQuickReplyShortcut
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateQuickReplyShortcutDeleted(data json.RawMessage) (*UpdateQuickReplyShortcutDeleted, error) {
	var resp UpdateQuickReplyShortcutDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateQuickReplyShortcuts(data json.RawMessage) (*UpdateQuickReplyShortcuts, error) {
	var resp UpdateQuickReplyShortcuts
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateQuickReplyShortcutMessages(data json.RawMessage) (*UpdateQuickReplyShortcutMessages, error) {
	var resp UpdateQuickReplyShortcutMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateForumTopicInfo(data json.RawMessage) (*UpdateForumTopicInfo, error) {
	var resp UpdateForumTopicInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateForumTopic(data json.RawMessage) (*UpdateForumTopic, error) {
	var resp UpdateForumTopic
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateScopeNotificationSettings(data json.RawMessage) (*UpdateScopeNotificationSettings, error) {
	var resp UpdateScopeNotificationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateReactionNotificationSettings(data json.RawMessage) (*UpdateReactionNotificationSettings, error) {
	var resp UpdateReactionNotificationSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNotification(data json.RawMessage) (*UpdateNotification, error) {
	var resp UpdateNotification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNotificationGroup(data json.RawMessage) (*UpdateNotificationGroup, error) {
	var resp UpdateNotificationGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateActiveNotifications(data json.RawMessage) (*UpdateActiveNotifications, error) {
	var resp UpdateActiveNotifications
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateHavePendingNotifications(data json.RawMessage) (*UpdateHavePendingNotifications, error) {
	var resp UpdateHavePendingNotifications
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateDeleteMessages(data json.RawMessage) (*UpdateDeleteMessages, error) {
	var resp UpdateDeleteMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatAction(data json.RawMessage) (*UpdateChatAction, error) {
	var resp UpdateChatAction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUserStatus(data json.RawMessage) (*UpdateUserStatus, error) {
	var resp UpdateUserStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUser(data json.RawMessage) (*UpdateUser, error) {
	var resp UpdateUser
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateBasicGroup(data json.RawMessage) (*UpdateBasicGroup, error) {
	var resp UpdateBasicGroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSupergroup(data json.RawMessage) (*UpdateSupergroup, error) {
	var resp UpdateSupergroup
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSecretChat(data json.RawMessage) (*UpdateSecretChat, error) {
	var resp UpdateSecretChat
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUserFullInfo(data json.RawMessage) (*UpdateUserFullInfo, error) {
	var resp UpdateUserFullInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateBasicGroupFullInfo(data json.RawMessage) (*UpdateBasicGroupFullInfo, error) {
	var resp UpdateBasicGroupFullInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSupergroupFullInfo(data json.RawMessage) (*UpdateSupergroupFullInfo, error) {
	var resp UpdateSupergroupFullInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateServiceNotification(data json.RawMessage) (*UpdateServiceNotification, error) {
	var resp UpdateServiceNotification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFile(data json.RawMessage) (*UpdateFile, error) {
	var resp UpdateFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFileGenerationStart(data json.RawMessage) (*UpdateFileGenerationStart, error) {
	var resp UpdateFileGenerationStart
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFileGenerationStop(data json.RawMessage) (*UpdateFileGenerationStop, error) {
	var resp UpdateFileGenerationStop
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFileDownloads(data json.RawMessage) (*UpdateFileDownloads, error) {
	var resp UpdateFileDownloads
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFileAddedToDownloads(data json.RawMessage) (*UpdateFileAddedToDownloads, error) {
	var resp UpdateFileAddedToDownloads
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFileDownload(data json.RawMessage) (*UpdateFileDownload, error) {
	var resp UpdateFileDownload
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFileRemovedFromDownloads(data json.RawMessage) (*UpdateFileRemovedFromDownloads, error) {
	var resp UpdateFileRemovedFromDownloads
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateApplicationVerificationRequired(data json.RawMessage) (*UpdateApplicationVerificationRequired, error) {
	var resp UpdateApplicationVerificationRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateApplicationRecaptchaVerificationRequired(data json.RawMessage) (*UpdateApplicationRecaptchaVerificationRequired, error) {
	var resp UpdateApplicationRecaptchaVerificationRequired
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateCall(data json.RawMessage) (*UpdateCall, error) {
	var resp UpdateCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateGroupCall(data json.RawMessage) (*UpdateGroupCall, error) {
	var resp UpdateGroupCall
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateGroupCallParticipant(data json.RawMessage) (*UpdateGroupCallParticipant, error) {
	var resp UpdateGroupCallParticipant
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewCallSignalingData(data json.RawMessage) (*UpdateNewCallSignalingData, error) {
	var resp UpdateNewCallSignalingData
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUserPrivacySettingRules(data json.RawMessage) (*UpdateUserPrivacySettingRules, error) {
	var resp UpdateUserPrivacySettingRules
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUnreadMessageCount(data json.RawMessage) (*UpdateUnreadMessageCount, error) {
	var resp UpdateUnreadMessageCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUnreadChatCount(data json.RawMessage) (*UpdateUnreadChatCount, error) {
	var resp UpdateUnreadChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStory(data json.RawMessage) (*UpdateStory, error) {
	var resp UpdateStory
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStoryDeleted(data json.RawMessage) (*UpdateStoryDeleted, error) {
	var resp UpdateStoryDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStorySendSucceeded(data json.RawMessage) (*UpdateStorySendSucceeded, error) {
	var resp UpdateStorySendSucceeded
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStorySendFailed(data json.RawMessage) (*UpdateStorySendFailed, error) {
	var resp UpdateStorySendFailed
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatActiveStories(data json.RawMessage) (*UpdateChatActiveStories, error) {
	var resp UpdateChatActiveStories
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStoryListChatCount(data json.RawMessage) (*UpdateStoryListChatCount, error) {
	var resp UpdateStoryListChatCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStoryStealthMode(data json.RawMessage) (*UpdateStoryStealthMode, error) {
	var resp UpdateStoryStealthMode
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateOption(data json.RawMessage) (*UpdateOption, error) {
	var resp UpdateOption
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStickerSet(data json.RawMessage) (*UpdateStickerSet, error) {
	var resp UpdateStickerSet
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateInstalledStickerSets(data json.RawMessage) (*UpdateInstalledStickerSets, error) {
	var resp UpdateInstalledStickerSets
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateTrendingStickerSets(data json.RawMessage) (*UpdateTrendingStickerSets, error) {
	var resp UpdateTrendingStickerSets
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateRecentStickers(data json.RawMessage) (*UpdateRecentStickers, error) {
	var resp UpdateRecentStickers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFavoriteStickers(data json.RawMessage) (*UpdateFavoriteStickers, error) {
	var resp UpdateFavoriteStickers
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSavedAnimations(data json.RawMessage) (*UpdateSavedAnimations, error) {
	var resp UpdateSavedAnimations
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSavedNotificationSounds(data json.RawMessage) (*UpdateSavedNotificationSounds, error) {
	var resp UpdateSavedNotificationSounds
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateDefaultBackground(data json.RawMessage) (*UpdateDefaultBackground, error) {
	var resp UpdateDefaultBackground
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatThemes(data json.RawMessage) (*UpdateChatThemes, error) {
	var resp UpdateChatThemes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAccentColors(data json.RawMessage) (*UpdateAccentColors, error) {
	var resp UpdateAccentColors
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateProfileAccentColors(data json.RawMessage) (*UpdateProfileAccentColors, error) {
	var resp UpdateProfileAccentColors
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateLanguagePackStrings(data json.RawMessage) (*UpdateLanguagePackStrings, error) {
	var resp UpdateLanguagePackStrings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateConnectionState(data json.RawMessage) (*UpdateConnectionState, error) {
	var resp UpdateConnectionState
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateFreezeState(data json.RawMessage) (*UpdateFreezeState, error) {
	var resp UpdateFreezeState
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateTermsOfService(data json.RawMessage) (*UpdateTermsOfService, error) {
	var resp UpdateTermsOfService
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateUnconfirmedSession(data json.RawMessage) (*UpdateUnconfirmedSession, error) {
	var resp UpdateUnconfirmedSession
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAttachmentMenuBots(data json.RawMessage) (*UpdateAttachmentMenuBots, error) {
	var resp UpdateAttachmentMenuBots
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateWebAppMessageSent(data json.RawMessage) (*UpdateWebAppMessageSent, error) {
	var resp UpdateWebAppMessageSent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateActiveEmojiReactions(data json.RawMessage) (*UpdateActiveEmojiReactions, error) {
	var resp UpdateActiveEmojiReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAvailableMessageEffects(data json.RawMessage) (*UpdateAvailableMessageEffects, error) {
	var resp UpdateAvailableMessageEffects
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateDefaultReactionType(data json.RawMessage) (*UpdateDefaultReactionType, error) {
	var resp UpdateDefaultReactionType
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateDefaultPaidReactionType(data json.RawMessage) (*UpdateDefaultPaidReactionType, error) {
	var resp UpdateDefaultPaidReactionType
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSavedMessagesTags(data json.RawMessage) (*UpdateSavedMessagesTags, error) {
	var resp UpdateSavedMessagesTags
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateActiveLiveLocationMessages(data json.RawMessage) (*UpdateActiveLiveLocationMessages, error) {
	var resp UpdateActiveLiveLocationMessages
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateOwnedStarCount(data json.RawMessage) (*UpdateOwnedStarCount, error) {
	var resp UpdateOwnedStarCount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatRevenueAmount(data json.RawMessage) (*UpdateChatRevenueAmount, error) {
	var resp UpdateChatRevenueAmount
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateStarRevenueStatus(data json.RawMessage) (*UpdateStarRevenueStatus, error) {
	var resp UpdateStarRevenueStatus
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSpeechRecognitionTrial(data json.RawMessage) (*UpdateSpeechRecognitionTrial, error) {
	var resp UpdateSpeechRecognitionTrial
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateDiceEmojis(data json.RawMessage) (*UpdateDiceEmojis, error) {
	var resp UpdateDiceEmojis
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAnimatedEmojiMessageClicked(data json.RawMessage) (*UpdateAnimatedEmojiMessageClicked, error) {
	var resp UpdateAnimatedEmojiMessageClicked
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAnimationSearchParameters(data json.RawMessage) (*UpdateAnimationSearchParameters, error) {
	var resp UpdateAnimationSearchParameters
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSuggestedActions(data json.RawMessage) (*UpdateSuggestedActions, error) {
	var resp UpdateSuggestedActions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateSpeedLimitNotification(data json.RawMessage) (*UpdateSpeedLimitNotification, error) {
	var resp UpdateSpeedLimitNotification
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateContactCloseBirthdays(data json.RawMessage) (*UpdateContactCloseBirthdays, error) {
	var resp UpdateContactCloseBirthdays
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateAutosaveSettings(data json.RawMessage) (*UpdateAutosaveSettings, error) {
	var resp UpdateAutosaveSettings
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateBusinessConnection(data json.RawMessage) (*UpdateBusinessConnection, error) {
	var resp UpdateBusinessConnection
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewBusinessMessage(data json.RawMessage) (*UpdateNewBusinessMessage, error) {
	var resp UpdateNewBusinessMessage
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateBusinessMessageEdited(data json.RawMessage) (*UpdateBusinessMessageEdited, error) {
	var resp UpdateBusinessMessageEdited
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateBusinessMessagesDeleted(data json.RawMessage) (*UpdateBusinessMessagesDeleted, error) {
	var resp UpdateBusinessMessagesDeleted
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewInlineQuery(data json.RawMessage) (*UpdateNewInlineQuery, error) {
	var resp UpdateNewInlineQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewChosenInlineResult(data json.RawMessage) (*UpdateNewChosenInlineResult, error) {
	var resp UpdateNewChosenInlineResult
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewCallbackQuery(data json.RawMessage) (*UpdateNewCallbackQuery, error) {
	var resp UpdateNewCallbackQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewInlineCallbackQuery(data json.RawMessage) (*UpdateNewInlineCallbackQuery, error) {
	var resp UpdateNewInlineCallbackQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewBusinessCallbackQuery(data json.RawMessage) (*UpdateNewBusinessCallbackQuery, error) {
	var resp UpdateNewBusinessCallbackQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewShippingQuery(data json.RawMessage) (*UpdateNewShippingQuery, error) {
	var resp UpdateNewShippingQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewPreCheckoutQuery(data json.RawMessage) (*UpdateNewPreCheckoutQuery, error) {
	var resp UpdateNewPreCheckoutQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewCustomEvent(data json.RawMessage) (*UpdateNewCustomEvent, error) {
	var resp UpdateNewCustomEvent
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewCustomQuery(data json.RawMessage) (*UpdateNewCustomQuery, error) {
	var resp UpdateNewCustomQuery
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdatePoll(data json.RawMessage) (*UpdatePoll, error) {
	var resp UpdatePoll
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdatePollAnswer(data json.RawMessage) (*UpdatePollAnswer, error) {
	var resp UpdatePollAnswer
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatMember(data json.RawMessage) (*UpdateChatMember, error) {
	var resp UpdateChatMember
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateNewChatJoinRequest(data json.RawMessage) (*UpdateNewChatJoinRequest, error) {
	var resp UpdateNewChatJoinRequest
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateChatBoost(data json.RawMessage) (*UpdateChatBoost, error) {
	var resp UpdateChatBoost
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageReaction(data json.RawMessage) (*UpdateMessageReaction, error) {
	var resp UpdateMessageReaction
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdateMessageReactions(data json.RawMessage) (*UpdateMessageReactions, error) {
	var resp UpdateMessageReactions
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdatePaidMediaPurchased(data json.RawMessage) (*UpdatePaidMediaPurchased, error) {
	var resp UpdatePaidMediaPurchased
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUpdates(data json.RawMessage) (*Updates, error) {
	var resp Updates
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLogStreamDefault(data json.RawMessage) (*LogStreamDefault, error) {
	var resp LogStreamDefault
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLogStreamFile(data json.RawMessage) (*LogStreamFile, error) {
	var resp LogStreamFile
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLogStreamEmpty(data json.RawMessage) (*LogStreamEmpty, error) {
	var resp LogStreamEmpty
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLogVerbosityLevel(data json.RawMessage) (*LogVerbosityLevel, error) {
	var resp LogVerbosityLevel
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalLogTags(data json.RawMessage) (*LogTags, error) {
	var resp LogTags
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalUserSupportInfo(data json.RawMessage) (*UserSupportInfo, error) {
	var resp UserSupportInfo
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestInt(data json.RawMessage) (*TestInt, error) {
	var resp TestInt
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestString(data json.RawMessage) (*TestString, error) {
	var resp TestString
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestBytes(data json.RawMessage) (*TestBytes, error) {
	var resp TestBytes
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestVectorInt(data json.RawMessage) (*TestVectorInt, error) {
	var resp TestVectorInt
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestVectorIntObject(data json.RawMessage) (*TestVectorIntObject, error) {
	var resp TestVectorIntObject
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestVectorString(data json.RawMessage) (*TestVectorString, error) {
	var resp TestVectorString
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalTestVectorStringObject(data json.RawMessage) (*TestVectorStringObject, error) {
	var resp TestVectorStringObject
	err := json.Unmarshal(data, &resp)
	return &resp, err
}

func UnmarshalType(data json.RawMessage) (Type, error) {
	var meta meta
	err := json.Unmarshal(data, &meta)
	if err != nil {
		return nil, err
	}

	switch meta.MetaType {
	case ConstructorError:
		return UnmarshalError(data)

	case ConstructorOk:
		return UnmarshalOk(data)

	case ConstructorAuthenticationCodeTypeTelegramMessage:
		return UnmarshalAuthenticationCodeTypeTelegramMessage(data)

	case ConstructorAuthenticationCodeTypeSms:
		return UnmarshalAuthenticationCodeTypeSms(data)

	case ConstructorAuthenticationCodeTypeSmsWord:
		return UnmarshalAuthenticationCodeTypeSmsWord(data)

	case ConstructorAuthenticationCodeTypeSmsPhrase:
		return UnmarshalAuthenticationCodeTypeSmsPhrase(data)

	case ConstructorAuthenticationCodeTypeCall:
		return UnmarshalAuthenticationCodeTypeCall(data)

	case ConstructorAuthenticationCodeTypeFlashCall:
		return UnmarshalAuthenticationCodeTypeFlashCall(data)

	case ConstructorAuthenticationCodeTypeMissedCall:
		return UnmarshalAuthenticationCodeTypeMissedCall(data)

	case ConstructorAuthenticationCodeTypeFragment:
		return UnmarshalAuthenticationCodeTypeFragment(data)

	case ConstructorAuthenticationCodeTypeFirebaseAndroid:
		return UnmarshalAuthenticationCodeTypeFirebaseAndroid(data)

	case ConstructorAuthenticationCodeTypeFirebaseIos:
		return UnmarshalAuthenticationCodeTypeFirebaseIos(data)

	case ConstructorAuthenticationCodeInfo:
		return UnmarshalAuthenticationCodeInfo(data)

	case ConstructorEmailAddressAuthenticationCodeInfo:
		return UnmarshalEmailAddressAuthenticationCodeInfo(data)

	case ConstructorEmailAddressAuthenticationCode:
		return UnmarshalEmailAddressAuthenticationCode(data)

	case ConstructorEmailAddressAuthenticationAppleId:
		return UnmarshalEmailAddressAuthenticationAppleId(data)

	case ConstructorEmailAddressAuthenticationGoogleId:
		return UnmarshalEmailAddressAuthenticationGoogleId(data)

	case ConstructorEmailAddressResetStateAvailable:
		return UnmarshalEmailAddressResetStateAvailable(data)

	case ConstructorEmailAddressResetStatePending:
		return UnmarshalEmailAddressResetStatePending(data)

	case ConstructorTextEntity:
		return UnmarshalTextEntity(data)

	case ConstructorTextEntities:
		return UnmarshalTextEntities(data)

	case ConstructorFormattedText:
		return UnmarshalFormattedText(data)

	case ConstructorTermsOfService:
		return UnmarshalTermsOfService(data)

	case ConstructorAuthorizationStateWaitTdlibParameters:
		return UnmarshalAuthorizationStateWaitTdlibParameters(data)

	case ConstructorAuthorizationStateWaitPhoneNumber:
		return UnmarshalAuthorizationStateWaitPhoneNumber(data)

	case ConstructorAuthorizationStateWaitPremiumPurchase:
		return UnmarshalAuthorizationStateWaitPremiumPurchase(data)

	case ConstructorAuthorizationStateWaitEmailAddress:
		return UnmarshalAuthorizationStateWaitEmailAddress(data)

	case ConstructorAuthorizationStateWaitEmailCode:
		return UnmarshalAuthorizationStateWaitEmailCode(data)

	case ConstructorAuthorizationStateWaitCode:
		return UnmarshalAuthorizationStateWaitCode(data)

	case ConstructorAuthorizationStateWaitOtherDeviceConfirmation:
		return UnmarshalAuthorizationStateWaitOtherDeviceConfirmation(data)

	case ConstructorAuthorizationStateWaitRegistration:
		return UnmarshalAuthorizationStateWaitRegistration(data)

	case ConstructorAuthorizationStateWaitPassword:
		return UnmarshalAuthorizationStateWaitPassword(data)

	case ConstructorAuthorizationStateReady:
		return UnmarshalAuthorizationStateReady(data)

	case ConstructorAuthorizationStateLoggingOut:
		return UnmarshalAuthorizationStateLoggingOut(data)

	case ConstructorAuthorizationStateClosing:
		return UnmarshalAuthorizationStateClosing(data)

	case ConstructorAuthorizationStateClosed:
		return UnmarshalAuthorizationStateClosed(data)

	case ConstructorFirebaseDeviceVerificationParametersSafetyNet:
		return UnmarshalFirebaseDeviceVerificationParametersSafetyNet(data)

	case ConstructorFirebaseDeviceVerificationParametersPlayIntegrity:
		return UnmarshalFirebaseDeviceVerificationParametersPlayIntegrity(data)

	case ConstructorPasswordState:
		return UnmarshalPasswordState(data)

	case ConstructorRecoveryEmailAddress:
		return UnmarshalRecoveryEmailAddress(data)

	case ConstructorTemporaryPasswordState:
		return UnmarshalTemporaryPasswordState(data)

	case ConstructorLocalFile:
		return UnmarshalLocalFile(data)

	case ConstructorRemoteFile:
		return UnmarshalRemoteFile(data)

	case ConstructorFile:
		return UnmarshalFile(data)

	case ConstructorInputFileId:
		return UnmarshalInputFileId(data)

	case ConstructorInputFileRemote:
		return UnmarshalInputFileRemote(data)

	case ConstructorInputFileLocal:
		return UnmarshalInputFileLocal(data)

	case ConstructorInputFileGenerated:
		return UnmarshalInputFileGenerated(data)

	case ConstructorPhotoSize:
		return UnmarshalPhotoSize(data)

	case ConstructorMinithumbnail:
		return UnmarshalMinithumbnail(data)

	case ConstructorThumbnailFormatJpeg:
		return UnmarshalThumbnailFormatJpeg(data)

	case ConstructorThumbnailFormatGif:
		return UnmarshalThumbnailFormatGif(data)

	case ConstructorThumbnailFormatMpeg4:
		return UnmarshalThumbnailFormatMpeg4(data)

	case ConstructorThumbnailFormatPng:
		return UnmarshalThumbnailFormatPng(data)

	case ConstructorThumbnailFormatTgs:
		return UnmarshalThumbnailFormatTgs(data)

	case ConstructorThumbnailFormatWebm:
		return UnmarshalThumbnailFormatWebm(data)

	case ConstructorThumbnailFormatWebp:
		return UnmarshalThumbnailFormatWebp(data)

	case ConstructorThumbnail:
		return UnmarshalThumbnail(data)

	case ConstructorMaskPointForehead:
		return UnmarshalMaskPointForehead(data)

	case ConstructorMaskPointEyes:
		return UnmarshalMaskPointEyes(data)

	case ConstructorMaskPointMouth:
		return UnmarshalMaskPointMouth(data)

	case ConstructorMaskPointChin:
		return UnmarshalMaskPointChin(data)

	case ConstructorMaskPosition:
		return UnmarshalMaskPosition(data)

	case ConstructorStickerFormatWebp:
		return UnmarshalStickerFormatWebp(data)

	case ConstructorStickerFormatTgs:
		return UnmarshalStickerFormatTgs(data)

	case ConstructorStickerFormatWebm:
		return UnmarshalStickerFormatWebm(data)

	case ConstructorStickerTypeRegular:
		return UnmarshalStickerTypeRegular(data)

	case ConstructorStickerTypeMask:
		return UnmarshalStickerTypeMask(data)

	case ConstructorStickerTypeCustomEmoji:
		return UnmarshalStickerTypeCustomEmoji(data)

	case ConstructorStickerFullTypeRegular:
		return UnmarshalStickerFullTypeRegular(data)

	case ConstructorStickerFullTypeMask:
		return UnmarshalStickerFullTypeMask(data)

	case ConstructorStickerFullTypeCustomEmoji:
		return UnmarshalStickerFullTypeCustomEmoji(data)

	case ConstructorClosedVectorPath:
		return UnmarshalClosedVectorPath(data)

	case ConstructorOutline:
		return UnmarshalOutline(data)

	case ConstructorPollOption:
		return UnmarshalPollOption(data)

	case ConstructorPollTypeRegular:
		return UnmarshalPollTypeRegular(data)

	case ConstructorPollTypeQuiz:
		return UnmarshalPollTypeQuiz(data)

	case ConstructorAnimation:
		return UnmarshalAnimation(data)

	case ConstructorAudio:
		return UnmarshalAudio(data)

	case ConstructorDocument:
		return UnmarshalDocument(data)

	case ConstructorPhoto:
		return UnmarshalPhoto(data)

	case ConstructorSticker:
		return UnmarshalSticker(data)

	case ConstructorVideo:
		return UnmarshalVideo(data)

	case ConstructorVideoNote:
		return UnmarshalVideoNote(data)

	case ConstructorVoiceNote:
		return UnmarshalVoiceNote(data)

	case ConstructorAnimatedEmoji:
		return UnmarshalAnimatedEmoji(data)

	case ConstructorContact:
		return UnmarshalContact(data)

	case ConstructorLocation:
		return UnmarshalLocation(data)

	case ConstructorVenue:
		return UnmarshalVenue(data)

	case ConstructorGame:
		return UnmarshalGame(data)

	case ConstructorWebApp:
		return UnmarshalWebApp(data)

	case ConstructorPoll:
		return UnmarshalPoll(data)

	case ConstructorAlternativeVideo:
		return UnmarshalAlternativeVideo(data)

	case ConstructorBackground:
		return UnmarshalBackground(data)

	case ConstructorBackgrounds:
		return UnmarshalBackgrounds(data)

	case ConstructorChatBackground:
		return UnmarshalChatBackground(data)

	case ConstructorProfilePhoto:
		return UnmarshalProfilePhoto(data)

	case ConstructorChatPhotoInfo:
		return UnmarshalChatPhotoInfo(data)

	case ConstructorUserTypeRegular:
		return UnmarshalUserTypeRegular(data)

	case ConstructorUserTypeDeleted:
		return UnmarshalUserTypeDeleted(data)

	case ConstructorUserTypeBot:
		return UnmarshalUserTypeBot(data)

	case ConstructorUserTypeUnknown:
		return UnmarshalUserTypeUnknown(data)

	case ConstructorBotCommand:
		return UnmarshalBotCommand(data)

	case ConstructorBotCommands:
		return UnmarshalBotCommands(data)

	case ConstructorBotMenuButton:
		return UnmarshalBotMenuButton(data)

	case ConstructorBotVerificationParameters:
		return UnmarshalBotVerificationParameters(data)

	case ConstructorBotVerification:
		return UnmarshalBotVerification(data)

	case ConstructorVerificationStatus:
		return UnmarshalVerificationStatus(data)

	case ConstructorChatLocation:
		return UnmarshalChatLocation(data)

	case ConstructorBirthdate:
		return UnmarshalBirthdate(data)

	case ConstructorCloseBirthdayUser:
		return UnmarshalCloseBirthdayUser(data)

	case ConstructorBusinessAwayMessageScheduleAlways:
		return UnmarshalBusinessAwayMessageScheduleAlways(data)

	case ConstructorBusinessAwayMessageScheduleOutsideOfOpeningHours:
		return UnmarshalBusinessAwayMessageScheduleOutsideOfOpeningHours(data)

	case ConstructorBusinessAwayMessageScheduleCustom:
		return UnmarshalBusinessAwayMessageScheduleCustom(data)

	case ConstructorBusinessLocation:
		return UnmarshalBusinessLocation(data)

	case ConstructorBusinessRecipients:
		return UnmarshalBusinessRecipients(data)

	case ConstructorBusinessAwayMessageSettings:
		return UnmarshalBusinessAwayMessageSettings(data)

	case ConstructorBusinessGreetingMessageSettings:
		return UnmarshalBusinessGreetingMessageSettings(data)

	case ConstructorBusinessBotRights:
		return UnmarshalBusinessBotRights(data)

	case ConstructorBusinessConnectedBot:
		return UnmarshalBusinessConnectedBot(data)

	case ConstructorBusinessStartPage:
		return UnmarshalBusinessStartPage(data)

	case ConstructorInputBusinessStartPage:
		return UnmarshalInputBusinessStartPage(data)

	case ConstructorBusinessOpeningHoursInterval:
		return UnmarshalBusinessOpeningHoursInterval(data)

	case ConstructorBusinessOpeningHours:
		return UnmarshalBusinessOpeningHours(data)

	case ConstructorBusinessInfo:
		return UnmarshalBusinessInfo(data)

	case ConstructorBusinessChatLink:
		return UnmarshalBusinessChatLink(data)

	case ConstructorBusinessChatLinks:
		return UnmarshalBusinessChatLinks(data)

	case ConstructorInputBusinessChatLink:
		return UnmarshalInputBusinessChatLink(data)

	case ConstructorBusinessChatLinkInfo:
		return UnmarshalBusinessChatLinkInfo(data)

	case ConstructorChatPhotoStickerTypeRegularOrMask:
		return UnmarshalChatPhotoStickerTypeRegularOrMask(data)

	case ConstructorChatPhotoStickerTypeCustomEmoji:
		return UnmarshalChatPhotoStickerTypeCustomEmoji(data)

	case ConstructorChatPhotoSticker:
		return UnmarshalChatPhotoSticker(data)

	case ConstructorAnimatedChatPhoto:
		return UnmarshalAnimatedChatPhoto(data)

	case ConstructorChatPhoto:
		return UnmarshalChatPhoto(data)

	case ConstructorChatPhotos:
		return UnmarshalChatPhotos(data)

	case ConstructorInputChatPhotoPrevious:
		return UnmarshalInputChatPhotoPrevious(data)

	case ConstructorInputChatPhotoStatic:
		return UnmarshalInputChatPhotoStatic(data)

	case ConstructorInputChatPhotoAnimation:
		return UnmarshalInputChatPhotoAnimation(data)

	case ConstructorInputChatPhotoSticker:
		return UnmarshalInputChatPhotoSticker(data)

	case ConstructorChatPermissions:
		return UnmarshalChatPermissions(data)

	case ConstructorChatAdministratorRights:
		return UnmarshalChatAdministratorRights(data)

	case ConstructorStarAmount:
		return UnmarshalStarAmount(data)

	case ConstructorStarSubscriptionTypeChannel:
		return UnmarshalStarSubscriptionTypeChannel(data)

	case ConstructorStarSubscriptionTypeBot:
		return UnmarshalStarSubscriptionTypeBot(data)

	case ConstructorStarSubscriptionPricing:
		return UnmarshalStarSubscriptionPricing(data)

	case ConstructorStarSubscription:
		return UnmarshalStarSubscription(data)

	case ConstructorStarSubscriptions:
		return UnmarshalStarSubscriptions(data)

	case ConstructorAffiliateTypeCurrentUser:
		return UnmarshalAffiliateTypeCurrentUser(data)

	case ConstructorAffiliateTypeBot:
		return UnmarshalAffiliateTypeBot(data)

	case ConstructorAffiliateTypeChannel:
		return UnmarshalAffiliateTypeChannel(data)

	case ConstructorAffiliateProgramSortOrderProfitability:
		return UnmarshalAffiliateProgramSortOrderProfitability(data)

	case ConstructorAffiliateProgramSortOrderCreationDate:
		return UnmarshalAffiliateProgramSortOrderCreationDate(data)

	case ConstructorAffiliateProgramSortOrderRevenue:
		return UnmarshalAffiliateProgramSortOrderRevenue(data)

	case ConstructorAffiliateProgramParameters:
		return UnmarshalAffiliateProgramParameters(data)

	case ConstructorAffiliateProgramInfo:
		return UnmarshalAffiliateProgramInfo(data)

	case ConstructorAffiliateInfo:
		return UnmarshalAffiliateInfo(data)

	case ConstructorFoundAffiliateProgram:
		return UnmarshalFoundAffiliateProgram(data)

	case ConstructorFoundAffiliatePrograms:
		return UnmarshalFoundAffiliatePrograms(data)

	case ConstructorConnectedAffiliateProgram:
		return UnmarshalConnectedAffiliateProgram(data)

	case ConstructorConnectedAffiliatePrograms:
		return UnmarshalConnectedAffiliatePrograms(data)

	case ConstructorProductInfo:
		return UnmarshalProductInfo(data)

	case ConstructorPremiumPaymentOption:
		return UnmarshalPremiumPaymentOption(data)

	case ConstructorPremiumStatePaymentOption:
		return UnmarshalPremiumStatePaymentOption(data)

	case ConstructorPremiumGiftPaymentOption:
		return UnmarshalPremiumGiftPaymentOption(data)

	case ConstructorPremiumGiftPaymentOptions:
		return UnmarshalPremiumGiftPaymentOptions(data)

	case ConstructorPremiumGiveawayPaymentOption:
		return UnmarshalPremiumGiveawayPaymentOption(data)

	case ConstructorPremiumGiveawayPaymentOptions:
		return UnmarshalPremiumGiveawayPaymentOptions(data)

	case ConstructorPremiumGiftCodeInfo:
		return UnmarshalPremiumGiftCodeInfo(data)

	case ConstructorStarPaymentOption:
		return UnmarshalStarPaymentOption(data)

	case ConstructorStarPaymentOptions:
		return UnmarshalStarPaymentOptions(data)

	case ConstructorStarGiveawayWinnerOption:
		return UnmarshalStarGiveawayWinnerOption(data)

	case ConstructorStarGiveawayPaymentOption:
		return UnmarshalStarGiveawayPaymentOption(data)

	case ConstructorStarGiveawayPaymentOptions:
		return UnmarshalStarGiveawayPaymentOptions(data)

	case ConstructorAcceptedGiftTypes:
		return UnmarshalAcceptedGiftTypes(data)

	case ConstructorGiftSettings:
		return UnmarshalGiftSettings(data)

	case ConstructorUpgradedGiftModel:
		return UnmarshalUpgradedGiftModel(data)

	case ConstructorUpgradedGiftSymbol:
		return UnmarshalUpgradedGiftSymbol(data)

	case ConstructorUpgradedGiftBackdropColors:
		return UnmarshalUpgradedGiftBackdropColors(data)

	case ConstructorUpgradedGiftBackdrop:
		return UnmarshalUpgradedGiftBackdrop(data)

	case ConstructorUpgradedGiftOriginalDetails:
		return UnmarshalUpgradedGiftOriginalDetails(data)

	case ConstructorGift:
		return UnmarshalGift(data)

	case ConstructorGifts:
		return UnmarshalGifts(data)

	case ConstructorUpgradedGift:
		return UnmarshalUpgradedGift(data)

	case ConstructorUpgradeGiftResult:
		return UnmarshalUpgradeGiftResult(data)

	case ConstructorSentGiftRegular:
		return UnmarshalSentGiftRegular(data)

	case ConstructorSentGiftUpgraded:
		return UnmarshalSentGiftUpgraded(data)

	case ConstructorReceivedGift:
		return UnmarshalReceivedGift(data)

	case ConstructorReceivedGifts:
		return UnmarshalReceivedGifts(data)

	case ConstructorGiftUpgradePreview:
		return UnmarshalGiftUpgradePreview(data)

	case ConstructorStarTransactionDirectionIncoming:
		return UnmarshalStarTransactionDirectionIncoming(data)

	case ConstructorStarTransactionDirectionOutgoing:
		return UnmarshalStarTransactionDirectionOutgoing(data)

	case ConstructorStarTransactionTypePremiumBotDeposit:
		return UnmarshalStarTransactionTypePremiumBotDeposit(data)

	case ConstructorStarTransactionTypeAppStoreDeposit:
		return UnmarshalStarTransactionTypeAppStoreDeposit(data)

	case ConstructorStarTransactionTypeGooglePlayDeposit:
		return UnmarshalStarTransactionTypeGooglePlayDeposit(data)

	case ConstructorStarTransactionTypeFragmentDeposit:
		return UnmarshalStarTransactionTypeFragmentDeposit(data)

	case ConstructorStarTransactionTypeUserDeposit:
		return UnmarshalStarTransactionTypeUserDeposit(data)

	case ConstructorStarTransactionTypeGiveawayDeposit:
		return UnmarshalStarTransactionTypeGiveawayDeposit(data)

	case ConstructorStarTransactionTypeFragmentWithdrawal:
		return UnmarshalStarTransactionTypeFragmentWithdrawal(data)

	case ConstructorStarTransactionTypeTelegramAdsWithdrawal:
		return UnmarshalStarTransactionTypeTelegramAdsWithdrawal(data)

	case ConstructorStarTransactionTypeTelegramApiUsage:
		return UnmarshalStarTransactionTypeTelegramApiUsage(data)

	case ConstructorStarTransactionTypeBotPaidMediaPurchase:
		return UnmarshalStarTransactionTypeBotPaidMediaPurchase(data)

	case ConstructorStarTransactionTypeBotPaidMediaSale:
		return UnmarshalStarTransactionTypeBotPaidMediaSale(data)

	case ConstructorStarTransactionTypeChannelPaidMediaPurchase:
		return UnmarshalStarTransactionTypeChannelPaidMediaPurchase(data)

	case ConstructorStarTransactionTypeChannelPaidMediaSale:
		return UnmarshalStarTransactionTypeChannelPaidMediaSale(data)

	case ConstructorStarTransactionTypeBotInvoicePurchase:
		return UnmarshalStarTransactionTypeBotInvoicePurchase(data)

	case ConstructorStarTransactionTypeBotInvoiceSale:
		return UnmarshalStarTransactionTypeBotInvoiceSale(data)

	case ConstructorStarTransactionTypeBotSubscriptionPurchase:
		return UnmarshalStarTransactionTypeBotSubscriptionPurchase(data)

	case ConstructorStarTransactionTypeBotSubscriptionSale:
		return UnmarshalStarTransactionTypeBotSubscriptionSale(data)

	case ConstructorStarTransactionTypeChannelSubscriptionPurchase:
		return UnmarshalStarTransactionTypeChannelSubscriptionPurchase(data)

	case ConstructorStarTransactionTypeChannelSubscriptionSale:
		return UnmarshalStarTransactionTypeChannelSubscriptionSale(data)

	case ConstructorStarTransactionTypeGiftPurchase:
		return UnmarshalStarTransactionTypeGiftPurchase(data)

	case ConstructorStarTransactionTypeGiftTransfer:
		return UnmarshalStarTransactionTypeGiftTransfer(data)

	case ConstructorStarTransactionTypeGiftSale:
		return UnmarshalStarTransactionTypeGiftSale(data)

	case ConstructorStarTransactionTypeGiftUpgrade:
		return UnmarshalStarTransactionTypeGiftUpgrade(data)

	case ConstructorStarTransactionTypeChannelPaidReactionSend:
		return UnmarshalStarTransactionTypeChannelPaidReactionSend(data)

	case ConstructorStarTransactionTypeChannelPaidReactionReceive:
		return UnmarshalStarTransactionTypeChannelPaidReactionReceive(data)

	case ConstructorStarTransactionTypeAffiliateProgramCommission:
		return UnmarshalStarTransactionTypeAffiliateProgramCommission(data)

	case ConstructorStarTransactionTypePaidMessageSend:
		return UnmarshalStarTransactionTypePaidMessageSend(data)

	case ConstructorStarTransactionTypePaidMessageReceive:
		return UnmarshalStarTransactionTypePaidMessageReceive(data)

	case ConstructorStarTransactionTypePremiumPurchase:
		return UnmarshalStarTransactionTypePremiumPurchase(data)

	case ConstructorStarTransactionTypeBusinessBotTransferSend:
		return UnmarshalStarTransactionTypeBusinessBotTransferSend(data)

	case ConstructorStarTransactionTypeBusinessBotTransferReceive:
		return UnmarshalStarTransactionTypeBusinessBotTransferReceive(data)

	case ConstructorStarTransactionTypeUnsupported:
		return UnmarshalStarTransactionTypeUnsupported(data)

	case ConstructorStarTransaction:
		return UnmarshalStarTransaction(data)

	case ConstructorStarTransactions:
		return UnmarshalStarTransactions(data)

	case ConstructorGiveawayParticipantStatusEligible:
		return UnmarshalGiveawayParticipantStatusEligible(data)

	case ConstructorGiveawayParticipantStatusParticipating:
		return UnmarshalGiveawayParticipantStatusParticipating(data)

	case ConstructorGiveawayParticipantStatusAlreadyWasMember:
		return UnmarshalGiveawayParticipantStatusAlreadyWasMember(data)

	case ConstructorGiveawayParticipantStatusAdministrator:
		return UnmarshalGiveawayParticipantStatusAdministrator(data)

	case ConstructorGiveawayParticipantStatusDisallowedCountry:
		return UnmarshalGiveawayParticipantStatusDisallowedCountry(data)

	case ConstructorGiveawayInfoOngoing:
		return UnmarshalGiveawayInfoOngoing(data)

	case ConstructorGiveawayInfoCompleted:
		return UnmarshalGiveawayInfoCompleted(data)

	case ConstructorGiveawayPrizePremium:
		return UnmarshalGiveawayPrizePremium(data)

	case ConstructorGiveawayPrizeStars:
		return UnmarshalGiveawayPrizeStars(data)

	case ConstructorAccentColor:
		return UnmarshalAccentColor(data)

	case ConstructorProfileAccentColors:
		return UnmarshalProfileAccentColors(data)

	case ConstructorProfileAccentColor:
		return UnmarshalProfileAccentColor(data)

	case ConstructorEmojiStatusTypeCustomEmoji:
		return UnmarshalEmojiStatusTypeCustomEmoji(data)

	case ConstructorEmojiStatusTypeUpgradedGift:
		return UnmarshalEmojiStatusTypeUpgradedGift(data)

	case ConstructorEmojiStatus:
		return UnmarshalEmojiStatus(data)

	case ConstructorEmojiStatuses:
		return UnmarshalEmojiStatuses(data)

	case ConstructorEmojiStatusCustomEmojis:
		return UnmarshalEmojiStatusCustomEmojis(data)

	case ConstructorUsernames:
		return UnmarshalUsernames(data)

	case ConstructorUser:
		return UnmarshalUser(data)

	case ConstructorBotInfo:
		return UnmarshalBotInfo(data)

	case ConstructorUserFullInfo:
		return UnmarshalUserFullInfo(data)

	case ConstructorUsers:
		return UnmarshalUsers(data)

	case ConstructorFoundUsers:
		return UnmarshalFoundUsers(data)

	case ConstructorChatAdministrator:
		return UnmarshalChatAdministrator(data)

	case ConstructorChatAdministrators:
		return UnmarshalChatAdministrators(data)

	case ConstructorChatMemberStatusCreator:
		return UnmarshalChatMemberStatusCreator(data)

	case ConstructorChatMemberStatusAdministrator:
		return UnmarshalChatMemberStatusAdministrator(data)

	case ConstructorChatMemberStatusMember:
		return UnmarshalChatMemberStatusMember(data)

	case ConstructorChatMemberStatusRestricted:
		return UnmarshalChatMemberStatusRestricted(data)

	case ConstructorChatMemberStatusLeft:
		return UnmarshalChatMemberStatusLeft(data)

	case ConstructorChatMemberStatusBanned:
		return UnmarshalChatMemberStatusBanned(data)

	case ConstructorChatMember:
		return UnmarshalChatMember(data)

	case ConstructorChatMembers:
		return UnmarshalChatMembers(data)

	case ConstructorChatMembersFilterContacts:
		return UnmarshalChatMembersFilterContacts(data)

	case ConstructorChatMembersFilterAdministrators:
		return UnmarshalChatMembersFilterAdministrators(data)

	case ConstructorChatMembersFilterMembers:
		return UnmarshalChatMembersFilterMembers(data)

	case ConstructorChatMembersFilterMention:
		return UnmarshalChatMembersFilterMention(data)

	case ConstructorChatMembersFilterRestricted:
		return UnmarshalChatMembersFilterRestricted(data)

	case ConstructorChatMembersFilterBanned:
		return UnmarshalChatMembersFilterBanned(data)

	case ConstructorChatMembersFilterBots:
		return UnmarshalChatMembersFilterBots(data)

	case ConstructorSupergroupMembersFilterRecent:
		return UnmarshalSupergroupMembersFilterRecent(data)

	case ConstructorSupergroupMembersFilterContacts:
		return UnmarshalSupergroupMembersFilterContacts(data)

	case ConstructorSupergroupMembersFilterAdministrators:
		return UnmarshalSupergroupMembersFilterAdministrators(data)

	case ConstructorSupergroupMembersFilterSearch:
		return UnmarshalSupergroupMembersFilterSearch(data)

	case ConstructorSupergroupMembersFilterRestricted:
		return UnmarshalSupergroupMembersFilterRestricted(data)

	case ConstructorSupergroupMembersFilterBanned:
		return UnmarshalSupergroupMembersFilterBanned(data)

	case ConstructorSupergroupMembersFilterMention:
		return UnmarshalSupergroupMembersFilterMention(data)

	case ConstructorSupergroupMembersFilterBots:
		return UnmarshalSupergroupMembersFilterBots(data)

	case ConstructorChatInviteLink:
		return UnmarshalChatInviteLink(data)

	case ConstructorChatInviteLinks:
		return UnmarshalChatInviteLinks(data)

	case ConstructorChatInviteLinkCount:
		return UnmarshalChatInviteLinkCount(data)

	case ConstructorChatInviteLinkCounts:
		return UnmarshalChatInviteLinkCounts(data)

	case ConstructorChatInviteLinkMember:
		return UnmarshalChatInviteLinkMember(data)

	case ConstructorChatInviteLinkMembers:
		return UnmarshalChatInviteLinkMembers(data)

	case ConstructorInviteLinkChatTypeBasicGroup:
		return UnmarshalInviteLinkChatTypeBasicGroup(data)

	case ConstructorInviteLinkChatTypeSupergroup:
		return UnmarshalInviteLinkChatTypeSupergroup(data)

	case ConstructorInviteLinkChatTypeChannel:
		return UnmarshalInviteLinkChatTypeChannel(data)

	case ConstructorChatInviteLinkSubscriptionInfo:
		return UnmarshalChatInviteLinkSubscriptionInfo(data)

	case ConstructorChatInviteLinkInfo:
		return UnmarshalChatInviteLinkInfo(data)

	case ConstructorChatJoinRequest:
		return UnmarshalChatJoinRequest(data)

	case ConstructorChatJoinRequests:
		return UnmarshalChatJoinRequests(data)

	case ConstructorChatJoinRequestsInfo:
		return UnmarshalChatJoinRequestsInfo(data)

	case ConstructorBasicGroup:
		return UnmarshalBasicGroup(data)

	case ConstructorBasicGroupFullInfo:
		return UnmarshalBasicGroupFullInfo(data)

	case ConstructorSupergroup:
		return UnmarshalSupergroup(data)

	case ConstructorSupergroupFullInfo:
		return UnmarshalSupergroupFullInfo(data)

	case ConstructorSecretChatStatePending:
		return UnmarshalSecretChatStatePending(data)

	case ConstructorSecretChatStateReady:
		return UnmarshalSecretChatStateReady(data)

	case ConstructorSecretChatStateClosed:
		return UnmarshalSecretChatStateClosed(data)

	case ConstructorSecretChat:
		return UnmarshalSecretChat(data)

	case ConstructorMessageSenderUser:
		return UnmarshalMessageSenderUser(data)

	case ConstructorMessageSenderChat:
		return UnmarshalMessageSenderChat(data)

	case ConstructorMessageSenders:
		return UnmarshalMessageSenders(data)

	case ConstructorChatMessageSender:
		return UnmarshalChatMessageSender(data)

	case ConstructorChatMessageSenders:
		return UnmarshalChatMessageSenders(data)

	case ConstructorMessageReadDateRead:
		return UnmarshalMessageReadDateRead(data)

	case ConstructorMessageReadDateUnread:
		return UnmarshalMessageReadDateUnread(data)

	case ConstructorMessageReadDateTooOld:
		return UnmarshalMessageReadDateTooOld(data)

	case ConstructorMessageReadDateUserPrivacyRestricted:
		return UnmarshalMessageReadDateUserPrivacyRestricted(data)

	case ConstructorMessageReadDateMyPrivacyRestricted:
		return UnmarshalMessageReadDateMyPrivacyRestricted(data)

	case ConstructorMessageViewer:
		return UnmarshalMessageViewer(data)

	case ConstructorMessageViewers:
		return UnmarshalMessageViewers(data)

	case ConstructorMessageOriginUser:
		return UnmarshalMessageOriginUser(data)

	case ConstructorMessageOriginHiddenUser:
		return UnmarshalMessageOriginHiddenUser(data)

	case ConstructorMessageOriginChat:
		return UnmarshalMessageOriginChat(data)

	case ConstructorMessageOriginChannel:
		return UnmarshalMessageOriginChannel(data)

	case ConstructorForwardSource:
		return UnmarshalForwardSource(data)

	case ConstructorReactionTypeEmoji:
		return UnmarshalReactionTypeEmoji(data)

	case ConstructorReactionTypeCustomEmoji:
		return UnmarshalReactionTypeCustomEmoji(data)

	case ConstructorReactionTypePaid:
		return UnmarshalReactionTypePaid(data)

	case ConstructorPaidReactionTypeRegular:
		return UnmarshalPaidReactionTypeRegular(data)

	case ConstructorPaidReactionTypeAnonymous:
		return UnmarshalPaidReactionTypeAnonymous(data)

	case ConstructorPaidReactionTypeChat:
		return UnmarshalPaidReactionTypeChat(data)

	case ConstructorPaidReactor:
		return UnmarshalPaidReactor(data)

	case ConstructorMessageForwardInfo:
		return UnmarshalMessageForwardInfo(data)

	case ConstructorMessageImportInfo:
		return UnmarshalMessageImportInfo(data)

	case ConstructorMessageReplyInfo:
		return UnmarshalMessageReplyInfo(data)

	case ConstructorMessageReaction:
		return UnmarshalMessageReaction(data)

	case ConstructorMessageReactions:
		return UnmarshalMessageReactions(data)

	case ConstructorMessageInteractionInfo:
		return UnmarshalMessageInteractionInfo(data)

	case ConstructorUnreadReaction:
		return UnmarshalUnreadReaction(data)

	case ConstructorMessageEffectTypeEmojiReaction:
		return UnmarshalMessageEffectTypeEmojiReaction(data)

	case ConstructorMessageEffectTypePremiumSticker:
		return UnmarshalMessageEffectTypePremiumSticker(data)

	case ConstructorMessageEffect:
		return UnmarshalMessageEffect(data)

	case ConstructorMessageSendingStatePending:
		return UnmarshalMessageSendingStatePending(data)

	case ConstructorMessageSendingStateFailed:
		return UnmarshalMessageSendingStateFailed(data)

	case ConstructorTextQuote:
		return UnmarshalTextQuote(data)

	case ConstructorInputTextQuote:
		return UnmarshalInputTextQuote(data)

	case ConstructorMessageReplyToMessage:
		return UnmarshalMessageReplyToMessage(data)

	case ConstructorMessageReplyToStory:
		return UnmarshalMessageReplyToStory(data)

	case ConstructorInputMessageReplyToMessage:
		return UnmarshalInputMessageReplyToMessage(data)

	case ConstructorInputMessageReplyToExternalMessage:
		return UnmarshalInputMessageReplyToExternalMessage(data)

	case ConstructorInputMessageReplyToStory:
		return UnmarshalInputMessageReplyToStory(data)

	case ConstructorFactCheck:
		return UnmarshalFactCheck(data)

	case ConstructorMessage:
		return UnmarshalMessage(data)

	case ConstructorMessages:
		return UnmarshalMessages(data)

	case ConstructorFoundMessages:
		return UnmarshalFoundMessages(data)

	case ConstructorFoundChatMessages:
		return UnmarshalFoundChatMessages(data)

	case ConstructorMessagePosition:
		return UnmarshalMessagePosition(data)

	case ConstructorMessagePositions:
		return UnmarshalMessagePositions(data)

	case ConstructorMessageCalendarDay:
		return UnmarshalMessageCalendarDay(data)

	case ConstructorMessageCalendar:
		return UnmarshalMessageCalendar(data)

	case ConstructorBusinessMessage:
		return UnmarshalBusinessMessage(data)

	case ConstructorBusinessMessages:
		return UnmarshalBusinessMessages(data)

	case ConstructorMessageSourceChatHistory:
		return UnmarshalMessageSourceChatHistory(data)

	case ConstructorMessageSourceMessageThreadHistory:
		return UnmarshalMessageSourceMessageThreadHistory(data)

	case ConstructorMessageSourceForumTopicHistory:
		return UnmarshalMessageSourceForumTopicHistory(data)

	case ConstructorMessageSourceHistoryPreview:
		return UnmarshalMessageSourceHistoryPreview(data)

	case ConstructorMessageSourceChatList:
		return UnmarshalMessageSourceChatList(data)

	case ConstructorMessageSourceSearch:
		return UnmarshalMessageSourceSearch(data)

	case ConstructorMessageSourceChatEventLog:
		return UnmarshalMessageSourceChatEventLog(data)

	case ConstructorMessageSourceNotification:
		return UnmarshalMessageSourceNotification(data)

	case ConstructorMessageSourceScreenshot:
		return UnmarshalMessageSourceScreenshot(data)

	case ConstructorMessageSourceOther:
		return UnmarshalMessageSourceOther(data)

	case ConstructorMessageSponsor:
		return UnmarshalMessageSponsor(data)

	case ConstructorSponsoredMessage:
		return UnmarshalSponsoredMessage(data)

	case ConstructorSponsoredMessages:
		return UnmarshalSponsoredMessages(data)

	case ConstructorSponsoredChat:
		return UnmarshalSponsoredChat(data)

	case ConstructorSponsoredChats:
		return UnmarshalSponsoredChats(data)

	case ConstructorReportOption:
		return UnmarshalReportOption(data)

	case ConstructorReportSponsoredResultOk:
		return UnmarshalReportSponsoredResultOk(data)

	case ConstructorReportSponsoredResultFailed:
		return UnmarshalReportSponsoredResultFailed(data)

	case ConstructorReportSponsoredResultOptionRequired:
		return UnmarshalReportSponsoredResultOptionRequired(data)

	case ConstructorReportSponsoredResultAdsHidden:
		return UnmarshalReportSponsoredResultAdsHidden(data)

	case ConstructorReportSponsoredResultPremiumRequired:
		return UnmarshalReportSponsoredResultPremiumRequired(data)

	case ConstructorFileDownload:
		return UnmarshalFileDownload(data)

	case ConstructorDownloadedFileCounts:
		return UnmarshalDownloadedFileCounts(data)

	case ConstructorFoundFileDownloads:
		return UnmarshalFoundFileDownloads(data)

	case ConstructorNotificationSettingsScopePrivateChats:
		return UnmarshalNotificationSettingsScopePrivateChats(data)

	case ConstructorNotificationSettingsScopeGroupChats:
		return UnmarshalNotificationSettingsScopeGroupChats(data)

	case ConstructorNotificationSettingsScopeChannelChats:
		return UnmarshalNotificationSettingsScopeChannelChats(data)

	case ConstructorChatNotificationSettings:
		return UnmarshalChatNotificationSettings(data)

	case ConstructorScopeNotificationSettings:
		return UnmarshalScopeNotificationSettings(data)

	case ConstructorReactionNotificationSourceNone:
		return UnmarshalReactionNotificationSourceNone(data)

	case ConstructorReactionNotificationSourceContacts:
		return UnmarshalReactionNotificationSourceContacts(data)

	case ConstructorReactionNotificationSourceAll:
		return UnmarshalReactionNotificationSourceAll(data)

	case ConstructorReactionNotificationSettings:
		return UnmarshalReactionNotificationSettings(data)

	case ConstructorDraftMessage:
		return UnmarshalDraftMessage(data)

	case ConstructorChatTypePrivate:
		return UnmarshalChatTypePrivate(data)

	case ConstructorChatTypeBasicGroup:
		return UnmarshalChatTypeBasicGroup(data)

	case ConstructorChatTypeSupergroup:
		return UnmarshalChatTypeSupergroup(data)

	case ConstructorChatTypeSecret:
		return UnmarshalChatTypeSecret(data)

	case ConstructorChatFolderIcon:
		return UnmarshalChatFolderIcon(data)

	case ConstructorChatFolderName:
		return UnmarshalChatFolderName(data)

	case ConstructorChatFolder:
		return UnmarshalChatFolder(data)

	case ConstructorChatFolderInfo:
		return UnmarshalChatFolderInfo(data)

	case ConstructorChatFolderInviteLink:
		return UnmarshalChatFolderInviteLink(data)

	case ConstructorChatFolderInviteLinks:
		return UnmarshalChatFolderInviteLinks(data)

	case ConstructorChatFolderInviteLinkInfo:
		return UnmarshalChatFolderInviteLinkInfo(data)

	case ConstructorRecommendedChatFolder:
		return UnmarshalRecommendedChatFolder(data)

	case ConstructorRecommendedChatFolders:
		return UnmarshalRecommendedChatFolders(data)

	case ConstructorArchiveChatListSettings:
		return UnmarshalArchiveChatListSettings(data)

	case ConstructorChatListMain:
		return UnmarshalChatListMain(data)

	case ConstructorChatListArchive:
		return UnmarshalChatListArchive(data)

	case ConstructorChatListFolder:
		return UnmarshalChatListFolder(data)

	case ConstructorChatLists:
		return UnmarshalChatLists(data)

	case ConstructorChatSourceMtprotoProxy:
		return UnmarshalChatSourceMtprotoProxy(data)

	case ConstructorChatSourcePublicServiceAnnouncement:
		return UnmarshalChatSourcePublicServiceAnnouncement(data)

	case ConstructorChatPosition:
		return UnmarshalChatPosition(data)

	case ConstructorChatAvailableReactionsAll:
		return UnmarshalChatAvailableReactionsAll(data)

	case ConstructorChatAvailableReactionsSome:
		return UnmarshalChatAvailableReactionsSome(data)

	case ConstructorSavedMessagesTag:
		return UnmarshalSavedMessagesTag(data)

	case ConstructorSavedMessagesTags:
		return UnmarshalSavedMessagesTags(data)

	case ConstructorBusinessBotManageBar:
		return UnmarshalBusinessBotManageBar(data)

	case ConstructorVideoChat:
		return UnmarshalVideoChat(data)

	case ConstructorChat:
		return UnmarshalChat(data)

	case ConstructorChats:
		return UnmarshalChats(data)

	case ConstructorFailedToAddMember:
		return UnmarshalFailedToAddMember(data)

	case ConstructorFailedToAddMembers:
		return UnmarshalFailedToAddMembers(data)

	case ConstructorCreatedBasicGroupChat:
		return UnmarshalCreatedBasicGroupChat(data)

	case ConstructorPublicChatTypeHasUsername:
		return UnmarshalPublicChatTypeHasUsername(data)

	case ConstructorPublicChatTypeIsLocationBased:
		return UnmarshalPublicChatTypeIsLocationBased(data)

	case ConstructorAccountInfo:
		return UnmarshalAccountInfo(data)

	case ConstructorChatActionBarReportSpam:
		return UnmarshalChatActionBarReportSpam(data)

	case ConstructorChatActionBarInviteMembers:
		return UnmarshalChatActionBarInviteMembers(data)

	case ConstructorChatActionBarReportAddBlock:
		return UnmarshalChatActionBarReportAddBlock(data)

	case ConstructorChatActionBarAddContact:
		return UnmarshalChatActionBarAddContact(data)

	case ConstructorChatActionBarSharePhoneNumber:
		return UnmarshalChatActionBarSharePhoneNumber(data)

	case ConstructorChatActionBarJoinRequest:
		return UnmarshalChatActionBarJoinRequest(data)

	case ConstructorKeyboardButtonTypeText:
		return UnmarshalKeyboardButtonTypeText(data)

	case ConstructorKeyboardButtonTypeRequestPhoneNumber:
		return UnmarshalKeyboardButtonTypeRequestPhoneNumber(data)

	case ConstructorKeyboardButtonTypeRequestLocation:
		return UnmarshalKeyboardButtonTypeRequestLocation(data)

	case ConstructorKeyboardButtonTypeRequestPoll:
		return UnmarshalKeyboardButtonTypeRequestPoll(data)

	case ConstructorKeyboardButtonTypeRequestUsers:
		return UnmarshalKeyboardButtonTypeRequestUsers(data)

	case ConstructorKeyboardButtonTypeRequestChat:
		return UnmarshalKeyboardButtonTypeRequestChat(data)

	case ConstructorKeyboardButtonTypeWebApp:
		return UnmarshalKeyboardButtonTypeWebApp(data)

	case ConstructorKeyboardButton:
		return UnmarshalKeyboardButton(data)

	case ConstructorInlineKeyboardButtonTypeUrl:
		return UnmarshalInlineKeyboardButtonTypeUrl(data)

	case ConstructorInlineKeyboardButtonTypeLoginUrl:
		return UnmarshalInlineKeyboardButtonTypeLoginUrl(data)

	case ConstructorInlineKeyboardButtonTypeWebApp:
		return UnmarshalInlineKeyboardButtonTypeWebApp(data)

	case ConstructorInlineKeyboardButtonTypeCallback:
		return UnmarshalInlineKeyboardButtonTypeCallback(data)

	case ConstructorInlineKeyboardButtonTypeCallbackWithPassword:
		return UnmarshalInlineKeyboardButtonTypeCallbackWithPassword(data)

	case ConstructorInlineKeyboardButtonTypeCallbackGame:
		return UnmarshalInlineKeyboardButtonTypeCallbackGame(data)

	case ConstructorInlineKeyboardButtonTypeSwitchInline:
		return UnmarshalInlineKeyboardButtonTypeSwitchInline(data)

	case ConstructorInlineKeyboardButtonTypeBuy:
		return UnmarshalInlineKeyboardButtonTypeBuy(data)

	case ConstructorInlineKeyboardButtonTypeUser:
		return UnmarshalInlineKeyboardButtonTypeUser(data)

	case ConstructorInlineKeyboardButtonTypeCopyText:
		return UnmarshalInlineKeyboardButtonTypeCopyText(data)

	case ConstructorInlineKeyboardButton:
		return UnmarshalInlineKeyboardButton(data)

	case ConstructorReplyMarkupRemoveKeyboard:
		return UnmarshalReplyMarkupRemoveKeyboard(data)

	case ConstructorReplyMarkupForceReply:
		return UnmarshalReplyMarkupForceReply(data)

	case ConstructorReplyMarkupShowKeyboard:
		return UnmarshalReplyMarkupShowKeyboard(data)

	case ConstructorReplyMarkupInlineKeyboard:
		return UnmarshalReplyMarkupInlineKeyboard(data)

	case ConstructorLoginUrlInfoOpen:
		return UnmarshalLoginUrlInfoOpen(data)

	case ConstructorLoginUrlInfoRequestConfirmation:
		return UnmarshalLoginUrlInfoRequestConfirmation(data)

	case ConstructorThemeParameters:
		return UnmarshalThemeParameters(data)

	case ConstructorWebAppOpenModeCompact:
		return UnmarshalWebAppOpenModeCompact(data)

	case ConstructorWebAppOpenModeFullSize:
		return UnmarshalWebAppOpenModeFullSize(data)

	case ConstructorWebAppOpenModeFullScreen:
		return UnmarshalWebAppOpenModeFullScreen(data)

	case ConstructorFoundWebApp:
		return UnmarshalFoundWebApp(data)

	case ConstructorWebAppInfo:
		return UnmarshalWebAppInfo(data)

	case ConstructorMainWebApp:
		return UnmarshalMainWebApp(data)

	case ConstructorWebAppOpenParameters:
		return UnmarshalWebAppOpenParameters(data)

	case ConstructorMessageThreadInfo:
		return UnmarshalMessageThreadInfo(data)

	case ConstructorSavedMessagesTopicTypeMyNotes:
		return UnmarshalSavedMessagesTopicTypeMyNotes(data)

	case ConstructorSavedMessagesTopicTypeAuthorHidden:
		return UnmarshalSavedMessagesTopicTypeAuthorHidden(data)

	case ConstructorSavedMessagesTopicTypeSavedFromChat:
		return UnmarshalSavedMessagesTopicTypeSavedFromChat(data)

	case ConstructorSavedMessagesTopic:
		return UnmarshalSavedMessagesTopic(data)

	case ConstructorForumTopicIcon:
		return UnmarshalForumTopicIcon(data)

	case ConstructorForumTopicInfo:
		return UnmarshalForumTopicInfo(data)

	case ConstructorForumTopic:
		return UnmarshalForumTopic(data)

	case ConstructorForumTopics:
		return UnmarshalForumTopics(data)

	case ConstructorLinkPreviewOptions:
		return UnmarshalLinkPreviewOptions(data)

	case ConstructorSharedUser:
		return UnmarshalSharedUser(data)

	case ConstructorSharedChat:
		return UnmarshalSharedChat(data)

	case ConstructorThemeSettings:
		return UnmarshalThemeSettings(data)

	case ConstructorRichTextPlain:
		return UnmarshalRichTextPlain(data)

	case ConstructorRichTextBold:
		return UnmarshalRichTextBold(data)

	case ConstructorRichTextItalic:
		return UnmarshalRichTextItalic(data)

	case ConstructorRichTextUnderline:
		return UnmarshalRichTextUnderline(data)

	case ConstructorRichTextStrikethrough:
		return UnmarshalRichTextStrikethrough(data)

	case ConstructorRichTextFixed:
		return UnmarshalRichTextFixed(data)

	case ConstructorRichTextUrl:
		return UnmarshalRichTextUrl(data)

	case ConstructorRichTextEmailAddress:
		return UnmarshalRichTextEmailAddress(data)

	case ConstructorRichTextSubscript:
		return UnmarshalRichTextSubscript(data)

	case ConstructorRichTextSuperscript:
		return UnmarshalRichTextSuperscript(data)

	case ConstructorRichTextMarked:
		return UnmarshalRichTextMarked(data)

	case ConstructorRichTextPhoneNumber:
		return UnmarshalRichTextPhoneNumber(data)

	case ConstructorRichTextIcon:
		return UnmarshalRichTextIcon(data)

	case ConstructorRichTextReference:
		return UnmarshalRichTextReference(data)

	case ConstructorRichTextAnchor:
		return UnmarshalRichTextAnchor(data)

	case ConstructorRichTextAnchorLink:
		return UnmarshalRichTextAnchorLink(data)

	case ConstructorRichTexts:
		return UnmarshalRichTexts(data)

	case ConstructorPageBlockCaption:
		return UnmarshalPageBlockCaption(data)

	case ConstructorPageBlockListItem:
		return UnmarshalPageBlockListItem(data)

	case ConstructorPageBlockHorizontalAlignmentLeft:
		return UnmarshalPageBlockHorizontalAlignmentLeft(data)

	case ConstructorPageBlockHorizontalAlignmentCenter:
		return UnmarshalPageBlockHorizontalAlignmentCenter(data)

	case ConstructorPageBlockHorizontalAlignmentRight:
		return UnmarshalPageBlockHorizontalAlignmentRight(data)

	case ConstructorPageBlockVerticalAlignmentTop:
		return UnmarshalPageBlockVerticalAlignmentTop(data)

	case ConstructorPageBlockVerticalAlignmentMiddle:
		return UnmarshalPageBlockVerticalAlignmentMiddle(data)

	case ConstructorPageBlockVerticalAlignmentBottom:
		return UnmarshalPageBlockVerticalAlignmentBottom(data)

	case ConstructorPageBlockTableCell:
		return UnmarshalPageBlockTableCell(data)

	case ConstructorPageBlockRelatedArticle:
		return UnmarshalPageBlockRelatedArticle(data)

	case ConstructorPageBlockTitle:
		return UnmarshalPageBlockTitle(data)

	case ConstructorPageBlockSubtitle:
		return UnmarshalPageBlockSubtitle(data)

	case ConstructorPageBlockAuthorDate:
		return UnmarshalPageBlockAuthorDate(data)

	case ConstructorPageBlockHeader:
		return UnmarshalPageBlockHeader(data)

	case ConstructorPageBlockSubheader:
		return UnmarshalPageBlockSubheader(data)

	case ConstructorPageBlockKicker:
		return UnmarshalPageBlockKicker(data)

	case ConstructorPageBlockParagraph:
		return UnmarshalPageBlockParagraph(data)

	case ConstructorPageBlockPreformatted:
		return UnmarshalPageBlockPreformatted(data)

	case ConstructorPageBlockFooter:
		return UnmarshalPageBlockFooter(data)

	case ConstructorPageBlockDivider:
		return UnmarshalPageBlockDivider(data)

	case ConstructorPageBlockAnchor:
		return UnmarshalPageBlockAnchor(data)

	case ConstructorPageBlockList:
		return UnmarshalPageBlockList(data)

	case ConstructorPageBlockBlockQuote:
		return UnmarshalPageBlockBlockQuote(data)

	case ConstructorPageBlockPullQuote:
		return UnmarshalPageBlockPullQuote(data)

	case ConstructorPageBlockAnimation:
		return UnmarshalPageBlockAnimation(data)

	case ConstructorPageBlockAudio:
		return UnmarshalPageBlockAudio(data)

	case ConstructorPageBlockPhoto:
		return UnmarshalPageBlockPhoto(data)

	case ConstructorPageBlockVideo:
		return UnmarshalPageBlockVideo(data)

	case ConstructorPageBlockVoiceNote:
		return UnmarshalPageBlockVoiceNote(data)

	case ConstructorPageBlockCover:
		return UnmarshalPageBlockCover(data)

	case ConstructorPageBlockEmbedded:
		return UnmarshalPageBlockEmbedded(data)

	case ConstructorPageBlockEmbeddedPost:
		return UnmarshalPageBlockEmbeddedPost(data)

	case ConstructorPageBlockCollage:
		return UnmarshalPageBlockCollage(data)

	case ConstructorPageBlockSlideshow:
		return UnmarshalPageBlockSlideshow(data)

	case ConstructorPageBlockChatLink:
		return UnmarshalPageBlockChatLink(data)

	case ConstructorPageBlockTable:
		return UnmarshalPageBlockTable(data)

	case ConstructorPageBlockDetails:
		return UnmarshalPageBlockDetails(data)

	case ConstructorPageBlockRelatedArticles:
		return UnmarshalPageBlockRelatedArticles(data)

	case ConstructorPageBlockMap:
		return UnmarshalPageBlockMap(data)

	case ConstructorWebPageInstantView:
		return UnmarshalWebPageInstantView(data)

	case ConstructorLinkPreviewAlbumMediaPhoto:
		return UnmarshalLinkPreviewAlbumMediaPhoto(data)

	case ConstructorLinkPreviewAlbumMediaVideo:
		return UnmarshalLinkPreviewAlbumMediaVideo(data)

	case ConstructorLinkPreviewTypeAlbum:
		return UnmarshalLinkPreviewTypeAlbum(data)

	case ConstructorLinkPreviewTypeAnimation:
		return UnmarshalLinkPreviewTypeAnimation(data)

	case ConstructorLinkPreviewTypeApp:
		return UnmarshalLinkPreviewTypeApp(data)

	case ConstructorLinkPreviewTypeArticle:
		return UnmarshalLinkPreviewTypeArticle(data)

	case ConstructorLinkPreviewTypeAudio:
		return UnmarshalLinkPreviewTypeAudio(data)

	case ConstructorLinkPreviewTypeBackground:
		return UnmarshalLinkPreviewTypeBackground(data)

	case ConstructorLinkPreviewTypeChannelBoost:
		return UnmarshalLinkPreviewTypeChannelBoost(data)

	case ConstructorLinkPreviewTypeChat:
		return UnmarshalLinkPreviewTypeChat(data)

	case ConstructorLinkPreviewTypeDocument:
		return UnmarshalLinkPreviewTypeDocument(data)

	case ConstructorLinkPreviewTypeEmbeddedAnimationPlayer:
		return UnmarshalLinkPreviewTypeEmbeddedAnimationPlayer(data)

	case ConstructorLinkPreviewTypeEmbeddedAudioPlayer:
		return UnmarshalLinkPreviewTypeEmbeddedAudioPlayer(data)

	case ConstructorLinkPreviewTypeEmbeddedVideoPlayer:
		return UnmarshalLinkPreviewTypeEmbeddedVideoPlayer(data)

	case ConstructorLinkPreviewTypeExternalAudio:
		return UnmarshalLinkPreviewTypeExternalAudio(data)

	case ConstructorLinkPreviewTypeExternalVideo:
		return UnmarshalLinkPreviewTypeExternalVideo(data)

	case ConstructorLinkPreviewTypeInvoice:
		return UnmarshalLinkPreviewTypeInvoice(data)

	case ConstructorLinkPreviewTypeMessage:
		return UnmarshalLinkPreviewTypeMessage(data)

	case ConstructorLinkPreviewTypePhoto:
		return UnmarshalLinkPreviewTypePhoto(data)

	case ConstructorLinkPreviewTypePremiumGiftCode:
		return UnmarshalLinkPreviewTypePremiumGiftCode(data)

	case ConstructorLinkPreviewTypeShareableChatFolder:
		return UnmarshalLinkPreviewTypeShareableChatFolder(data)

	case ConstructorLinkPreviewTypeSticker:
		return UnmarshalLinkPreviewTypeSticker(data)

	case ConstructorLinkPreviewTypeStickerSet:
		return UnmarshalLinkPreviewTypeStickerSet(data)

	case ConstructorLinkPreviewTypeStory:
		return UnmarshalLinkPreviewTypeStory(data)

	case ConstructorLinkPreviewTypeSupergroupBoost:
		return UnmarshalLinkPreviewTypeSupergroupBoost(data)

	case ConstructorLinkPreviewTypeTheme:
		return UnmarshalLinkPreviewTypeTheme(data)

	case ConstructorLinkPreviewTypeUnsupported:
		return UnmarshalLinkPreviewTypeUnsupported(data)

	case ConstructorLinkPreviewTypeUpgradedGift:
		return UnmarshalLinkPreviewTypeUpgradedGift(data)

	case ConstructorLinkPreviewTypeUser:
		return UnmarshalLinkPreviewTypeUser(data)

	case ConstructorLinkPreviewTypeVideo:
		return UnmarshalLinkPreviewTypeVideo(data)

	case ConstructorLinkPreviewTypeVideoChat:
		return UnmarshalLinkPreviewTypeVideoChat(data)

	case ConstructorLinkPreviewTypeVideoNote:
		return UnmarshalLinkPreviewTypeVideoNote(data)

	case ConstructorLinkPreviewTypeVoiceNote:
		return UnmarshalLinkPreviewTypeVoiceNote(data)

	case ConstructorLinkPreviewTypeWebApp:
		return UnmarshalLinkPreviewTypeWebApp(data)

	case ConstructorLinkPreview:
		return UnmarshalLinkPreview(data)

	case ConstructorCountryInfo:
		return UnmarshalCountryInfo(data)

	case ConstructorCountries:
		return UnmarshalCountries(data)

	case ConstructorPhoneNumberInfo:
		return UnmarshalPhoneNumberInfo(data)

	case ConstructorCollectibleItemTypeUsername:
		return UnmarshalCollectibleItemTypeUsername(data)

	case ConstructorCollectibleItemTypePhoneNumber:
		return UnmarshalCollectibleItemTypePhoneNumber(data)

	case ConstructorCollectibleItemInfo:
		return UnmarshalCollectibleItemInfo(data)

	case ConstructorBankCardActionOpenUrl:
		return UnmarshalBankCardActionOpenUrl(data)

	case ConstructorBankCardInfo:
		return UnmarshalBankCardInfo(data)

	case ConstructorAddress:
		return UnmarshalAddress(data)

	case ConstructorLocationAddress:
		return UnmarshalLocationAddress(data)

	case ConstructorLabeledPricePart:
		return UnmarshalLabeledPricePart(data)

	case ConstructorInvoice:
		return UnmarshalInvoice(data)

	case ConstructorOrderInfo:
		return UnmarshalOrderInfo(data)

	case ConstructorShippingOption:
		return UnmarshalShippingOption(data)

	case ConstructorSavedCredentials:
		return UnmarshalSavedCredentials(data)

	case ConstructorInputCredentialsSaved:
		return UnmarshalInputCredentialsSaved(data)

	case ConstructorInputCredentialsNew:
		return UnmarshalInputCredentialsNew(data)

	case ConstructorInputCredentialsApplePay:
		return UnmarshalInputCredentialsApplePay(data)

	case ConstructorInputCredentialsGooglePay:
		return UnmarshalInputCredentialsGooglePay(data)

	case ConstructorPaymentProviderSmartGlocal:
		return UnmarshalPaymentProviderSmartGlocal(data)

	case ConstructorPaymentProviderStripe:
		return UnmarshalPaymentProviderStripe(data)

	case ConstructorPaymentProviderOther:
		return UnmarshalPaymentProviderOther(data)

	case ConstructorPaymentOption:
		return UnmarshalPaymentOption(data)

	case ConstructorPaymentFormTypeRegular:
		return UnmarshalPaymentFormTypeRegular(data)

	case ConstructorPaymentFormTypeStars:
		return UnmarshalPaymentFormTypeStars(data)

	case ConstructorPaymentFormTypeStarSubscription:
		return UnmarshalPaymentFormTypeStarSubscription(data)

	case ConstructorPaymentForm:
		return UnmarshalPaymentForm(data)

	case ConstructorValidatedOrderInfo:
		return UnmarshalValidatedOrderInfo(data)

	case ConstructorPaymentResult:
		return UnmarshalPaymentResult(data)

	case ConstructorPaymentReceiptTypeRegular:
		return UnmarshalPaymentReceiptTypeRegular(data)

	case ConstructorPaymentReceiptTypeStars:
		return UnmarshalPaymentReceiptTypeStars(data)

	case ConstructorPaymentReceipt:
		return UnmarshalPaymentReceipt(data)

	case ConstructorInputInvoiceMessage:
		return UnmarshalInputInvoiceMessage(data)

	case ConstructorInputInvoiceName:
		return UnmarshalInputInvoiceName(data)

	case ConstructorInputInvoiceTelegram:
		return UnmarshalInputInvoiceTelegram(data)

	case ConstructorPaidMediaPreview:
		return UnmarshalPaidMediaPreview(data)

	case ConstructorPaidMediaPhoto:
		return UnmarshalPaidMediaPhoto(data)

	case ConstructorPaidMediaVideo:
		return UnmarshalPaidMediaVideo(data)

	case ConstructorPaidMediaUnsupported:
		return UnmarshalPaidMediaUnsupported(data)

	case ConstructorGiveawayParameters:
		return UnmarshalGiveawayParameters(data)

	case ConstructorDatedFile:
		return UnmarshalDatedFile(data)

	case ConstructorPassportElementTypePersonalDetails:
		return UnmarshalPassportElementTypePersonalDetails(data)

	case ConstructorPassportElementTypePassport:
		return UnmarshalPassportElementTypePassport(data)

	case ConstructorPassportElementTypeDriverLicense:
		return UnmarshalPassportElementTypeDriverLicense(data)

	case ConstructorPassportElementTypeIdentityCard:
		return UnmarshalPassportElementTypeIdentityCard(data)

	case ConstructorPassportElementTypeInternalPassport:
		return UnmarshalPassportElementTypeInternalPassport(data)

	case ConstructorPassportElementTypeAddress:
		return UnmarshalPassportElementTypeAddress(data)

	case ConstructorPassportElementTypeUtilityBill:
		return UnmarshalPassportElementTypeUtilityBill(data)

	case ConstructorPassportElementTypeBankStatement:
		return UnmarshalPassportElementTypeBankStatement(data)

	case ConstructorPassportElementTypeRentalAgreement:
		return UnmarshalPassportElementTypeRentalAgreement(data)

	case ConstructorPassportElementTypePassportRegistration:
		return UnmarshalPassportElementTypePassportRegistration(data)

	case ConstructorPassportElementTypeTemporaryRegistration:
		return UnmarshalPassportElementTypeTemporaryRegistration(data)

	case ConstructorPassportElementTypePhoneNumber:
		return UnmarshalPassportElementTypePhoneNumber(data)

	case ConstructorPassportElementTypeEmailAddress:
		return UnmarshalPassportElementTypeEmailAddress(data)

	case ConstructorDate:
		return UnmarshalDate(data)

	case ConstructorPersonalDetails:
		return UnmarshalPersonalDetails(data)

	case ConstructorIdentityDocument:
		return UnmarshalIdentityDocument(data)

	case ConstructorInputIdentityDocument:
		return UnmarshalInputIdentityDocument(data)

	case ConstructorPersonalDocument:
		return UnmarshalPersonalDocument(data)

	case ConstructorInputPersonalDocument:
		return UnmarshalInputPersonalDocument(data)

	case ConstructorPassportElementPersonalDetails:
		return UnmarshalPassportElementPersonalDetails(data)

	case ConstructorPassportElementPassport:
		return UnmarshalPassportElementPassport(data)

	case ConstructorPassportElementDriverLicense:
		return UnmarshalPassportElementDriverLicense(data)

	case ConstructorPassportElementIdentityCard:
		return UnmarshalPassportElementIdentityCard(data)

	case ConstructorPassportElementInternalPassport:
		return UnmarshalPassportElementInternalPassport(data)

	case ConstructorPassportElementAddress:
		return UnmarshalPassportElementAddress(data)

	case ConstructorPassportElementUtilityBill:
		return UnmarshalPassportElementUtilityBill(data)

	case ConstructorPassportElementBankStatement:
		return UnmarshalPassportElementBankStatement(data)

	case ConstructorPassportElementRentalAgreement:
		return UnmarshalPassportElementRentalAgreement(data)

	case ConstructorPassportElementPassportRegistration:
		return UnmarshalPassportElementPassportRegistration(data)

	case ConstructorPassportElementTemporaryRegistration:
		return UnmarshalPassportElementTemporaryRegistration(data)

	case ConstructorPassportElementPhoneNumber:
		return UnmarshalPassportElementPhoneNumber(data)

	case ConstructorPassportElementEmailAddress:
		return UnmarshalPassportElementEmailAddress(data)

	case ConstructorInputPassportElementPersonalDetails:
		return UnmarshalInputPassportElementPersonalDetails(data)

	case ConstructorInputPassportElementPassport:
		return UnmarshalInputPassportElementPassport(data)

	case ConstructorInputPassportElementDriverLicense:
		return UnmarshalInputPassportElementDriverLicense(data)

	case ConstructorInputPassportElementIdentityCard:
		return UnmarshalInputPassportElementIdentityCard(data)

	case ConstructorInputPassportElementInternalPassport:
		return UnmarshalInputPassportElementInternalPassport(data)

	case ConstructorInputPassportElementAddress:
		return UnmarshalInputPassportElementAddress(data)

	case ConstructorInputPassportElementUtilityBill:
		return UnmarshalInputPassportElementUtilityBill(data)

	case ConstructorInputPassportElementBankStatement:
		return UnmarshalInputPassportElementBankStatement(data)

	case ConstructorInputPassportElementRentalAgreement:
		return UnmarshalInputPassportElementRentalAgreement(data)

	case ConstructorInputPassportElementPassportRegistration:
		return UnmarshalInputPassportElementPassportRegistration(data)

	case ConstructorInputPassportElementTemporaryRegistration:
		return UnmarshalInputPassportElementTemporaryRegistration(data)

	case ConstructorInputPassportElementPhoneNumber:
		return UnmarshalInputPassportElementPhoneNumber(data)

	case ConstructorInputPassportElementEmailAddress:
		return UnmarshalInputPassportElementEmailAddress(data)

	case ConstructorPassportElements:
		return UnmarshalPassportElements(data)

	case ConstructorPassportElementErrorSourceUnspecified:
		return UnmarshalPassportElementErrorSourceUnspecified(data)

	case ConstructorPassportElementErrorSourceDataField:
		return UnmarshalPassportElementErrorSourceDataField(data)

	case ConstructorPassportElementErrorSourceFrontSide:
		return UnmarshalPassportElementErrorSourceFrontSide(data)

	case ConstructorPassportElementErrorSourceReverseSide:
		return UnmarshalPassportElementErrorSourceReverseSide(data)

	case ConstructorPassportElementErrorSourceSelfie:
		return UnmarshalPassportElementErrorSourceSelfie(data)

	case ConstructorPassportElementErrorSourceTranslationFile:
		return UnmarshalPassportElementErrorSourceTranslationFile(data)

	case ConstructorPassportElementErrorSourceTranslationFiles:
		return UnmarshalPassportElementErrorSourceTranslationFiles(data)

	case ConstructorPassportElementErrorSourceFile:
		return UnmarshalPassportElementErrorSourceFile(data)

	case ConstructorPassportElementErrorSourceFiles:
		return UnmarshalPassportElementErrorSourceFiles(data)

	case ConstructorPassportElementError:
		return UnmarshalPassportElementError(data)

	case ConstructorPassportSuitableElement:
		return UnmarshalPassportSuitableElement(data)

	case ConstructorPassportRequiredElement:
		return UnmarshalPassportRequiredElement(data)

	case ConstructorPassportAuthorizationForm:
		return UnmarshalPassportAuthorizationForm(data)

	case ConstructorPassportElementsWithErrors:
		return UnmarshalPassportElementsWithErrors(data)

	case ConstructorEncryptedCredentials:
		return UnmarshalEncryptedCredentials(data)

	case ConstructorEncryptedPassportElement:
		return UnmarshalEncryptedPassportElement(data)

	case ConstructorInputPassportElementErrorSourceUnspecified:
		return UnmarshalInputPassportElementErrorSourceUnspecified(data)

	case ConstructorInputPassportElementErrorSourceDataField:
		return UnmarshalInputPassportElementErrorSourceDataField(data)

	case ConstructorInputPassportElementErrorSourceFrontSide:
		return UnmarshalInputPassportElementErrorSourceFrontSide(data)

	case ConstructorInputPassportElementErrorSourceReverseSide:
		return UnmarshalInputPassportElementErrorSourceReverseSide(data)

	case ConstructorInputPassportElementErrorSourceSelfie:
		return UnmarshalInputPassportElementErrorSourceSelfie(data)

	case ConstructorInputPassportElementErrorSourceTranslationFile:
		return UnmarshalInputPassportElementErrorSourceTranslationFile(data)

	case ConstructorInputPassportElementErrorSourceTranslationFiles:
		return UnmarshalInputPassportElementErrorSourceTranslationFiles(data)

	case ConstructorInputPassportElementErrorSourceFile:
		return UnmarshalInputPassportElementErrorSourceFile(data)

	case ConstructorInputPassportElementErrorSourceFiles:
		return UnmarshalInputPassportElementErrorSourceFiles(data)

	case ConstructorInputPassportElementError:
		return UnmarshalInputPassportElementError(data)

	case ConstructorMessageText:
		return UnmarshalMessageText(data)

	case ConstructorMessageAnimation:
		return UnmarshalMessageAnimation(data)

	case ConstructorMessageAudio:
		return UnmarshalMessageAudio(data)

	case ConstructorMessageDocument:
		return UnmarshalMessageDocument(data)

	case ConstructorMessagePaidMedia:
		return UnmarshalMessagePaidMedia(data)

	case ConstructorMessagePhoto:
		return UnmarshalMessagePhoto(data)

	case ConstructorMessageSticker:
		return UnmarshalMessageSticker(data)

	case ConstructorMessageVideo:
		return UnmarshalMessageVideo(data)

	case ConstructorMessageVideoNote:
		return UnmarshalMessageVideoNote(data)

	case ConstructorMessageVoiceNote:
		return UnmarshalMessageVoiceNote(data)

	case ConstructorMessageExpiredPhoto:
		return UnmarshalMessageExpiredPhoto(data)

	case ConstructorMessageExpiredVideo:
		return UnmarshalMessageExpiredVideo(data)

	case ConstructorMessageExpiredVideoNote:
		return UnmarshalMessageExpiredVideoNote(data)

	case ConstructorMessageExpiredVoiceNote:
		return UnmarshalMessageExpiredVoiceNote(data)

	case ConstructorMessageLocation:
		return UnmarshalMessageLocation(data)

	case ConstructorMessageVenue:
		return UnmarshalMessageVenue(data)

	case ConstructorMessageContact:
		return UnmarshalMessageContact(data)

	case ConstructorMessageAnimatedEmoji:
		return UnmarshalMessageAnimatedEmoji(data)

	case ConstructorMessageDice:
		return UnmarshalMessageDice(data)

	case ConstructorMessageGame:
		return UnmarshalMessageGame(data)

	case ConstructorMessagePoll:
		return UnmarshalMessagePoll(data)

	case ConstructorMessageStory:
		return UnmarshalMessageStory(data)

	case ConstructorMessageInvoice:
		return UnmarshalMessageInvoice(data)

	case ConstructorMessageCall:
		return UnmarshalMessageCall(data)

	case ConstructorMessageVideoChatScheduled:
		return UnmarshalMessageVideoChatScheduled(data)

	case ConstructorMessageVideoChatStarted:
		return UnmarshalMessageVideoChatStarted(data)

	case ConstructorMessageVideoChatEnded:
		return UnmarshalMessageVideoChatEnded(data)

	case ConstructorMessageInviteVideoChatParticipants:
		return UnmarshalMessageInviteVideoChatParticipants(data)

	case ConstructorMessageBasicGroupChatCreate:
		return UnmarshalMessageBasicGroupChatCreate(data)

	case ConstructorMessageSupergroupChatCreate:
		return UnmarshalMessageSupergroupChatCreate(data)

	case ConstructorMessageChatChangeTitle:
		return UnmarshalMessageChatChangeTitle(data)

	case ConstructorMessageChatChangePhoto:
		return UnmarshalMessageChatChangePhoto(data)

	case ConstructorMessageChatDeletePhoto:
		return UnmarshalMessageChatDeletePhoto(data)

	case ConstructorMessageChatAddMembers:
		return UnmarshalMessageChatAddMembers(data)

	case ConstructorMessageChatJoinByLink:
		return UnmarshalMessageChatJoinByLink(data)

	case ConstructorMessageChatJoinByRequest:
		return UnmarshalMessageChatJoinByRequest(data)

	case ConstructorMessageChatDeleteMember:
		return UnmarshalMessageChatDeleteMember(data)

	case ConstructorMessageChatUpgradeTo:
		return UnmarshalMessageChatUpgradeTo(data)

	case ConstructorMessageChatUpgradeFrom:
		return UnmarshalMessageChatUpgradeFrom(data)

	case ConstructorMessagePinMessage:
		return UnmarshalMessagePinMessage(data)

	case ConstructorMessageScreenshotTaken:
		return UnmarshalMessageScreenshotTaken(data)

	case ConstructorMessageChatSetBackground:
		return UnmarshalMessageChatSetBackground(data)

	case ConstructorMessageChatSetTheme:
		return UnmarshalMessageChatSetTheme(data)

	case ConstructorMessageChatSetMessageAutoDeleteTime:
		return UnmarshalMessageChatSetMessageAutoDeleteTime(data)

	case ConstructorMessageChatBoost:
		return UnmarshalMessageChatBoost(data)

	case ConstructorMessageForumTopicCreated:
		return UnmarshalMessageForumTopicCreated(data)

	case ConstructorMessageForumTopicEdited:
		return UnmarshalMessageForumTopicEdited(data)

	case ConstructorMessageForumTopicIsClosedToggled:
		return UnmarshalMessageForumTopicIsClosedToggled(data)

	case ConstructorMessageForumTopicIsHiddenToggled:
		return UnmarshalMessageForumTopicIsHiddenToggled(data)

	case ConstructorMessageSuggestProfilePhoto:
		return UnmarshalMessageSuggestProfilePhoto(data)

	case ConstructorMessageCustomServiceAction:
		return UnmarshalMessageCustomServiceAction(data)

	case ConstructorMessageGameScore:
		return UnmarshalMessageGameScore(data)

	case ConstructorMessagePaymentSuccessful:
		return UnmarshalMessagePaymentSuccessful(data)

	case ConstructorMessagePaymentSuccessfulBot:
		return UnmarshalMessagePaymentSuccessfulBot(data)

	case ConstructorMessagePaymentRefunded:
		return UnmarshalMessagePaymentRefunded(data)

	case ConstructorMessageGiftedPremium:
		return UnmarshalMessageGiftedPremium(data)

	case ConstructorMessagePremiumGiftCode:
		return UnmarshalMessagePremiumGiftCode(data)

	case ConstructorMessageGiveawayCreated:
		return UnmarshalMessageGiveawayCreated(data)

	case ConstructorMessageGiveaway:
		return UnmarshalMessageGiveaway(data)

	case ConstructorMessageGiveawayCompleted:
		return UnmarshalMessageGiveawayCompleted(data)

	case ConstructorMessageGiveawayWinners:
		return UnmarshalMessageGiveawayWinners(data)

	case ConstructorMessageGiftedStars:
		return UnmarshalMessageGiftedStars(data)

	case ConstructorMessageGiveawayPrizeStars:
		return UnmarshalMessageGiveawayPrizeStars(data)

	case ConstructorMessageGift:
		return UnmarshalMessageGift(data)

	case ConstructorMessageUpgradedGift:
		return UnmarshalMessageUpgradedGift(data)

	case ConstructorMessageRefundedUpgradedGift:
		return UnmarshalMessageRefundedUpgradedGift(data)

	case ConstructorMessagePaidMessagesRefunded:
		return UnmarshalMessagePaidMessagesRefunded(data)

	case ConstructorMessagePaidMessagePriceChanged:
		return UnmarshalMessagePaidMessagePriceChanged(data)

	case ConstructorMessageContactRegistered:
		return UnmarshalMessageContactRegistered(data)

	case ConstructorMessageUsersShared:
		return UnmarshalMessageUsersShared(data)

	case ConstructorMessageChatShared:
		return UnmarshalMessageChatShared(data)

	case ConstructorMessageBotWriteAccessAllowed:
		return UnmarshalMessageBotWriteAccessAllowed(data)

	case ConstructorMessageWebAppDataSent:
		return UnmarshalMessageWebAppDataSent(data)

	case ConstructorMessageWebAppDataReceived:
		return UnmarshalMessageWebAppDataReceived(data)

	case ConstructorMessagePassportDataSent:
		return UnmarshalMessagePassportDataSent(data)

	case ConstructorMessagePassportDataReceived:
		return UnmarshalMessagePassportDataReceived(data)

	case ConstructorMessageProximityAlertTriggered:
		return UnmarshalMessageProximityAlertTriggered(data)

	case ConstructorMessageUnsupported:
		return UnmarshalMessageUnsupported(data)

	case ConstructorTextEntityTypeMention:
		return UnmarshalTextEntityTypeMention(data)

	case ConstructorTextEntityTypeHashtag:
		return UnmarshalTextEntityTypeHashtag(data)

	case ConstructorTextEntityTypeCashtag:
		return UnmarshalTextEntityTypeCashtag(data)

	case ConstructorTextEntityTypeBotCommand:
		return UnmarshalTextEntityTypeBotCommand(data)

	case ConstructorTextEntityTypeUrl:
		return UnmarshalTextEntityTypeUrl(data)

	case ConstructorTextEntityTypeEmailAddress:
		return UnmarshalTextEntityTypeEmailAddress(data)

	case ConstructorTextEntityTypePhoneNumber:
		return UnmarshalTextEntityTypePhoneNumber(data)

	case ConstructorTextEntityTypeBankCardNumber:
		return UnmarshalTextEntityTypeBankCardNumber(data)

	case ConstructorTextEntityTypeBold:
		return UnmarshalTextEntityTypeBold(data)

	case ConstructorTextEntityTypeItalic:
		return UnmarshalTextEntityTypeItalic(data)

	case ConstructorTextEntityTypeUnderline:
		return UnmarshalTextEntityTypeUnderline(data)

	case ConstructorTextEntityTypeStrikethrough:
		return UnmarshalTextEntityTypeStrikethrough(data)

	case ConstructorTextEntityTypeSpoiler:
		return UnmarshalTextEntityTypeSpoiler(data)

	case ConstructorTextEntityTypeCode:
		return UnmarshalTextEntityTypeCode(data)

	case ConstructorTextEntityTypePre:
		return UnmarshalTextEntityTypePre(data)

	case ConstructorTextEntityTypePreCode:
		return UnmarshalTextEntityTypePreCode(data)

	case ConstructorTextEntityTypeBlockQuote:
		return UnmarshalTextEntityTypeBlockQuote(data)

	case ConstructorTextEntityTypeExpandableBlockQuote:
		return UnmarshalTextEntityTypeExpandableBlockQuote(data)

	case ConstructorTextEntityTypeTextUrl:
		return UnmarshalTextEntityTypeTextUrl(data)

	case ConstructorTextEntityTypeMentionName:
		return UnmarshalTextEntityTypeMentionName(data)

	case ConstructorTextEntityTypeCustomEmoji:
		return UnmarshalTextEntityTypeCustomEmoji(data)

	case ConstructorTextEntityTypeMediaTimestamp:
		return UnmarshalTextEntityTypeMediaTimestamp(data)

	case ConstructorInputThumbnail:
		return UnmarshalInputThumbnail(data)

	case ConstructorInputPaidMediaTypePhoto:
		return UnmarshalInputPaidMediaTypePhoto(data)

	case ConstructorInputPaidMediaTypeVideo:
		return UnmarshalInputPaidMediaTypeVideo(data)

	case ConstructorInputPaidMedia:
		return UnmarshalInputPaidMedia(data)

	case ConstructorMessageSchedulingStateSendAtDate:
		return UnmarshalMessageSchedulingStateSendAtDate(data)

	case ConstructorMessageSchedulingStateSendWhenOnline:
		return UnmarshalMessageSchedulingStateSendWhenOnline(data)

	case ConstructorMessageSchedulingStateSendWhenVideoProcessed:
		return UnmarshalMessageSchedulingStateSendWhenVideoProcessed(data)

	case ConstructorMessageSelfDestructTypeTimer:
		return UnmarshalMessageSelfDestructTypeTimer(data)

	case ConstructorMessageSelfDestructTypeImmediately:
		return UnmarshalMessageSelfDestructTypeImmediately(data)

	case ConstructorMessageSendOptions:
		return UnmarshalMessageSendOptions(data)

	case ConstructorMessageCopyOptions:
		return UnmarshalMessageCopyOptions(data)

	case ConstructorInputMessageText:
		return UnmarshalInputMessageText(data)

	case ConstructorInputMessageAnimation:
		return UnmarshalInputMessageAnimation(data)

	case ConstructorInputMessageAudio:
		return UnmarshalInputMessageAudio(data)

	case ConstructorInputMessageDocument:
		return UnmarshalInputMessageDocument(data)

	case ConstructorInputMessagePaidMedia:
		return UnmarshalInputMessagePaidMedia(data)

	case ConstructorInputMessagePhoto:
		return UnmarshalInputMessagePhoto(data)

	case ConstructorInputMessageSticker:
		return UnmarshalInputMessageSticker(data)

	case ConstructorInputMessageVideo:
		return UnmarshalInputMessageVideo(data)

	case ConstructorInputMessageVideoNote:
		return UnmarshalInputMessageVideoNote(data)

	case ConstructorInputMessageVoiceNote:
		return UnmarshalInputMessageVoiceNote(data)

	case ConstructorInputMessageLocation:
		return UnmarshalInputMessageLocation(data)

	case ConstructorInputMessageVenue:
		return UnmarshalInputMessageVenue(data)

	case ConstructorInputMessageContact:
		return UnmarshalInputMessageContact(data)

	case ConstructorInputMessageDice:
		return UnmarshalInputMessageDice(data)

	case ConstructorInputMessageGame:
		return UnmarshalInputMessageGame(data)

	case ConstructorInputMessageInvoice:
		return UnmarshalInputMessageInvoice(data)

	case ConstructorInputMessagePoll:
		return UnmarshalInputMessagePoll(data)

	case ConstructorInputMessageStory:
		return UnmarshalInputMessageStory(data)

	case ConstructorInputMessageForwarded:
		return UnmarshalInputMessageForwarded(data)

	case ConstructorMessageProperties:
		return UnmarshalMessageProperties(data)

	case ConstructorSearchMessagesFilterEmpty:
		return UnmarshalSearchMessagesFilterEmpty(data)

	case ConstructorSearchMessagesFilterAnimation:
		return UnmarshalSearchMessagesFilterAnimation(data)

	case ConstructorSearchMessagesFilterAudio:
		return UnmarshalSearchMessagesFilterAudio(data)

	case ConstructorSearchMessagesFilterDocument:
		return UnmarshalSearchMessagesFilterDocument(data)

	case ConstructorSearchMessagesFilterPhoto:
		return UnmarshalSearchMessagesFilterPhoto(data)

	case ConstructorSearchMessagesFilterVideo:
		return UnmarshalSearchMessagesFilterVideo(data)

	case ConstructorSearchMessagesFilterVoiceNote:
		return UnmarshalSearchMessagesFilterVoiceNote(data)

	case ConstructorSearchMessagesFilterPhotoAndVideo:
		return UnmarshalSearchMessagesFilterPhotoAndVideo(data)

	case ConstructorSearchMessagesFilterUrl:
		return UnmarshalSearchMessagesFilterUrl(data)

	case ConstructorSearchMessagesFilterChatPhoto:
		return UnmarshalSearchMessagesFilterChatPhoto(data)

	case ConstructorSearchMessagesFilterVideoNote:
		return UnmarshalSearchMessagesFilterVideoNote(data)

	case ConstructorSearchMessagesFilterVoiceAndVideoNote:
		return UnmarshalSearchMessagesFilterVoiceAndVideoNote(data)

	case ConstructorSearchMessagesFilterMention:
		return UnmarshalSearchMessagesFilterMention(data)

	case ConstructorSearchMessagesFilterUnreadMention:
		return UnmarshalSearchMessagesFilterUnreadMention(data)

	case ConstructorSearchMessagesFilterUnreadReaction:
		return UnmarshalSearchMessagesFilterUnreadReaction(data)

	case ConstructorSearchMessagesFilterFailedToSend:
		return UnmarshalSearchMessagesFilterFailedToSend(data)

	case ConstructorSearchMessagesFilterPinned:
		return UnmarshalSearchMessagesFilterPinned(data)

	case ConstructorSearchMessagesChatTypeFilterPrivate:
		return UnmarshalSearchMessagesChatTypeFilterPrivate(data)

	case ConstructorSearchMessagesChatTypeFilterGroup:
		return UnmarshalSearchMessagesChatTypeFilterGroup(data)

	case ConstructorSearchMessagesChatTypeFilterChannel:
		return UnmarshalSearchMessagesChatTypeFilterChannel(data)

	case ConstructorChatActionTyping:
		return UnmarshalChatActionTyping(data)

	case ConstructorChatActionRecordingVideo:
		return UnmarshalChatActionRecordingVideo(data)

	case ConstructorChatActionUploadingVideo:
		return UnmarshalChatActionUploadingVideo(data)

	case ConstructorChatActionRecordingVoiceNote:
		return UnmarshalChatActionRecordingVoiceNote(data)

	case ConstructorChatActionUploadingVoiceNote:
		return UnmarshalChatActionUploadingVoiceNote(data)

	case ConstructorChatActionUploadingPhoto:
		return UnmarshalChatActionUploadingPhoto(data)

	case ConstructorChatActionUploadingDocument:
		return UnmarshalChatActionUploadingDocument(data)

	case ConstructorChatActionChoosingSticker:
		return UnmarshalChatActionChoosingSticker(data)

	case ConstructorChatActionChoosingLocation:
		return UnmarshalChatActionChoosingLocation(data)

	case ConstructorChatActionChoosingContact:
		return UnmarshalChatActionChoosingContact(data)

	case ConstructorChatActionStartPlayingGame:
		return UnmarshalChatActionStartPlayingGame(data)

	case ConstructorChatActionRecordingVideoNote:
		return UnmarshalChatActionRecordingVideoNote(data)

	case ConstructorChatActionUploadingVideoNote:
		return UnmarshalChatActionUploadingVideoNote(data)

	case ConstructorChatActionWatchingAnimations:
		return UnmarshalChatActionWatchingAnimations(data)

	case ConstructorChatActionCancel:
		return UnmarshalChatActionCancel(data)

	case ConstructorUserStatusEmpty:
		return UnmarshalUserStatusEmpty(data)

	case ConstructorUserStatusOnline:
		return UnmarshalUserStatusOnline(data)

	case ConstructorUserStatusOffline:
		return UnmarshalUserStatusOffline(data)

	case ConstructorUserStatusRecently:
		return UnmarshalUserStatusRecently(data)

	case ConstructorUserStatusLastWeek:
		return UnmarshalUserStatusLastWeek(data)

	case ConstructorUserStatusLastMonth:
		return UnmarshalUserStatusLastMonth(data)

	case ConstructorEmojiKeyword:
		return UnmarshalEmojiKeyword(data)

	case ConstructorEmojiKeywords:
		return UnmarshalEmojiKeywords(data)

	case ConstructorStickers:
		return UnmarshalStickers(data)

	case ConstructorEmojis:
		return UnmarshalEmojis(data)

	case ConstructorStickerSet:
		return UnmarshalStickerSet(data)

	case ConstructorStickerSetInfo:
		return UnmarshalStickerSetInfo(data)

	case ConstructorStickerSets:
		return UnmarshalStickerSets(data)

	case ConstructorTrendingStickerSets:
		return UnmarshalTrendingStickerSets(data)

	case ConstructorEmojiCategorySourceSearch:
		return UnmarshalEmojiCategorySourceSearch(data)

	case ConstructorEmojiCategorySourcePremium:
		return UnmarshalEmojiCategorySourcePremium(data)

	case ConstructorEmojiCategory:
		return UnmarshalEmojiCategory(data)

	case ConstructorEmojiCategories:
		return UnmarshalEmojiCategories(data)

	case ConstructorEmojiCategoryTypeDefault:
		return UnmarshalEmojiCategoryTypeDefault(data)

	case ConstructorEmojiCategoryTypeRegularStickers:
		return UnmarshalEmojiCategoryTypeRegularStickers(data)

	case ConstructorEmojiCategoryTypeEmojiStatus:
		return UnmarshalEmojiCategoryTypeEmojiStatus(data)

	case ConstructorEmojiCategoryTypeChatPhoto:
		return UnmarshalEmojiCategoryTypeChatPhoto(data)

	case ConstructorCurrentWeather:
		return UnmarshalCurrentWeather(data)

	case ConstructorStoryAreaPosition:
		return UnmarshalStoryAreaPosition(data)

	case ConstructorStoryAreaTypeLocation:
		return UnmarshalStoryAreaTypeLocation(data)

	case ConstructorStoryAreaTypeVenue:
		return UnmarshalStoryAreaTypeVenue(data)

	case ConstructorStoryAreaTypeSuggestedReaction:
		return UnmarshalStoryAreaTypeSuggestedReaction(data)

	case ConstructorStoryAreaTypeMessage:
		return UnmarshalStoryAreaTypeMessage(data)

	case ConstructorStoryAreaTypeLink:
		return UnmarshalStoryAreaTypeLink(data)

	case ConstructorStoryAreaTypeWeather:
		return UnmarshalStoryAreaTypeWeather(data)

	case ConstructorStoryAreaTypeUpgradedGift:
		return UnmarshalStoryAreaTypeUpgradedGift(data)

	case ConstructorStoryArea:
		return UnmarshalStoryArea(data)

	case ConstructorInputStoryAreaTypeLocation:
		return UnmarshalInputStoryAreaTypeLocation(data)

	case ConstructorInputStoryAreaTypeFoundVenue:
		return UnmarshalInputStoryAreaTypeFoundVenue(data)

	case ConstructorInputStoryAreaTypePreviousVenue:
		return UnmarshalInputStoryAreaTypePreviousVenue(data)

	case ConstructorInputStoryAreaTypeSuggestedReaction:
		return UnmarshalInputStoryAreaTypeSuggestedReaction(data)

	case ConstructorInputStoryAreaTypeMessage:
		return UnmarshalInputStoryAreaTypeMessage(data)

	case ConstructorInputStoryAreaTypeLink:
		return UnmarshalInputStoryAreaTypeLink(data)

	case ConstructorInputStoryAreaTypeWeather:
		return UnmarshalInputStoryAreaTypeWeather(data)

	case ConstructorInputStoryAreaTypeUpgradedGift:
		return UnmarshalInputStoryAreaTypeUpgradedGift(data)

	case ConstructorInputStoryArea:
		return UnmarshalInputStoryArea(data)

	case ConstructorInputStoryAreas:
		return UnmarshalInputStoryAreas(data)

	case ConstructorStoryVideo:
		return UnmarshalStoryVideo(data)

	case ConstructorStoryContentPhoto:
		return UnmarshalStoryContentPhoto(data)

	case ConstructorStoryContentVideo:
		return UnmarshalStoryContentVideo(data)

	case ConstructorStoryContentUnsupported:
		return UnmarshalStoryContentUnsupported(data)

	case ConstructorInputStoryContentPhoto:
		return UnmarshalInputStoryContentPhoto(data)

	case ConstructorInputStoryContentVideo:
		return UnmarshalInputStoryContentVideo(data)

	case ConstructorStoryListMain:
		return UnmarshalStoryListMain(data)

	case ConstructorStoryListArchive:
		return UnmarshalStoryListArchive(data)

	case ConstructorStoryOriginPublicStory:
		return UnmarshalStoryOriginPublicStory(data)

	case ConstructorStoryOriginHiddenUser:
		return UnmarshalStoryOriginHiddenUser(data)

	case ConstructorStoryRepostInfo:
		return UnmarshalStoryRepostInfo(data)

	case ConstructorStoryInteractionInfo:
		return UnmarshalStoryInteractionInfo(data)

	case ConstructorStory:
		return UnmarshalStory(data)

	case ConstructorStories:
		return UnmarshalStories(data)

	case ConstructorFoundStories:
		return UnmarshalFoundStories(data)

	case ConstructorStoryFullId:
		return UnmarshalStoryFullId(data)

	case ConstructorStoryInfo:
		return UnmarshalStoryInfo(data)

	case ConstructorChatActiveStories:
		return UnmarshalChatActiveStories(data)

	case ConstructorStoryInteractionTypeView:
		return UnmarshalStoryInteractionTypeView(data)

	case ConstructorStoryInteractionTypeForward:
		return UnmarshalStoryInteractionTypeForward(data)

	case ConstructorStoryInteractionTypeRepost:
		return UnmarshalStoryInteractionTypeRepost(data)

	case ConstructorStoryInteraction:
		return UnmarshalStoryInteraction(data)

	case ConstructorStoryInteractions:
		return UnmarshalStoryInteractions(data)

	case ConstructorQuickReplyMessage:
		return UnmarshalQuickReplyMessage(data)

	case ConstructorQuickReplyMessages:
		return UnmarshalQuickReplyMessages(data)

	case ConstructorQuickReplyShortcut:
		return UnmarshalQuickReplyShortcut(data)

	case ConstructorPublicForwardMessage:
		return UnmarshalPublicForwardMessage(data)

	case ConstructorPublicForwardStory:
		return UnmarshalPublicForwardStory(data)

	case ConstructorPublicForwards:
		return UnmarshalPublicForwards(data)

	case ConstructorBotMediaPreview:
		return UnmarshalBotMediaPreview(data)

	case ConstructorBotMediaPreviews:
		return UnmarshalBotMediaPreviews(data)

	case ConstructorBotMediaPreviewInfo:
		return UnmarshalBotMediaPreviewInfo(data)

	case ConstructorChatBoostLevelFeatures:
		return UnmarshalChatBoostLevelFeatures(data)

	case ConstructorChatBoostFeatures:
		return UnmarshalChatBoostFeatures(data)

	case ConstructorChatBoostSourceGiftCode:
		return UnmarshalChatBoostSourceGiftCode(data)

	case ConstructorChatBoostSourceGiveaway:
		return UnmarshalChatBoostSourceGiveaway(data)

	case ConstructorChatBoostSourcePremium:
		return UnmarshalChatBoostSourcePremium(data)

	case ConstructorPrepaidGiveaway:
		return UnmarshalPrepaidGiveaway(data)

	case ConstructorChatBoostStatus:
		return UnmarshalChatBoostStatus(data)

	case ConstructorChatBoost:
		return UnmarshalChatBoost(data)

	case ConstructorFoundChatBoosts:
		return UnmarshalFoundChatBoosts(data)

	case ConstructorChatBoostSlot:
		return UnmarshalChatBoostSlot(data)

	case ConstructorChatBoostSlots:
		return UnmarshalChatBoostSlots(data)

	case ConstructorResendCodeReasonUserRequest:
		return UnmarshalResendCodeReasonUserRequest(data)

	case ConstructorResendCodeReasonVerificationFailed:
		return UnmarshalResendCodeReasonVerificationFailed(data)

	case ConstructorCallDiscardReasonEmpty:
		return UnmarshalCallDiscardReasonEmpty(data)

	case ConstructorCallDiscardReasonMissed:
		return UnmarshalCallDiscardReasonMissed(data)

	case ConstructorCallDiscardReasonDeclined:
		return UnmarshalCallDiscardReasonDeclined(data)

	case ConstructorCallDiscardReasonDisconnected:
		return UnmarshalCallDiscardReasonDisconnected(data)

	case ConstructorCallDiscardReasonHungUp:
		return UnmarshalCallDiscardReasonHungUp(data)

	case ConstructorCallDiscardReasonAllowGroupCall:
		return UnmarshalCallDiscardReasonAllowGroupCall(data)

	case ConstructorCallProtocol:
		return UnmarshalCallProtocol(data)

	case ConstructorCallServerTypeTelegramReflector:
		return UnmarshalCallServerTypeTelegramReflector(data)

	case ConstructorCallServerTypeWebrtc:
		return UnmarshalCallServerTypeWebrtc(data)

	case ConstructorCallServer:
		return UnmarshalCallServer(data)

	case ConstructorCallId:
		return UnmarshalCallId(data)

	case ConstructorGroupCallId:
		return UnmarshalGroupCallId(data)

	case ConstructorCallStatePending:
		return UnmarshalCallStatePending(data)

	case ConstructorCallStateExchangingKeys:
		return UnmarshalCallStateExchangingKeys(data)

	case ConstructorCallStateReady:
		return UnmarshalCallStateReady(data)

	case ConstructorCallStateHangingUp:
		return UnmarshalCallStateHangingUp(data)

	case ConstructorCallStateDiscarded:
		return UnmarshalCallStateDiscarded(data)

	case ConstructorCallStateError:
		return UnmarshalCallStateError(data)

	case ConstructorGroupCallVideoQualityThumbnail:
		return UnmarshalGroupCallVideoQualityThumbnail(data)

	case ConstructorGroupCallVideoQualityMedium:
		return UnmarshalGroupCallVideoQualityMedium(data)

	case ConstructorGroupCallVideoQualityFull:
		return UnmarshalGroupCallVideoQualityFull(data)

	case ConstructorGroupCallStream:
		return UnmarshalGroupCallStream(data)

	case ConstructorGroupCallStreams:
		return UnmarshalGroupCallStreams(data)

	case ConstructorRtmpUrl:
		return UnmarshalRtmpUrl(data)

	case ConstructorGroupCallRecentSpeaker:
		return UnmarshalGroupCallRecentSpeaker(data)

	case ConstructorGroupCall:
		return UnmarshalGroupCall(data)

	case ConstructorGroupCallVideoSourceGroup:
		return UnmarshalGroupCallVideoSourceGroup(data)

	case ConstructorGroupCallParticipantVideoInfo:
		return UnmarshalGroupCallParticipantVideoInfo(data)

	case ConstructorGroupCallParticipant:
		return UnmarshalGroupCallParticipant(data)

	case ConstructorCallProblemEcho:
		return UnmarshalCallProblemEcho(data)

	case ConstructorCallProblemNoise:
		return UnmarshalCallProblemNoise(data)

	case ConstructorCallProblemInterruptions:
		return UnmarshalCallProblemInterruptions(data)

	case ConstructorCallProblemDistortedSpeech:
		return UnmarshalCallProblemDistortedSpeech(data)

	case ConstructorCallProblemSilentLocal:
		return UnmarshalCallProblemSilentLocal(data)

	case ConstructorCallProblemSilentRemote:
		return UnmarshalCallProblemSilentRemote(data)

	case ConstructorCallProblemDropped:
		return UnmarshalCallProblemDropped(data)

	case ConstructorCallProblemDistortedVideo:
		return UnmarshalCallProblemDistortedVideo(data)

	case ConstructorCallProblemPixelatedVideo:
		return UnmarshalCallProblemPixelatedVideo(data)

	case ConstructorCall:
		return UnmarshalCall(data)

	case ConstructorFirebaseAuthenticationSettingsAndroid:
		return UnmarshalFirebaseAuthenticationSettingsAndroid(data)

	case ConstructorFirebaseAuthenticationSettingsIos:
		return UnmarshalFirebaseAuthenticationSettingsIos(data)

	case ConstructorPhoneNumberAuthenticationSettings:
		return UnmarshalPhoneNumberAuthenticationSettings(data)

	case ConstructorAddedReaction:
		return UnmarshalAddedReaction(data)

	case ConstructorAddedReactions:
		return UnmarshalAddedReactions(data)

	case ConstructorAvailableReaction:
		return UnmarshalAvailableReaction(data)

	case ConstructorAvailableReactions:
		return UnmarshalAvailableReactions(data)

	case ConstructorEmojiReaction:
		return UnmarshalEmojiReaction(data)

	case ConstructorReactionUnavailabilityReasonAnonymousAdministrator:
		return UnmarshalReactionUnavailabilityReasonAnonymousAdministrator(data)

	case ConstructorReactionUnavailabilityReasonGuest:
		return UnmarshalReactionUnavailabilityReasonGuest(data)

	case ConstructorAnimations:
		return UnmarshalAnimations(data)

	case ConstructorDiceStickersRegular:
		return UnmarshalDiceStickersRegular(data)

	case ConstructorDiceStickersSlotMachine:
		return UnmarshalDiceStickersSlotMachine(data)

	case ConstructorImportedContacts:
		return UnmarshalImportedContacts(data)

	case ConstructorSpeechRecognitionResultPending:
		return UnmarshalSpeechRecognitionResultPending(data)

	case ConstructorSpeechRecognitionResultText:
		return UnmarshalSpeechRecognitionResultText(data)

	case ConstructorSpeechRecognitionResultError:
		return UnmarshalSpeechRecognitionResultError(data)

	case ConstructorBusinessConnection:
		return UnmarshalBusinessConnection(data)

	case ConstructorAttachmentMenuBotColor:
		return UnmarshalAttachmentMenuBotColor(data)

	case ConstructorAttachmentMenuBot:
		return UnmarshalAttachmentMenuBot(data)

	case ConstructorSentWebAppMessage:
		return UnmarshalSentWebAppMessage(data)

	case ConstructorBotWriteAccessAllowReasonConnectedWebsite:
		return UnmarshalBotWriteAccessAllowReasonConnectedWebsite(data)

	case ConstructorBotWriteAccessAllowReasonAddedToAttachmentMenu:
		return UnmarshalBotWriteAccessAllowReasonAddedToAttachmentMenu(data)

	case ConstructorBotWriteAccessAllowReasonLaunchedWebApp:
		return UnmarshalBotWriteAccessAllowReasonLaunchedWebApp(data)

	case ConstructorBotWriteAccessAllowReasonAcceptedRequest:
		return UnmarshalBotWriteAccessAllowReasonAcceptedRequest(data)

	case ConstructorHttpUrl:
		return UnmarshalHttpUrl(data)

	case ConstructorUserLink:
		return UnmarshalUserLink(data)

	case ConstructorTargetChatTypes:
		return UnmarshalTargetChatTypes(data)

	case ConstructorTargetChatCurrent:
		return UnmarshalTargetChatCurrent(data)

	case ConstructorTargetChatChosen:
		return UnmarshalTargetChatChosen(data)

	case ConstructorTargetChatInternalLink:
		return UnmarshalTargetChatInternalLink(data)

	case ConstructorInputInlineQueryResultAnimation:
		return UnmarshalInputInlineQueryResultAnimation(data)

	case ConstructorInputInlineQueryResultArticle:
		return UnmarshalInputInlineQueryResultArticle(data)

	case ConstructorInputInlineQueryResultAudio:
		return UnmarshalInputInlineQueryResultAudio(data)

	case ConstructorInputInlineQueryResultContact:
		return UnmarshalInputInlineQueryResultContact(data)

	case ConstructorInputInlineQueryResultDocument:
		return UnmarshalInputInlineQueryResultDocument(data)

	case ConstructorInputInlineQueryResultGame:
		return UnmarshalInputInlineQueryResultGame(data)

	case ConstructorInputInlineQueryResultLocation:
		return UnmarshalInputInlineQueryResultLocation(data)

	case ConstructorInputInlineQueryResultPhoto:
		return UnmarshalInputInlineQueryResultPhoto(data)

	case ConstructorInputInlineQueryResultSticker:
		return UnmarshalInputInlineQueryResultSticker(data)

	case ConstructorInputInlineQueryResultVenue:
		return UnmarshalInputInlineQueryResultVenue(data)

	case ConstructorInputInlineQueryResultVideo:
		return UnmarshalInputInlineQueryResultVideo(data)

	case ConstructorInputInlineQueryResultVoiceNote:
		return UnmarshalInputInlineQueryResultVoiceNote(data)

	case ConstructorInlineQueryResultArticle:
		return UnmarshalInlineQueryResultArticle(data)

	case ConstructorInlineQueryResultContact:
		return UnmarshalInlineQueryResultContact(data)

	case ConstructorInlineQueryResultLocation:
		return UnmarshalInlineQueryResultLocation(data)

	case ConstructorInlineQueryResultVenue:
		return UnmarshalInlineQueryResultVenue(data)

	case ConstructorInlineQueryResultGame:
		return UnmarshalInlineQueryResultGame(data)

	case ConstructorInlineQueryResultAnimation:
		return UnmarshalInlineQueryResultAnimation(data)

	case ConstructorInlineQueryResultAudio:
		return UnmarshalInlineQueryResultAudio(data)

	case ConstructorInlineQueryResultDocument:
		return UnmarshalInlineQueryResultDocument(data)

	case ConstructorInlineQueryResultPhoto:
		return UnmarshalInlineQueryResultPhoto(data)

	case ConstructorInlineQueryResultSticker:
		return UnmarshalInlineQueryResultSticker(data)

	case ConstructorInlineQueryResultVideo:
		return UnmarshalInlineQueryResultVideo(data)

	case ConstructorInlineQueryResultVoiceNote:
		return UnmarshalInlineQueryResultVoiceNote(data)

	case ConstructorInlineQueryResultsButtonTypeStartBot:
		return UnmarshalInlineQueryResultsButtonTypeStartBot(data)

	case ConstructorInlineQueryResultsButtonTypeWebApp:
		return UnmarshalInlineQueryResultsButtonTypeWebApp(data)

	case ConstructorInlineQueryResultsButton:
		return UnmarshalInlineQueryResultsButton(data)

	case ConstructorInlineQueryResults:
		return UnmarshalInlineQueryResults(data)

	case ConstructorPreparedInlineMessageId:
		return UnmarshalPreparedInlineMessageId(data)

	case ConstructorPreparedInlineMessage:
		return UnmarshalPreparedInlineMessage(data)

	case ConstructorCallbackQueryPayloadData:
		return UnmarshalCallbackQueryPayloadData(data)

	case ConstructorCallbackQueryPayloadDataWithPassword:
		return UnmarshalCallbackQueryPayloadDataWithPassword(data)

	case ConstructorCallbackQueryPayloadGame:
		return UnmarshalCallbackQueryPayloadGame(data)

	case ConstructorCallbackQueryAnswer:
		return UnmarshalCallbackQueryAnswer(data)

	case ConstructorCustomRequestResult:
		return UnmarshalCustomRequestResult(data)

	case ConstructorGameHighScore:
		return UnmarshalGameHighScore(data)

	case ConstructorGameHighScores:
		return UnmarshalGameHighScores(data)

	case ConstructorChatEventMessageEdited:
		return UnmarshalChatEventMessageEdited(data)

	case ConstructorChatEventMessageDeleted:
		return UnmarshalChatEventMessageDeleted(data)

	case ConstructorChatEventMessagePinned:
		return UnmarshalChatEventMessagePinned(data)

	case ConstructorChatEventMessageUnpinned:
		return UnmarshalChatEventMessageUnpinned(data)

	case ConstructorChatEventPollStopped:
		return UnmarshalChatEventPollStopped(data)

	case ConstructorChatEventMemberJoined:
		return UnmarshalChatEventMemberJoined(data)

	case ConstructorChatEventMemberJoinedByInviteLink:
		return UnmarshalChatEventMemberJoinedByInviteLink(data)

	case ConstructorChatEventMemberJoinedByRequest:
		return UnmarshalChatEventMemberJoinedByRequest(data)

	case ConstructorChatEventMemberInvited:
		return UnmarshalChatEventMemberInvited(data)

	case ConstructorChatEventMemberLeft:
		return UnmarshalChatEventMemberLeft(data)

	case ConstructorChatEventMemberPromoted:
		return UnmarshalChatEventMemberPromoted(data)

	case ConstructorChatEventMemberRestricted:
		return UnmarshalChatEventMemberRestricted(data)

	case ConstructorChatEventMemberSubscriptionExtended:
		return UnmarshalChatEventMemberSubscriptionExtended(data)

	case ConstructorChatEventAvailableReactionsChanged:
		return UnmarshalChatEventAvailableReactionsChanged(data)

	case ConstructorChatEventBackgroundChanged:
		return UnmarshalChatEventBackgroundChanged(data)

	case ConstructorChatEventDescriptionChanged:
		return UnmarshalChatEventDescriptionChanged(data)

	case ConstructorChatEventEmojiStatusChanged:
		return UnmarshalChatEventEmojiStatusChanged(data)

	case ConstructorChatEventLinkedChatChanged:
		return UnmarshalChatEventLinkedChatChanged(data)

	case ConstructorChatEventLocationChanged:
		return UnmarshalChatEventLocationChanged(data)

	case ConstructorChatEventMessageAutoDeleteTimeChanged:
		return UnmarshalChatEventMessageAutoDeleteTimeChanged(data)

	case ConstructorChatEventPermissionsChanged:
		return UnmarshalChatEventPermissionsChanged(data)

	case ConstructorChatEventPhotoChanged:
		return UnmarshalChatEventPhotoChanged(data)

	case ConstructorChatEventSlowModeDelayChanged:
		return UnmarshalChatEventSlowModeDelayChanged(data)

	case ConstructorChatEventStickerSetChanged:
		return UnmarshalChatEventStickerSetChanged(data)

	case ConstructorChatEventCustomEmojiStickerSetChanged:
		return UnmarshalChatEventCustomEmojiStickerSetChanged(data)

	case ConstructorChatEventTitleChanged:
		return UnmarshalChatEventTitleChanged(data)

	case ConstructorChatEventUsernameChanged:
		return UnmarshalChatEventUsernameChanged(data)

	case ConstructorChatEventActiveUsernamesChanged:
		return UnmarshalChatEventActiveUsernamesChanged(data)

	case ConstructorChatEventAccentColorChanged:
		return UnmarshalChatEventAccentColorChanged(data)

	case ConstructorChatEventProfileAccentColorChanged:
		return UnmarshalChatEventProfileAccentColorChanged(data)

	case ConstructorChatEventHasProtectedContentToggled:
		return UnmarshalChatEventHasProtectedContentToggled(data)

	case ConstructorChatEventInvitesToggled:
		return UnmarshalChatEventInvitesToggled(data)

	case ConstructorChatEventIsAllHistoryAvailableToggled:
		return UnmarshalChatEventIsAllHistoryAvailableToggled(data)

	case ConstructorChatEventHasAggressiveAntiSpamEnabledToggled:
		return UnmarshalChatEventHasAggressiveAntiSpamEnabledToggled(data)

	case ConstructorChatEventSignMessagesToggled:
		return UnmarshalChatEventSignMessagesToggled(data)

	case ConstructorChatEventShowMessageSenderToggled:
		return UnmarshalChatEventShowMessageSenderToggled(data)

	case ConstructorChatEventInviteLinkEdited:
		return UnmarshalChatEventInviteLinkEdited(data)

	case ConstructorChatEventInviteLinkRevoked:
		return UnmarshalChatEventInviteLinkRevoked(data)

	case ConstructorChatEventInviteLinkDeleted:
		return UnmarshalChatEventInviteLinkDeleted(data)

	case ConstructorChatEventVideoChatCreated:
		return UnmarshalChatEventVideoChatCreated(data)

	case ConstructorChatEventVideoChatEnded:
		return UnmarshalChatEventVideoChatEnded(data)

	case ConstructorChatEventVideoChatMuteNewParticipantsToggled:
		return UnmarshalChatEventVideoChatMuteNewParticipantsToggled(data)

	case ConstructorChatEventVideoChatParticipantIsMutedToggled:
		return UnmarshalChatEventVideoChatParticipantIsMutedToggled(data)

	case ConstructorChatEventVideoChatParticipantVolumeLevelChanged:
		return UnmarshalChatEventVideoChatParticipantVolumeLevelChanged(data)

	case ConstructorChatEventIsForumToggled:
		return UnmarshalChatEventIsForumToggled(data)

	case ConstructorChatEventForumTopicCreated:
		return UnmarshalChatEventForumTopicCreated(data)

	case ConstructorChatEventForumTopicEdited:
		return UnmarshalChatEventForumTopicEdited(data)

	case ConstructorChatEventForumTopicToggleIsClosed:
		return UnmarshalChatEventForumTopicToggleIsClosed(data)

	case ConstructorChatEventForumTopicToggleIsHidden:
		return UnmarshalChatEventForumTopicToggleIsHidden(data)

	case ConstructorChatEventForumTopicDeleted:
		return UnmarshalChatEventForumTopicDeleted(data)

	case ConstructorChatEventForumTopicPinned:
		return UnmarshalChatEventForumTopicPinned(data)

	case ConstructorChatEvent:
		return UnmarshalChatEvent(data)

	case ConstructorChatEvents:
		return UnmarshalChatEvents(data)

	case ConstructorChatEventLogFilters:
		return UnmarshalChatEventLogFilters(data)

	case ConstructorLanguagePackStringValueOrdinary:
		return UnmarshalLanguagePackStringValueOrdinary(data)

	case ConstructorLanguagePackStringValuePluralized:
		return UnmarshalLanguagePackStringValuePluralized(data)

	case ConstructorLanguagePackStringValueDeleted:
		return UnmarshalLanguagePackStringValueDeleted(data)

	case ConstructorLanguagePackString:
		return UnmarshalLanguagePackString(data)

	case ConstructorLanguagePackStrings:
		return UnmarshalLanguagePackStrings(data)

	case ConstructorLanguagePackInfo:
		return UnmarshalLanguagePackInfo(data)

	case ConstructorLocalizationTargetInfo:
		return UnmarshalLocalizationTargetInfo(data)

	case ConstructorPremiumLimitTypeSupergroupCount:
		return UnmarshalPremiumLimitTypeSupergroupCount(data)

	case ConstructorPremiumLimitTypePinnedChatCount:
		return UnmarshalPremiumLimitTypePinnedChatCount(data)

	case ConstructorPremiumLimitTypeCreatedPublicChatCount:
		return UnmarshalPremiumLimitTypeCreatedPublicChatCount(data)

	case ConstructorPremiumLimitTypeSavedAnimationCount:
		return UnmarshalPremiumLimitTypeSavedAnimationCount(data)

	case ConstructorPremiumLimitTypeFavoriteStickerCount:
		return UnmarshalPremiumLimitTypeFavoriteStickerCount(data)

	case ConstructorPremiumLimitTypeChatFolderCount:
		return UnmarshalPremiumLimitTypeChatFolderCount(data)

	case ConstructorPremiumLimitTypeChatFolderChosenChatCount:
		return UnmarshalPremiumLimitTypeChatFolderChosenChatCount(data)

	case ConstructorPremiumLimitTypePinnedArchivedChatCount:
		return UnmarshalPremiumLimitTypePinnedArchivedChatCount(data)

	case ConstructorPremiumLimitTypePinnedSavedMessagesTopicCount:
		return UnmarshalPremiumLimitTypePinnedSavedMessagesTopicCount(data)

	case ConstructorPremiumLimitTypeCaptionLength:
		return UnmarshalPremiumLimitTypeCaptionLength(data)

	case ConstructorPremiumLimitTypeBioLength:
		return UnmarshalPremiumLimitTypeBioLength(data)

	case ConstructorPremiumLimitTypeChatFolderInviteLinkCount:
		return UnmarshalPremiumLimitTypeChatFolderInviteLinkCount(data)

	case ConstructorPremiumLimitTypeShareableChatFolderCount:
		return UnmarshalPremiumLimitTypeShareableChatFolderCount(data)

	case ConstructorPremiumLimitTypeActiveStoryCount:
		return UnmarshalPremiumLimitTypeActiveStoryCount(data)

	case ConstructorPremiumLimitTypeWeeklySentStoryCount:
		return UnmarshalPremiumLimitTypeWeeklySentStoryCount(data)

	case ConstructorPremiumLimitTypeMonthlySentStoryCount:
		return UnmarshalPremiumLimitTypeMonthlySentStoryCount(data)

	case ConstructorPremiumLimitTypeStoryCaptionLength:
		return UnmarshalPremiumLimitTypeStoryCaptionLength(data)

	case ConstructorPremiumLimitTypeStorySuggestedReactionAreaCount:
		return UnmarshalPremiumLimitTypeStorySuggestedReactionAreaCount(data)

	case ConstructorPremiumLimitTypeSimilarChatCount:
		return UnmarshalPremiumLimitTypeSimilarChatCount(data)

	case ConstructorPremiumFeatureIncreasedLimits:
		return UnmarshalPremiumFeatureIncreasedLimits(data)

	case ConstructorPremiumFeatureIncreasedUploadFileSize:
		return UnmarshalPremiumFeatureIncreasedUploadFileSize(data)

	case ConstructorPremiumFeatureImprovedDownloadSpeed:
		return UnmarshalPremiumFeatureImprovedDownloadSpeed(data)

	case ConstructorPremiumFeatureVoiceRecognition:
		return UnmarshalPremiumFeatureVoiceRecognition(data)

	case ConstructorPremiumFeatureDisabledAds:
		return UnmarshalPremiumFeatureDisabledAds(data)

	case ConstructorPremiumFeatureUniqueReactions:
		return UnmarshalPremiumFeatureUniqueReactions(data)

	case ConstructorPremiumFeatureUniqueStickers:
		return UnmarshalPremiumFeatureUniqueStickers(data)

	case ConstructorPremiumFeatureCustomEmoji:
		return UnmarshalPremiumFeatureCustomEmoji(data)

	case ConstructorPremiumFeatureAdvancedChatManagement:
		return UnmarshalPremiumFeatureAdvancedChatManagement(data)

	case ConstructorPremiumFeatureProfileBadge:
		return UnmarshalPremiumFeatureProfileBadge(data)

	case ConstructorPremiumFeatureEmojiStatus:
		return UnmarshalPremiumFeatureEmojiStatus(data)

	case ConstructorPremiumFeatureAnimatedProfilePhoto:
		return UnmarshalPremiumFeatureAnimatedProfilePhoto(data)

	case ConstructorPremiumFeatureForumTopicIcon:
		return UnmarshalPremiumFeatureForumTopicIcon(data)

	case ConstructorPremiumFeatureAppIcons:
		return UnmarshalPremiumFeatureAppIcons(data)

	case ConstructorPremiumFeatureRealTimeChatTranslation:
		return UnmarshalPremiumFeatureRealTimeChatTranslation(data)

	case ConstructorPremiumFeatureUpgradedStories:
		return UnmarshalPremiumFeatureUpgradedStories(data)

	case ConstructorPremiumFeatureChatBoost:
		return UnmarshalPremiumFeatureChatBoost(data)

	case ConstructorPremiumFeatureAccentColor:
		return UnmarshalPremiumFeatureAccentColor(data)

	case ConstructorPremiumFeatureBackgroundForBoth:
		return UnmarshalPremiumFeatureBackgroundForBoth(data)

	case ConstructorPremiumFeatureSavedMessagesTags:
		return UnmarshalPremiumFeatureSavedMessagesTags(data)

	case ConstructorPremiumFeatureMessagePrivacy:
		return UnmarshalPremiumFeatureMessagePrivacy(data)

	case ConstructorPremiumFeatureLastSeenTimes:
		return UnmarshalPremiumFeatureLastSeenTimes(data)

	case ConstructorPremiumFeatureBusiness:
		return UnmarshalPremiumFeatureBusiness(data)

	case ConstructorPremiumFeatureMessageEffects:
		return UnmarshalPremiumFeatureMessageEffects(data)

	case ConstructorBusinessFeatureLocation:
		return UnmarshalBusinessFeatureLocation(data)

	case ConstructorBusinessFeatureOpeningHours:
		return UnmarshalBusinessFeatureOpeningHours(data)

	case ConstructorBusinessFeatureQuickReplies:
		return UnmarshalBusinessFeatureQuickReplies(data)

	case ConstructorBusinessFeatureGreetingMessage:
		return UnmarshalBusinessFeatureGreetingMessage(data)

	case ConstructorBusinessFeatureAwayMessage:
		return UnmarshalBusinessFeatureAwayMessage(data)

	case ConstructorBusinessFeatureAccountLinks:
		return UnmarshalBusinessFeatureAccountLinks(data)

	case ConstructorBusinessFeatureStartPage:
		return UnmarshalBusinessFeatureStartPage(data)

	case ConstructorBusinessFeatureBots:
		return UnmarshalBusinessFeatureBots(data)

	case ConstructorBusinessFeatureEmojiStatus:
		return UnmarshalBusinessFeatureEmojiStatus(data)

	case ConstructorBusinessFeatureChatFolderTags:
		return UnmarshalBusinessFeatureChatFolderTags(data)

	case ConstructorBusinessFeatureUpgradedStories:
		return UnmarshalBusinessFeatureUpgradedStories(data)

	case ConstructorPremiumStoryFeaturePriorityOrder:
		return UnmarshalPremiumStoryFeaturePriorityOrder(data)

	case ConstructorPremiumStoryFeatureStealthMode:
		return UnmarshalPremiumStoryFeatureStealthMode(data)

	case ConstructorPremiumStoryFeaturePermanentViewsHistory:
		return UnmarshalPremiumStoryFeaturePermanentViewsHistory(data)

	case ConstructorPremiumStoryFeatureCustomExpirationDuration:
		return UnmarshalPremiumStoryFeatureCustomExpirationDuration(data)

	case ConstructorPremiumStoryFeatureSaveStories:
		return UnmarshalPremiumStoryFeatureSaveStories(data)

	case ConstructorPremiumStoryFeatureLinksAndFormatting:
		return UnmarshalPremiumStoryFeatureLinksAndFormatting(data)

	case ConstructorPremiumStoryFeatureVideoQuality:
		return UnmarshalPremiumStoryFeatureVideoQuality(data)

	case ConstructorPremiumLimit:
		return UnmarshalPremiumLimit(data)

	case ConstructorPremiumFeatures:
		return UnmarshalPremiumFeatures(data)

	case ConstructorBusinessFeatures:
		return UnmarshalBusinessFeatures(data)

	case ConstructorPremiumSourceLimitExceeded:
		return UnmarshalPremiumSourceLimitExceeded(data)

	case ConstructorPremiumSourceFeature:
		return UnmarshalPremiumSourceFeature(data)

	case ConstructorPremiumSourceBusinessFeature:
		return UnmarshalPremiumSourceBusinessFeature(data)

	case ConstructorPremiumSourceStoryFeature:
		return UnmarshalPremiumSourceStoryFeature(data)

	case ConstructorPremiumSourceLink:
		return UnmarshalPremiumSourceLink(data)

	case ConstructorPremiumSourceSettings:
		return UnmarshalPremiumSourceSettings(data)

	case ConstructorPremiumFeaturePromotionAnimation:
		return UnmarshalPremiumFeaturePromotionAnimation(data)

	case ConstructorBusinessFeaturePromotionAnimation:
		return UnmarshalBusinessFeaturePromotionAnimation(data)

	case ConstructorPremiumState:
		return UnmarshalPremiumState(data)

	case ConstructorStorePaymentPurposePremiumSubscription:
		return UnmarshalStorePaymentPurposePremiumSubscription(data)

	case ConstructorStorePaymentPurposePremiumGift:
		return UnmarshalStorePaymentPurposePremiumGift(data)

	case ConstructorStorePaymentPurposePremiumGiftCodes:
		return UnmarshalStorePaymentPurposePremiumGiftCodes(data)

	case ConstructorStorePaymentPurposePremiumGiveaway:
		return UnmarshalStorePaymentPurposePremiumGiveaway(data)

	case ConstructorStorePaymentPurposeStarGiveaway:
		return UnmarshalStorePaymentPurposeStarGiveaway(data)

	case ConstructorStorePaymentPurposeStars:
		return UnmarshalStorePaymentPurposeStars(data)

	case ConstructorStorePaymentPurposeGiftedStars:
		return UnmarshalStorePaymentPurposeGiftedStars(data)

	case ConstructorStoreTransactionAppStore:
		return UnmarshalStoreTransactionAppStore(data)

	case ConstructorStoreTransactionGooglePlay:
		return UnmarshalStoreTransactionGooglePlay(data)

	case ConstructorTelegramPaymentPurposePremiumGift:
		return UnmarshalTelegramPaymentPurposePremiumGift(data)

	case ConstructorTelegramPaymentPurposePremiumGiftCodes:
		return UnmarshalTelegramPaymentPurposePremiumGiftCodes(data)

	case ConstructorTelegramPaymentPurposePremiumGiveaway:
		return UnmarshalTelegramPaymentPurposePremiumGiveaway(data)

	case ConstructorTelegramPaymentPurposeStars:
		return UnmarshalTelegramPaymentPurposeStars(data)

	case ConstructorTelegramPaymentPurposeGiftedStars:
		return UnmarshalTelegramPaymentPurposeGiftedStars(data)

	case ConstructorTelegramPaymentPurposeStarGiveaway:
		return UnmarshalTelegramPaymentPurposeStarGiveaway(data)

	case ConstructorTelegramPaymentPurposeJoinChat:
		return UnmarshalTelegramPaymentPurposeJoinChat(data)

	case ConstructorDeviceTokenFirebaseCloudMessaging:
		return UnmarshalDeviceTokenFirebaseCloudMessaging(data)

	case ConstructorDeviceTokenApplePush:
		return UnmarshalDeviceTokenApplePush(data)

	case ConstructorDeviceTokenApplePushVoIP:
		return UnmarshalDeviceTokenApplePushVoIP(data)

	case ConstructorDeviceTokenWindowsPush:
		return UnmarshalDeviceTokenWindowsPush(data)

	case ConstructorDeviceTokenMicrosoftPush:
		return UnmarshalDeviceTokenMicrosoftPush(data)

	case ConstructorDeviceTokenMicrosoftPushVoIP:
		return UnmarshalDeviceTokenMicrosoftPushVoIP(data)

	case ConstructorDeviceTokenWebPush:
		return UnmarshalDeviceTokenWebPush(data)

	case ConstructorDeviceTokenSimplePush:
		return UnmarshalDeviceTokenSimplePush(data)

	case ConstructorDeviceTokenUbuntuPush:
		return UnmarshalDeviceTokenUbuntuPush(data)

	case ConstructorDeviceTokenBlackBerryPush:
		return UnmarshalDeviceTokenBlackBerryPush(data)

	case ConstructorDeviceTokenTizenPush:
		return UnmarshalDeviceTokenTizenPush(data)

	case ConstructorDeviceTokenHuaweiPush:
		return UnmarshalDeviceTokenHuaweiPush(data)

	case ConstructorPushReceiverId:
		return UnmarshalPushReceiverId(data)

	case ConstructorBackgroundFillSolid:
		return UnmarshalBackgroundFillSolid(data)

	case ConstructorBackgroundFillGradient:
		return UnmarshalBackgroundFillGradient(data)

	case ConstructorBackgroundFillFreeformGradient:
		return UnmarshalBackgroundFillFreeformGradient(data)

	case ConstructorBackgroundTypeWallpaper:
		return UnmarshalBackgroundTypeWallpaper(data)

	case ConstructorBackgroundTypePattern:
		return UnmarshalBackgroundTypePattern(data)

	case ConstructorBackgroundTypeFill:
		return UnmarshalBackgroundTypeFill(data)

	case ConstructorBackgroundTypeChatTheme:
		return UnmarshalBackgroundTypeChatTheme(data)

	case ConstructorInputBackgroundLocal:
		return UnmarshalInputBackgroundLocal(data)

	case ConstructorInputBackgroundRemote:
		return UnmarshalInputBackgroundRemote(data)

	case ConstructorInputBackgroundPrevious:
		return UnmarshalInputBackgroundPrevious(data)

	case ConstructorChatTheme:
		return UnmarshalChatTheme(data)

	case ConstructorTimeZone:
		return UnmarshalTimeZone(data)

	case ConstructorTimeZones:
		return UnmarshalTimeZones(data)

	case ConstructorHashtags:
		return UnmarshalHashtags(data)

	case ConstructorCanSendStoryResultOk:
		return UnmarshalCanSendStoryResultOk(data)

	case ConstructorCanSendStoryResultPremiumNeeded:
		return UnmarshalCanSendStoryResultPremiumNeeded(data)

	case ConstructorCanSendStoryResultBoostNeeded:
		return UnmarshalCanSendStoryResultBoostNeeded(data)

	case ConstructorCanSendStoryResultActiveStoryLimitExceeded:
		return UnmarshalCanSendStoryResultActiveStoryLimitExceeded(data)

	case ConstructorCanSendStoryResultWeeklyLimitExceeded:
		return UnmarshalCanSendStoryResultWeeklyLimitExceeded(data)

	case ConstructorCanSendStoryResultMonthlyLimitExceeded:
		return UnmarshalCanSendStoryResultMonthlyLimitExceeded(data)

	case ConstructorCanTransferOwnershipResultOk:
		return UnmarshalCanTransferOwnershipResultOk(data)

	case ConstructorCanTransferOwnershipResultPasswordNeeded:
		return UnmarshalCanTransferOwnershipResultPasswordNeeded(data)

	case ConstructorCanTransferOwnershipResultPasswordTooFresh:
		return UnmarshalCanTransferOwnershipResultPasswordTooFresh(data)

	case ConstructorCanTransferOwnershipResultSessionTooFresh:
		return UnmarshalCanTransferOwnershipResultSessionTooFresh(data)

	case ConstructorCheckChatUsernameResultOk:
		return UnmarshalCheckChatUsernameResultOk(data)

	case ConstructorCheckChatUsernameResultUsernameInvalid:
		return UnmarshalCheckChatUsernameResultUsernameInvalid(data)

	case ConstructorCheckChatUsernameResultUsernameOccupied:
		return UnmarshalCheckChatUsernameResultUsernameOccupied(data)

	case ConstructorCheckChatUsernameResultUsernamePurchasable:
		return UnmarshalCheckChatUsernameResultUsernamePurchasable(data)

	case ConstructorCheckChatUsernameResultPublicChatsTooMany:
		return UnmarshalCheckChatUsernameResultPublicChatsTooMany(data)

	case ConstructorCheckChatUsernameResultPublicGroupsUnavailable:
		return UnmarshalCheckChatUsernameResultPublicGroupsUnavailable(data)

	case ConstructorCheckStickerSetNameResultOk:
		return UnmarshalCheckStickerSetNameResultOk(data)

	case ConstructorCheckStickerSetNameResultNameInvalid:
		return UnmarshalCheckStickerSetNameResultNameInvalid(data)

	case ConstructorCheckStickerSetNameResultNameOccupied:
		return UnmarshalCheckStickerSetNameResultNameOccupied(data)

	case ConstructorResetPasswordResultOk:
		return UnmarshalResetPasswordResultOk(data)

	case ConstructorResetPasswordResultPending:
		return UnmarshalResetPasswordResultPending(data)

	case ConstructorResetPasswordResultDeclined:
		return UnmarshalResetPasswordResultDeclined(data)

	case ConstructorMessageFileTypePrivate:
		return UnmarshalMessageFileTypePrivate(data)

	case ConstructorMessageFileTypeGroup:
		return UnmarshalMessageFileTypeGroup(data)

	case ConstructorMessageFileTypeUnknown:
		return UnmarshalMessageFileTypeUnknown(data)

	case ConstructorPushMessageContentHidden:
		return UnmarshalPushMessageContentHidden(data)

	case ConstructorPushMessageContentAnimation:
		return UnmarshalPushMessageContentAnimation(data)

	case ConstructorPushMessageContentAudio:
		return UnmarshalPushMessageContentAudio(data)

	case ConstructorPushMessageContentContact:
		return UnmarshalPushMessageContentContact(data)

	case ConstructorPushMessageContentContactRegistered:
		return UnmarshalPushMessageContentContactRegistered(data)

	case ConstructorPushMessageContentDocument:
		return UnmarshalPushMessageContentDocument(data)

	case ConstructorPushMessageContentGame:
		return UnmarshalPushMessageContentGame(data)

	case ConstructorPushMessageContentGameScore:
		return UnmarshalPushMessageContentGameScore(data)

	case ConstructorPushMessageContentInvoice:
		return UnmarshalPushMessageContentInvoice(data)

	case ConstructorPushMessageContentLocation:
		return UnmarshalPushMessageContentLocation(data)

	case ConstructorPushMessageContentPaidMedia:
		return UnmarshalPushMessageContentPaidMedia(data)

	case ConstructorPushMessageContentPhoto:
		return UnmarshalPushMessageContentPhoto(data)

	case ConstructorPushMessageContentPoll:
		return UnmarshalPushMessageContentPoll(data)

	case ConstructorPushMessageContentPremiumGiftCode:
		return UnmarshalPushMessageContentPremiumGiftCode(data)

	case ConstructorPushMessageContentGiveaway:
		return UnmarshalPushMessageContentGiveaway(data)

	case ConstructorPushMessageContentGift:
		return UnmarshalPushMessageContentGift(data)

	case ConstructorPushMessageContentUpgradedGift:
		return UnmarshalPushMessageContentUpgradedGift(data)

	case ConstructorPushMessageContentScreenshotTaken:
		return UnmarshalPushMessageContentScreenshotTaken(data)

	case ConstructorPushMessageContentSticker:
		return UnmarshalPushMessageContentSticker(data)

	case ConstructorPushMessageContentStory:
		return UnmarshalPushMessageContentStory(data)

	case ConstructorPushMessageContentText:
		return UnmarshalPushMessageContentText(data)

	case ConstructorPushMessageContentVideo:
		return UnmarshalPushMessageContentVideo(data)

	case ConstructorPushMessageContentVideoNote:
		return UnmarshalPushMessageContentVideoNote(data)

	case ConstructorPushMessageContentVoiceNote:
		return UnmarshalPushMessageContentVoiceNote(data)

	case ConstructorPushMessageContentBasicGroupChatCreate:
		return UnmarshalPushMessageContentBasicGroupChatCreate(data)

	case ConstructorPushMessageContentVideoChatStarted:
		return UnmarshalPushMessageContentVideoChatStarted(data)

	case ConstructorPushMessageContentVideoChatEnded:
		return UnmarshalPushMessageContentVideoChatEnded(data)

	case ConstructorPushMessageContentInviteVideoChatParticipants:
		return UnmarshalPushMessageContentInviteVideoChatParticipants(data)

	case ConstructorPushMessageContentChatAddMembers:
		return UnmarshalPushMessageContentChatAddMembers(data)

	case ConstructorPushMessageContentChatChangePhoto:
		return UnmarshalPushMessageContentChatChangePhoto(data)

	case ConstructorPushMessageContentChatChangeTitle:
		return UnmarshalPushMessageContentChatChangeTitle(data)

	case ConstructorPushMessageContentChatSetBackground:
		return UnmarshalPushMessageContentChatSetBackground(data)

	case ConstructorPushMessageContentChatSetTheme:
		return UnmarshalPushMessageContentChatSetTheme(data)

	case ConstructorPushMessageContentChatDeleteMember:
		return UnmarshalPushMessageContentChatDeleteMember(data)

	case ConstructorPushMessageContentChatJoinByLink:
		return UnmarshalPushMessageContentChatJoinByLink(data)

	case ConstructorPushMessageContentChatJoinByRequest:
		return UnmarshalPushMessageContentChatJoinByRequest(data)

	case ConstructorPushMessageContentRecurringPayment:
		return UnmarshalPushMessageContentRecurringPayment(data)

	case ConstructorPushMessageContentSuggestProfilePhoto:
		return UnmarshalPushMessageContentSuggestProfilePhoto(data)

	case ConstructorPushMessageContentProximityAlertTriggered:
		return UnmarshalPushMessageContentProximityAlertTriggered(data)

	case ConstructorPushMessageContentMessageForwards:
		return UnmarshalPushMessageContentMessageForwards(data)

	case ConstructorPushMessageContentMediaAlbum:
		return UnmarshalPushMessageContentMediaAlbum(data)

	case ConstructorNotificationTypeNewMessage:
		return UnmarshalNotificationTypeNewMessage(data)

	case ConstructorNotificationTypeNewSecretChat:
		return UnmarshalNotificationTypeNewSecretChat(data)

	case ConstructorNotificationTypeNewCall:
		return UnmarshalNotificationTypeNewCall(data)

	case ConstructorNotificationTypeNewPushMessage:
		return UnmarshalNotificationTypeNewPushMessage(data)

	case ConstructorNotificationGroupTypeMessages:
		return UnmarshalNotificationGroupTypeMessages(data)

	case ConstructorNotificationGroupTypeMentions:
		return UnmarshalNotificationGroupTypeMentions(data)

	case ConstructorNotificationGroupTypeSecretChat:
		return UnmarshalNotificationGroupTypeSecretChat(data)

	case ConstructorNotificationGroupTypeCalls:
		return UnmarshalNotificationGroupTypeCalls(data)

	case ConstructorNotificationSound:
		return UnmarshalNotificationSound(data)

	case ConstructorNotificationSounds:
		return UnmarshalNotificationSounds(data)

	case ConstructorNotification:
		return UnmarshalNotification(data)

	case ConstructorNotificationGroup:
		return UnmarshalNotificationGroup(data)

	case ConstructorOptionValueBoolean:
		return UnmarshalOptionValueBoolean(data)

	case ConstructorOptionValueEmpty:
		return UnmarshalOptionValueEmpty(data)

	case ConstructorOptionValueInteger:
		return UnmarshalOptionValueInteger(data)

	case ConstructorOptionValueString:
		return UnmarshalOptionValueString(data)

	case ConstructorJsonObjectMember:
		return UnmarshalJsonObjectMember(data)

	case ConstructorJsonValueNull:
		return UnmarshalJsonValueNull(data)

	case ConstructorJsonValueBoolean:
		return UnmarshalJsonValueBoolean(data)

	case ConstructorJsonValueNumber:
		return UnmarshalJsonValueNumber(data)

	case ConstructorJsonValueString:
		return UnmarshalJsonValueString(data)

	case ConstructorJsonValueArray:
		return UnmarshalJsonValueArray(data)

	case ConstructorJsonValueObject:
		return UnmarshalJsonValueObject(data)

	case ConstructorStoryPrivacySettingsEveryone:
		return UnmarshalStoryPrivacySettingsEveryone(data)

	case ConstructorStoryPrivacySettingsContacts:
		return UnmarshalStoryPrivacySettingsContacts(data)

	case ConstructorStoryPrivacySettingsCloseFriends:
		return UnmarshalStoryPrivacySettingsCloseFriends(data)

	case ConstructorStoryPrivacySettingsSelectedUsers:
		return UnmarshalStoryPrivacySettingsSelectedUsers(data)

	case ConstructorUserPrivacySettingRuleAllowAll:
		return UnmarshalUserPrivacySettingRuleAllowAll(data)

	case ConstructorUserPrivacySettingRuleAllowContacts:
		return UnmarshalUserPrivacySettingRuleAllowContacts(data)

	case ConstructorUserPrivacySettingRuleAllowBots:
		return UnmarshalUserPrivacySettingRuleAllowBots(data)

	case ConstructorUserPrivacySettingRuleAllowPremiumUsers:
		return UnmarshalUserPrivacySettingRuleAllowPremiumUsers(data)

	case ConstructorUserPrivacySettingRuleAllowUsers:
		return UnmarshalUserPrivacySettingRuleAllowUsers(data)

	case ConstructorUserPrivacySettingRuleAllowChatMembers:
		return UnmarshalUserPrivacySettingRuleAllowChatMembers(data)

	case ConstructorUserPrivacySettingRuleRestrictAll:
		return UnmarshalUserPrivacySettingRuleRestrictAll(data)

	case ConstructorUserPrivacySettingRuleRestrictContacts:
		return UnmarshalUserPrivacySettingRuleRestrictContacts(data)

	case ConstructorUserPrivacySettingRuleRestrictBots:
		return UnmarshalUserPrivacySettingRuleRestrictBots(data)

	case ConstructorUserPrivacySettingRuleRestrictUsers:
		return UnmarshalUserPrivacySettingRuleRestrictUsers(data)

	case ConstructorUserPrivacySettingRuleRestrictChatMembers:
		return UnmarshalUserPrivacySettingRuleRestrictChatMembers(data)

	case ConstructorUserPrivacySettingRules:
		return UnmarshalUserPrivacySettingRules(data)

	case ConstructorUserPrivacySettingShowStatus:
		return UnmarshalUserPrivacySettingShowStatus(data)

	case ConstructorUserPrivacySettingShowProfilePhoto:
		return UnmarshalUserPrivacySettingShowProfilePhoto(data)

	case ConstructorUserPrivacySettingShowLinkInForwardedMessages:
		return UnmarshalUserPrivacySettingShowLinkInForwardedMessages(data)

	case ConstructorUserPrivacySettingShowPhoneNumber:
		return UnmarshalUserPrivacySettingShowPhoneNumber(data)

	case ConstructorUserPrivacySettingShowBio:
		return UnmarshalUserPrivacySettingShowBio(data)

	case ConstructorUserPrivacySettingShowBirthdate:
		return UnmarshalUserPrivacySettingShowBirthdate(data)

	case ConstructorUserPrivacySettingAllowChatInvites:
		return UnmarshalUserPrivacySettingAllowChatInvites(data)

	case ConstructorUserPrivacySettingAllowCalls:
		return UnmarshalUserPrivacySettingAllowCalls(data)

	case ConstructorUserPrivacySettingAllowPeerToPeerCalls:
		return UnmarshalUserPrivacySettingAllowPeerToPeerCalls(data)

	case ConstructorUserPrivacySettingAllowFindingByPhoneNumber:
		return UnmarshalUserPrivacySettingAllowFindingByPhoneNumber(data)

	case ConstructorUserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages:
		return UnmarshalUserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages(data)

	case ConstructorUserPrivacySettingAutosaveGifts:
		return UnmarshalUserPrivacySettingAutosaveGifts(data)

	case ConstructorUserPrivacySettingAllowUnpaidMessages:
		return UnmarshalUserPrivacySettingAllowUnpaidMessages(data)

	case ConstructorReadDatePrivacySettings:
		return UnmarshalReadDatePrivacySettings(data)

	case ConstructorNewChatPrivacySettings:
		return UnmarshalNewChatPrivacySettings(data)

	case ConstructorCanSendMessageToUserResultOk:
		return UnmarshalCanSendMessageToUserResultOk(data)

	case ConstructorCanSendMessageToUserResultUserHasPaidMessages:
		return UnmarshalCanSendMessageToUserResultUserHasPaidMessages(data)

	case ConstructorCanSendMessageToUserResultUserIsDeleted:
		return UnmarshalCanSendMessageToUserResultUserIsDeleted(data)

	case ConstructorCanSendMessageToUserResultUserRestrictsNewChats:
		return UnmarshalCanSendMessageToUserResultUserRestrictsNewChats(data)

	case ConstructorAccountTtl:
		return UnmarshalAccountTtl(data)

	case ConstructorMessageAutoDeleteTime:
		return UnmarshalMessageAutoDeleteTime(data)

	case ConstructorSessionTypeAndroid:
		return UnmarshalSessionTypeAndroid(data)

	case ConstructorSessionTypeApple:
		return UnmarshalSessionTypeApple(data)

	case ConstructorSessionTypeBrave:
		return UnmarshalSessionTypeBrave(data)

	case ConstructorSessionTypeChrome:
		return UnmarshalSessionTypeChrome(data)

	case ConstructorSessionTypeEdge:
		return UnmarshalSessionTypeEdge(data)

	case ConstructorSessionTypeFirefox:
		return UnmarshalSessionTypeFirefox(data)

	case ConstructorSessionTypeIpad:
		return UnmarshalSessionTypeIpad(data)

	case ConstructorSessionTypeIphone:
		return UnmarshalSessionTypeIphone(data)

	case ConstructorSessionTypeLinux:
		return UnmarshalSessionTypeLinux(data)

	case ConstructorSessionTypeMac:
		return UnmarshalSessionTypeMac(data)

	case ConstructorSessionTypeOpera:
		return UnmarshalSessionTypeOpera(data)

	case ConstructorSessionTypeSafari:
		return UnmarshalSessionTypeSafari(data)

	case ConstructorSessionTypeUbuntu:
		return UnmarshalSessionTypeUbuntu(data)

	case ConstructorSessionTypeUnknown:
		return UnmarshalSessionTypeUnknown(data)

	case ConstructorSessionTypeVivaldi:
		return UnmarshalSessionTypeVivaldi(data)

	case ConstructorSessionTypeWindows:
		return UnmarshalSessionTypeWindows(data)

	case ConstructorSessionTypeXbox:
		return UnmarshalSessionTypeXbox(data)

	case ConstructorSession:
		return UnmarshalSession(data)

	case ConstructorSessions:
		return UnmarshalSessions(data)

	case ConstructorUnconfirmedSession:
		return UnmarshalUnconfirmedSession(data)

	case ConstructorConnectedWebsite:
		return UnmarshalConnectedWebsite(data)

	case ConstructorConnectedWebsites:
		return UnmarshalConnectedWebsites(data)

	case ConstructorReportReasonSpam:
		return UnmarshalReportReasonSpam(data)

	case ConstructorReportReasonViolence:
		return UnmarshalReportReasonViolence(data)

	case ConstructorReportReasonPornography:
		return UnmarshalReportReasonPornography(data)

	case ConstructorReportReasonChildAbuse:
		return UnmarshalReportReasonChildAbuse(data)

	case ConstructorReportReasonCopyright:
		return UnmarshalReportReasonCopyright(data)

	case ConstructorReportReasonUnrelatedLocation:
		return UnmarshalReportReasonUnrelatedLocation(data)

	case ConstructorReportReasonFake:
		return UnmarshalReportReasonFake(data)

	case ConstructorReportReasonIllegalDrugs:
		return UnmarshalReportReasonIllegalDrugs(data)

	case ConstructorReportReasonPersonalDetails:
		return UnmarshalReportReasonPersonalDetails(data)

	case ConstructorReportReasonCustom:
		return UnmarshalReportReasonCustom(data)

	case ConstructorReportChatResultOk:
		return UnmarshalReportChatResultOk(data)

	case ConstructorReportChatResultOptionRequired:
		return UnmarshalReportChatResultOptionRequired(data)

	case ConstructorReportChatResultTextRequired:
		return UnmarshalReportChatResultTextRequired(data)

	case ConstructorReportChatResultMessagesRequired:
		return UnmarshalReportChatResultMessagesRequired(data)

	case ConstructorReportStoryResultOk:
		return UnmarshalReportStoryResultOk(data)

	case ConstructorReportStoryResultOptionRequired:
		return UnmarshalReportStoryResultOptionRequired(data)

	case ConstructorReportStoryResultTextRequired:
		return UnmarshalReportStoryResultTextRequired(data)

	case ConstructorInternalLinkTypeActiveSessions:
		return UnmarshalInternalLinkTypeActiveSessions(data)

	case ConstructorInternalLinkTypeAttachmentMenuBot:
		return UnmarshalInternalLinkTypeAttachmentMenuBot(data)

	case ConstructorInternalLinkTypeAuthenticationCode:
		return UnmarshalInternalLinkTypeAuthenticationCode(data)

	case ConstructorInternalLinkTypeBackground:
		return UnmarshalInternalLinkTypeBackground(data)

	case ConstructorInternalLinkTypeBotAddToChannel:
		return UnmarshalInternalLinkTypeBotAddToChannel(data)

	case ConstructorInternalLinkTypeBotStart:
		return UnmarshalInternalLinkTypeBotStart(data)

	case ConstructorInternalLinkTypeBotStartInGroup:
		return UnmarshalInternalLinkTypeBotStartInGroup(data)

	case ConstructorInternalLinkTypeBusinessChat:
		return UnmarshalInternalLinkTypeBusinessChat(data)

	case ConstructorInternalLinkTypeBuyStars:
		return UnmarshalInternalLinkTypeBuyStars(data)

	case ConstructorInternalLinkTypeChangePhoneNumber:
		return UnmarshalInternalLinkTypeChangePhoneNumber(data)

	case ConstructorInternalLinkTypeChatAffiliateProgram:
		return UnmarshalInternalLinkTypeChatAffiliateProgram(data)

	case ConstructorInternalLinkTypeChatBoost:
		return UnmarshalInternalLinkTypeChatBoost(data)

	case ConstructorInternalLinkTypeChatFolderInvite:
		return UnmarshalInternalLinkTypeChatFolderInvite(data)

	case ConstructorInternalLinkTypeChatFolderSettings:
		return UnmarshalInternalLinkTypeChatFolderSettings(data)

	case ConstructorInternalLinkTypeChatInvite:
		return UnmarshalInternalLinkTypeChatInvite(data)

	case ConstructorInternalLinkTypeDefaultMessageAutoDeleteTimerSettings:
		return UnmarshalInternalLinkTypeDefaultMessageAutoDeleteTimerSettings(data)

	case ConstructorInternalLinkTypeEditProfileSettings:
		return UnmarshalInternalLinkTypeEditProfileSettings(data)

	case ConstructorInternalLinkTypeGame:
		return UnmarshalInternalLinkTypeGame(data)

	case ConstructorInternalLinkTypeInstantView:
		return UnmarshalInternalLinkTypeInstantView(data)

	case ConstructorInternalLinkTypeInvoice:
		return UnmarshalInternalLinkTypeInvoice(data)

	case ConstructorInternalLinkTypeLanguagePack:
		return UnmarshalInternalLinkTypeLanguagePack(data)

	case ConstructorInternalLinkTypeLanguageSettings:
		return UnmarshalInternalLinkTypeLanguageSettings(data)

	case ConstructorInternalLinkTypeMainWebApp:
		return UnmarshalInternalLinkTypeMainWebApp(data)

	case ConstructorInternalLinkTypeMessage:
		return UnmarshalInternalLinkTypeMessage(data)

	case ConstructorInternalLinkTypeMessageDraft:
		return UnmarshalInternalLinkTypeMessageDraft(data)

	case ConstructorInternalLinkTypePassportDataRequest:
		return UnmarshalInternalLinkTypePassportDataRequest(data)

	case ConstructorInternalLinkTypePhoneNumberConfirmation:
		return UnmarshalInternalLinkTypePhoneNumberConfirmation(data)

	case ConstructorInternalLinkTypePremiumFeatures:
		return UnmarshalInternalLinkTypePremiumFeatures(data)

	case ConstructorInternalLinkTypePremiumGift:
		return UnmarshalInternalLinkTypePremiumGift(data)

	case ConstructorInternalLinkTypePremiumGiftCode:
		return UnmarshalInternalLinkTypePremiumGiftCode(data)

	case ConstructorInternalLinkTypePrivacyAndSecuritySettings:
		return UnmarshalInternalLinkTypePrivacyAndSecuritySettings(data)

	case ConstructorInternalLinkTypeProxy:
		return UnmarshalInternalLinkTypeProxy(data)

	case ConstructorInternalLinkTypePublicChat:
		return UnmarshalInternalLinkTypePublicChat(data)

	case ConstructorInternalLinkTypeQrCodeAuthentication:
		return UnmarshalInternalLinkTypeQrCodeAuthentication(data)

	case ConstructorInternalLinkTypeRestorePurchases:
		return UnmarshalInternalLinkTypeRestorePurchases(data)

	case ConstructorInternalLinkTypeSettings:
		return UnmarshalInternalLinkTypeSettings(data)

	case ConstructorInternalLinkTypeStickerSet:
		return UnmarshalInternalLinkTypeStickerSet(data)

	case ConstructorInternalLinkTypeStory:
		return UnmarshalInternalLinkTypeStory(data)

	case ConstructorInternalLinkTypeTheme:
		return UnmarshalInternalLinkTypeTheme(data)

	case ConstructorInternalLinkTypeThemeSettings:
		return UnmarshalInternalLinkTypeThemeSettings(data)

	case ConstructorInternalLinkTypeUnknownDeepLink:
		return UnmarshalInternalLinkTypeUnknownDeepLink(data)

	case ConstructorInternalLinkTypeUnsupportedProxy:
		return UnmarshalInternalLinkTypeUnsupportedProxy(data)

	case ConstructorInternalLinkTypeUpgradedGift:
		return UnmarshalInternalLinkTypeUpgradedGift(data)

	case ConstructorInternalLinkTypeUserPhoneNumber:
		return UnmarshalInternalLinkTypeUserPhoneNumber(data)

	case ConstructorInternalLinkTypeUserToken:
		return UnmarshalInternalLinkTypeUserToken(data)

	case ConstructorInternalLinkTypeVideoChat:
		return UnmarshalInternalLinkTypeVideoChat(data)

	case ConstructorInternalLinkTypeWebApp:
		return UnmarshalInternalLinkTypeWebApp(data)

	case ConstructorMessageLink:
		return UnmarshalMessageLink(data)

	case ConstructorMessageLinkInfo:
		return UnmarshalMessageLinkInfo(data)

	case ConstructorChatBoostLink:
		return UnmarshalChatBoostLink(data)

	case ConstructorChatBoostLinkInfo:
		return UnmarshalChatBoostLinkInfo(data)

	case ConstructorBlockListMain:
		return UnmarshalBlockListMain(data)

	case ConstructorBlockListStories:
		return UnmarshalBlockListStories(data)

	case ConstructorFilePart:
		return UnmarshalFilePart(data)

	case ConstructorFileTypeNone:
		return UnmarshalFileTypeNone(data)

	case ConstructorFileTypeAnimation:
		return UnmarshalFileTypeAnimation(data)

	case ConstructorFileTypeAudio:
		return UnmarshalFileTypeAudio(data)

	case ConstructorFileTypeDocument:
		return UnmarshalFileTypeDocument(data)

	case ConstructorFileTypeNotificationSound:
		return UnmarshalFileTypeNotificationSound(data)

	case ConstructorFileTypePhoto:
		return UnmarshalFileTypePhoto(data)

	case ConstructorFileTypePhotoStory:
		return UnmarshalFileTypePhotoStory(data)

	case ConstructorFileTypeProfilePhoto:
		return UnmarshalFileTypeProfilePhoto(data)

	case ConstructorFileTypeSecret:
		return UnmarshalFileTypeSecret(data)

	case ConstructorFileTypeSecretThumbnail:
		return UnmarshalFileTypeSecretThumbnail(data)

	case ConstructorFileTypeSecure:
		return UnmarshalFileTypeSecure(data)

	case ConstructorFileTypeSelfDestructingPhoto:
		return UnmarshalFileTypeSelfDestructingPhoto(data)

	case ConstructorFileTypeSelfDestructingVideo:
		return UnmarshalFileTypeSelfDestructingVideo(data)

	case ConstructorFileTypeSelfDestructingVideoNote:
		return UnmarshalFileTypeSelfDestructingVideoNote(data)

	case ConstructorFileTypeSelfDestructingVoiceNote:
		return UnmarshalFileTypeSelfDestructingVoiceNote(data)

	case ConstructorFileTypeSticker:
		return UnmarshalFileTypeSticker(data)

	case ConstructorFileTypeThumbnail:
		return UnmarshalFileTypeThumbnail(data)

	case ConstructorFileTypeUnknown:
		return UnmarshalFileTypeUnknown(data)

	case ConstructorFileTypeVideo:
		return UnmarshalFileTypeVideo(data)

	case ConstructorFileTypeVideoNote:
		return UnmarshalFileTypeVideoNote(data)

	case ConstructorFileTypeVideoStory:
		return UnmarshalFileTypeVideoStory(data)

	case ConstructorFileTypeVoiceNote:
		return UnmarshalFileTypeVoiceNote(data)

	case ConstructorFileTypeWallpaper:
		return UnmarshalFileTypeWallpaper(data)

	case ConstructorStorageStatisticsByFileType:
		return UnmarshalStorageStatisticsByFileType(data)

	case ConstructorStorageStatisticsByChat:
		return UnmarshalStorageStatisticsByChat(data)

	case ConstructorStorageStatistics:
		return UnmarshalStorageStatistics(data)

	case ConstructorStorageStatisticsFast:
		return UnmarshalStorageStatisticsFast(data)

	case ConstructorDatabaseStatistics:
		return UnmarshalDatabaseStatistics(data)

	case ConstructorNetworkTypeNone:
		return UnmarshalNetworkTypeNone(data)

	case ConstructorNetworkTypeMobile:
		return UnmarshalNetworkTypeMobile(data)

	case ConstructorNetworkTypeMobileRoaming:
		return UnmarshalNetworkTypeMobileRoaming(data)

	case ConstructorNetworkTypeWiFi:
		return UnmarshalNetworkTypeWiFi(data)

	case ConstructorNetworkTypeOther:
		return UnmarshalNetworkTypeOther(data)

	case ConstructorNetworkStatisticsEntryFile:
		return UnmarshalNetworkStatisticsEntryFile(data)

	case ConstructorNetworkStatisticsEntryCall:
		return UnmarshalNetworkStatisticsEntryCall(data)

	case ConstructorNetworkStatistics:
		return UnmarshalNetworkStatistics(data)

	case ConstructorAutoDownloadSettings:
		return UnmarshalAutoDownloadSettings(data)

	case ConstructorAutoDownloadSettingsPresets:
		return UnmarshalAutoDownloadSettingsPresets(data)

	case ConstructorAutosaveSettingsScopePrivateChats:
		return UnmarshalAutosaveSettingsScopePrivateChats(data)

	case ConstructorAutosaveSettingsScopeGroupChats:
		return UnmarshalAutosaveSettingsScopeGroupChats(data)

	case ConstructorAutosaveSettingsScopeChannelChats:
		return UnmarshalAutosaveSettingsScopeChannelChats(data)

	case ConstructorAutosaveSettingsScopeChat:
		return UnmarshalAutosaveSettingsScopeChat(data)

	case ConstructorScopeAutosaveSettings:
		return UnmarshalScopeAutosaveSettings(data)

	case ConstructorAutosaveSettingsException:
		return UnmarshalAutosaveSettingsException(data)

	case ConstructorAutosaveSettings:
		return UnmarshalAutosaveSettings(data)

	case ConstructorConnectionStateWaitingForNetwork:
		return UnmarshalConnectionStateWaitingForNetwork(data)

	case ConstructorConnectionStateConnectingToProxy:
		return UnmarshalConnectionStateConnectingToProxy(data)

	case ConstructorConnectionStateConnecting:
		return UnmarshalConnectionStateConnecting(data)

	case ConstructorConnectionStateUpdating:
		return UnmarshalConnectionStateUpdating(data)

	case ConstructorConnectionStateReady:
		return UnmarshalConnectionStateReady(data)

	case ConstructorTopChatCategoryUsers:
		return UnmarshalTopChatCategoryUsers(data)

	case ConstructorTopChatCategoryBots:
		return UnmarshalTopChatCategoryBots(data)

	case ConstructorTopChatCategoryGroups:
		return UnmarshalTopChatCategoryGroups(data)

	case ConstructorTopChatCategoryChannels:
		return UnmarshalTopChatCategoryChannels(data)

	case ConstructorTopChatCategoryInlineBots:
		return UnmarshalTopChatCategoryInlineBots(data)

	case ConstructorTopChatCategoryWebAppBots:
		return UnmarshalTopChatCategoryWebAppBots(data)

	case ConstructorTopChatCategoryCalls:
		return UnmarshalTopChatCategoryCalls(data)

	case ConstructorTopChatCategoryForwardChats:
		return UnmarshalTopChatCategoryForwardChats(data)

	case ConstructorFoundPosition:
		return UnmarshalFoundPosition(data)

	case ConstructorFoundPositions:
		return UnmarshalFoundPositions(data)

	case ConstructorTMeUrlTypeUser:
		return UnmarshalTMeUrlTypeUser(data)

	case ConstructorTMeUrlTypeSupergroup:
		return UnmarshalTMeUrlTypeSupergroup(data)

	case ConstructorTMeUrlTypeChatInvite:
		return UnmarshalTMeUrlTypeChatInvite(data)

	case ConstructorTMeUrlTypeStickerSet:
		return UnmarshalTMeUrlTypeStickerSet(data)

	case ConstructorTMeUrl:
		return UnmarshalTMeUrl(data)

	case ConstructorTMeUrls:
		return UnmarshalTMeUrls(data)

	case ConstructorSuggestedActionEnableArchiveAndMuteNewChats:
		return UnmarshalSuggestedActionEnableArchiveAndMuteNewChats(data)

	case ConstructorSuggestedActionCheckPassword:
		return UnmarshalSuggestedActionCheckPassword(data)

	case ConstructorSuggestedActionCheckPhoneNumber:
		return UnmarshalSuggestedActionCheckPhoneNumber(data)

	case ConstructorSuggestedActionViewChecksHint:
		return UnmarshalSuggestedActionViewChecksHint(data)

	case ConstructorSuggestedActionConvertToBroadcastGroup:
		return UnmarshalSuggestedActionConvertToBroadcastGroup(data)

	case ConstructorSuggestedActionSetPassword:
		return UnmarshalSuggestedActionSetPassword(data)

	case ConstructorSuggestedActionUpgradePremium:
		return UnmarshalSuggestedActionUpgradePremium(data)

	case ConstructorSuggestedActionRestorePremium:
		return UnmarshalSuggestedActionRestorePremium(data)

	case ConstructorSuggestedActionSubscribeToAnnualPremium:
		return UnmarshalSuggestedActionSubscribeToAnnualPremium(data)

	case ConstructorSuggestedActionGiftPremiumForChristmas:
		return UnmarshalSuggestedActionGiftPremiumForChristmas(data)

	case ConstructorSuggestedActionSetBirthdate:
		return UnmarshalSuggestedActionSetBirthdate(data)

	case ConstructorSuggestedActionSetProfilePhoto:
		return UnmarshalSuggestedActionSetProfilePhoto(data)

	case ConstructorSuggestedActionExtendPremium:
		return UnmarshalSuggestedActionExtendPremium(data)

	case ConstructorSuggestedActionExtendStarSubscriptions:
		return UnmarshalSuggestedActionExtendStarSubscriptions(data)

	case ConstructorCount:
		return UnmarshalCount(data)

	case ConstructorText:
		return UnmarshalText(data)

	case ConstructorSeconds:
		return UnmarshalSeconds(data)

	case ConstructorFileDownloadedPrefixSize:
		return UnmarshalFileDownloadedPrefixSize(data)

	case ConstructorStarCount:
		return UnmarshalStarCount(data)

	case ConstructorDeepLinkInfo:
		return UnmarshalDeepLinkInfo(data)

	case ConstructorTextParseModeMarkdown:
		return UnmarshalTextParseModeMarkdown(data)

	case ConstructorTextParseModeHTML:
		return UnmarshalTextParseModeHTML(data)

	case ConstructorProxyTypeSocks5:
		return UnmarshalProxyTypeSocks5(data)

	case ConstructorProxyTypeHttp:
		return UnmarshalProxyTypeHttp(data)

	case ConstructorProxyTypeMtproto:
		return UnmarshalProxyTypeMtproto(data)

	case ConstructorProxy:
		return UnmarshalProxy(data)

	case ConstructorProxies:
		return UnmarshalProxies(data)

	case ConstructorInputSticker:
		return UnmarshalInputSticker(data)

	case ConstructorDateRange:
		return UnmarshalDateRange(data)

	case ConstructorStatisticalValue:
		return UnmarshalStatisticalValue(data)

	case ConstructorStatisticalGraphData:
		return UnmarshalStatisticalGraphData(data)

	case ConstructorStatisticalGraphAsync:
		return UnmarshalStatisticalGraphAsync(data)

	case ConstructorStatisticalGraphError:
		return UnmarshalStatisticalGraphError(data)

	case ConstructorChatStatisticsObjectTypeMessage:
		return UnmarshalChatStatisticsObjectTypeMessage(data)

	case ConstructorChatStatisticsObjectTypeStory:
		return UnmarshalChatStatisticsObjectTypeStory(data)

	case ConstructorChatStatisticsInteractionInfo:
		return UnmarshalChatStatisticsInteractionInfo(data)

	case ConstructorChatStatisticsMessageSenderInfo:
		return UnmarshalChatStatisticsMessageSenderInfo(data)

	case ConstructorChatStatisticsAdministratorActionsInfo:
		return UnmarshalChatStatisticsAdministratorActionsInfo(data)

	case ConstructorChatStatisticsInviterInfo:
		return UnmarshalChatStatisticsInviterInfo(data)

	case ConstructorChatStatisticsSupergroup:
		return UnmarshalChatStatisticsSupergroup(data)

	case ConstructorChatStatisticsChannel:
		return UnmarshalChatStatisticsChannel(data)

	case ConstructorChatRevenueAmount:
		return UnmarshalChatRevenueAmount(data)

	case ConstructorChatRevenueStatistics:
		return UnmarshalChatRevenueStatistics(data)

	case ConstructorMessageStatistics:
		return UnmarshalMessageStatistics(data)

	case ConstructorStoryStatistics:
		return UnmarshalStoryStatistics(data)

	case ConstructorRevenueWithdrawalStatePending:
		return UnmarshalRevenueWithdrawalStatePending(data)

	case ConstructorRevenueWithdrawalStateSucceeded:
		return UnmarshalRevenueWithdrawalStateSucceeded(data)

	case ConstructorRevenueWithdrawalStateFailed:
		return UnmarshalRevenueWithdrawalStateFailed(data)

	case ConstructorChatRevenueTransactionTypeEarnings:
		return UnmarshalChatRevenueTransactionTypeEarnings(data)

	case ConstructorChatRevenueTransactionTypeWithdrawal:
		return UnmarshalChatRevenueTransactionTypeWithdrawal(data)

	case ConstructorChatRevenueTransactionTypeRefund:
		return UnmarshalChatRevenueTransactionTypeRefund(data)

	case ConstructorChatRevenueTransaction:
		return UnmarshalChatRevenueTransaction(data)

	case ConstructorChatRevenueTransactions:
		return UnmarshalChatRevenueTransactions(data)

	case ConstructorStarRevenueStatus:
		return UnmarshalStarRevenueStatus(data)

	case ConstructorStarRevenueStatistics:
		return UnmarshalStarRevenueStatistics(data)

	case ConstructorPoint:
		return UnmarshalPoint(data)

	case ConstructorVectorPathCommandLine:
		return UnmarshalVectorPathCommandLine(data)

	case ConstructorVectorPathCommandCubicBezierCurve:
		return UnmarshalVectorPathCommandCubicBezierCurve(data)

	case ConstructorBotCommandScopeDefault:
		return UnmarshalBotCommandScopeDefault(data)

	case ConstructorBotCommandScopeAllPrivateChats:
		return UnmarshalBotCommandScopeAllPrivateChats(data)

	case ConstructorBotCommandScopeAllGroupChats:
		return UnmarshalBotCommandScopeAllGroupChats(data)

	case ConstructorBotCommandScopeAllChatAdministrators:
		return UnmarshalBotCommandScopeAllChatAdministrators(data)

	case ConstructorBotCommandScopeChat:
		return UnmarshalBotCommandScopeChat(data)

	case ConstructorBotCommandScopeChatAdministrators:
		return UnmarshalBotCommandScopeChatAdministrators(data)

	case ConstructorBotCommandScopeChatMember:
		return UnmarshalBotCommandScopeChatMember(data)

	case ConstructorPhoneNumberCodeTypeChange:
		return UnmarshalPhoneNumberCodeTypeChange(data)

	case ConstructorPhoneNumberCodeTypeVerify:
		return UnmarshalPhoneNumberCodeTypeVerify(data)

	case ConstructorPhoneNumberCodeTypeConfirmOwnership:
		return UnmarshalPhoneNumberCodeTypeConfirmOwnership(data)

	case ConstructorUpdateAuthorizationState:
		return UnmarshalUpdateAuthorizationState(data)

	case ConstructorUpdateNewMessage:
		return UnmarshalUpdateNewMessage(data)

	case ConstructorUpdateMessageSendAcknowledged:
		return UnmarshalUpdateMessageSendAcknowledged(data)

	case ConstructorUpdateMessageSendSucceeded:
		return UnmarshalUpdateMessageSendSucceeded(data)

	case ConstructorUpdateMessageSendFailed:
		return UnmarshalUpdateMessageSendFailed(data)

	case ConstructorUpdateMessageContent:
		return UnmarshalUpdateMessageContent(data)

	case ConstructorUpdateMessageEdited:
		return UnmarshalUpdateMessageEdited(data)

	case ConstructorUpdateMessageIsPinned:
		return UnmarshalUpdateMessageIsPinned(data)

	case ConstructorUpdateMessageInteractionInfo:
		return UnmarshalUpdateMessageInteractionInfo(data)

	case ConstructorUpdateMessageContentOpened:
		return UnmarshalUpdateMessageContentOpened(data)

	case ConstructorUpdateMessageMentionRead:
		return UnmarshalUpdateMessageMentionRead(data)

	case ConstructorUpdateMessageUnreadReactions:
		return UnmarshalUpdateMessageUnreadReactions(data)

	case ConstructorUpdateMessageFactCheck:
		return UnmarshalUpdateMessageFactCheck(data)

	case ConstructorUpdateMessageLiveLocationViewed:
		return UnmarshalUpdateMessageLiveLocationViewed(data)

	case ConstructorUpdateVideoPublished:
		return UnmarshalUpdateVideoPublished(data)

	case ConstructorUpdateNewChat:
		return UnmarshalUpdateNewChat(data)

	case ConstructorUpdateChatTitle:
		return UnmarshalUpdateChatTitle(data)

	case ConstructorUpdateChatPhoto:
		return UnmarshalUpdateChatPhoto(data)

	case ConstructorUpdateChatAccentColors:
		return UnmarshalUpdateChatAccentColors(data)

	case ConstructorUpdateChatPermissions:
		return UnmarshalUpdateChatPermissions(data)

	case ConstructorUpdateChatLastMessage:
		return UnmarshalUpdateChatLastMessage(data)

	case ConstructorUpdateChatPosition:
		return UnmarshalUpdateChatPosition(data)

	case ConstructorUpdateChatAddedToList:
		return UnmarshalUpdateChatAddedToList(data)

	case ConstructorUpdateChatRemovedFromList:
		return UnmarshalUpdateChatRemovedFromList(data)

	case ConstructorUpdateChatReadInbox:
		return UnmarshalUpdateChatReadInbox(data)

	case ConstructorUpdateChatReadOutbox:
		return UnmarshalUpdateChatReadOutbox(data)

	case ConstructorUpdateChatActionBar:
		return UnmarshalUpdateChatActionBar(data)

	case ConstructorUpdateChatBusinessBotManageBar:
		return UnmarshalUpdateChatBusinessBotManageBar(data)

	case ConstructorUpdateChatAvailableReactions:
		return UnmarshalUpdateChatAvailableReactions(data)

	case ConstructorUpdateChatDraftMessage:
		return UnmarshalUpdateChatDraftMessage(data)

	case ConstructorUpdateChatEmojiStatus:
		return UnmarshalUpdateChatEmojiStatus(data)

	case ConstructorUpdateChatMessageSender:
		return UnmarshalUpdateChatMessageSender(data)

	case ConstructorUpdateChatMessageAutoDeleteTime:
		return UnmarshalUpdateChatMessageAutoDeleteTime(data)

	case ConstructorUpdateChatNotificationSettings:
		return UnmarshalUpdateChatNotificationSettings(data)

	case ConstructorUpdateChatPendingJoinRequests:
		return UnmarshalUpdateChatPendingJoinRequests(data)

	case ConstructorUpdateChatReplyMarkup:
		return UnmarshalUpdateChatReplyMarkup(data)

	case ConstructorUpdateChatBackground:
		return UnmarshalUpdateChatBackground(data)

	case ConstructorUpdateChatTheme:
		return UnmarshalUpdateChatTheme(data)

	case ConstructorUpdateChatUnreadMentionCount:
		return UnmarshalUpdateChatUnreadMentionCount(data)

	case ConstructorUpdateChatUnreadReactionCount:
		return UnmarshalUpdateChatUnreadReactionCount(data)

	case ConstructorUpdateChatVideoChat:
		return UnmarshalUpdateChatVideoChat(data)

	case ConstructorUpdateChatDefaultDisableNotification:
		return UnmarshalUpdateChatDefaultDisableNotification(data)

	case ConstructorUpdateChatHasProtectedContent:
		return UnmarshalUpdateChatHasProtectedContent(data)

	case ConstructorUpdateChatIsTranslatable:
		return UnmarshalUpdateChatIsTranslatable(data)

	case ConstructorUpdateChatIsMarkedAsUnread:
		return UnmarshalUpdateChatIsMarkedAsUnread(data)

	case ConstructorUpdateChatViewAsTopics:
		return UnmarshalUpdateChatViewAsTopics(data)

	case ConstructorUpdateChatBlockList:
		return UnmarshalUpdateChatBlockList(data)

	case ConstructorUpdateChatHasScheduledMessages:
		return UnmarshalUpdateChatHasScheduledMessages(data)

	case ConstructorUpdateChatFolders:
		return UnmarshalUpdateChatFolders(data)

	case ConstructorUpdateChatOnlineMemberCount:
		return UnmarshalUpdateChatOnlineMemberCount(data)

	case ConstructorUpdateSavedMessagesTopic:
		return UnmarshalUpdateSavedMessagesTopic(data)

	case ConstructorUpdateSavedMessagesTopicCount:
		return UnmarshalUpdateSavedMessagesTopicCount(data)

	case ConstructorUpdateQuickReplyShortcut:
		return UnmarshalUpdateQuickReplyShortcut(data)

	case ConstructorUpdateQuickReplyShortcutDeleted:
		return UnmarshalUpdateQuickReplyShortcutDeleted(data)

	case ConstructorUpdateQuickReplyShortcuts:
		return UnmarshalUpdateQuickReplyShortcuts(data)

	case ConstructorUpdateQuickReplyShortcutMessages:
		return UnmarshalUpdateQuickReplyShortcutMessages(data)

	case ConstructorUpdateForumTopicInfo:
		return UnmarshalUpdateForumTopicInfo(data)

	case ConstructorUpdateForumTopic:
		return UnmarshalUpdateForumTopic(data)

	case ConstructorUpdateScopeNotificationSettings:
		return UnmarshalUpdateScopeNotificationSettings(data)

	case ConstructorUpdateReactionNotificationSettings:
		return UnmarshalUpdateReactionNotificationSettings(data)

	case ConstructorUpdateNotification:
		return UnmarshalUpdateNotification(data)

	case ConstructorUpdateNotificationGroup:
		return UnmarshalUpdateNotificationGroup(data)

	case ConstructorUpdateActiveNotifications:
		return UnmarshalUpdateActiveNotifications(data)

	case ConstructorUpdateHavePendingNotifications:
		return UnmarshalUpdateHavePendingNotifications(data)

	case ConstructorUpdateDeleteMessages:
		return UnmarshalUpdateDeleteMessages(data)

	case ConstructorUpdateChatAction:
		return UnmarshalUpdateChatAction(data)

	case ConstructorUpdateUserStatus:
		return UnmarshalUpdateUserStatus(data)

	case ConstructorUpdateUser:
		return UnmarshalUpdateUser(data)

	case ConstructorUpdateBasicGroup:
		return UnmarshalUpdateBasicGroup(data)

	case ConstructorUpdateSupergroup:
		return UnmarshalUpdateSupergroup(data)

	case ConstructorUpdateSecretChat:
		return UnmarshalUpdateSecretChat(data)

	case ConstructorUpdateUserFullInfo:
		return UnmarshalUpdateUserFullInfo(data)

	case ConstructorUpdateBasicGroupFullInfo:
		return UnmarshalUpdateBasicGroupFullInfo(data)

	case ConstructorUpdateSupergroupFullInfo:
		return UnmarshalUpdateSupergroupFullInfo(data)

	case ConstructorUpdateServiceNotification:
		return UnmarshalUpdateServiceNotification(data)

	case ConstructorUpdateFile:
		return UnmarshalUpdateFile(data)

	case ConstructorUpdateFileGenerationStart:
		return UnmarshalUpdateFileGenerationStart(data)

	case ConstructorUpdateFileGenerationStop:
		return UnmarshalUpdateFileGenerationStop(data)

	case ConstructorUpdateFileDownloads:
		return UnmarshalUpdateFileDownloads(data)

	case ConstructorUpdateFileAddedToDownloads:
		return UnmarshalUpdateFileAddedToDownloads(data)

	case ConstructorUpdateFileDownload:
		return UnmarshalUpdateFileDownload(data)

	case ConstructorUpdateFileRemovedFromDownloads:
		return UnmarshalUpdateFileRemovedFromDownloads(data)

	case ConstructorUpdateApplicationVerificationRequired:
		return UnmarshalUpdateApplicationVerificationRequired(data)

	case ConstructorUpdateApplicationRecaptchaVerificationRequired:
		return UnmarshalUpdateApplicationRecaptchaVerificationRequired(data)

	case ConstructorUpdateCall:
		return UnmarshalUpdateCall(data)

	case ConstructorUpdateGroupCall:
		return UnmarshalUpdateGroupCall(data)

	case ConstructorUpdateGroupCallParticipant:
		return UnmarshalUpdateGroupCallParticipant(data)

	case ConstructorUpdateNewCallSignalingData:
		return UnmarshalUpdateNewCallSignalingData(data)

	case ConstructorUpdateUserPrivacySettingRules:
		return UnmarshalUpdateUserPrivacySettingRules(data)

	case ConstructorUpdateUnreadMessageCount:
		return UnmarshalUpdateUnreadMessageCount(data)

	case ConstructorUpdateUnreadChatCount:
		return UnmarshalUpdateUnreadChatCount(data)

	case ConstructorUpdateStory:
		return UnmarshalUpdateStory(data)

	case ConstructorUpdateStoryDeleted:
		return UnmarshalUpdateStoryDeleted(data)

	case ConstructorUpdateStorySendSucceeded:
		return UnmarshalUpdateStorySendSucceeded(data)

	case ConstructorUpdateStorySendFailed:
		return UnmarshalUpdateStorySendFailed(data)

	case ConstructorUpdateChatActiveStories:
		return UnmarshalUpdateChatActiveStories(data)

	case ConstructorUpdateStoryListChatCount:
		return UnmarshalUpdateStoryListChatCount(data)

	case ConstructorUpdateStoryStealthMode:
		return UnmarshalUpdateStoryStealthMode(data)

	case ConstructorUpdateOption:
		return UnmarshalUpdateOption(data)

	case ConstructorUpdateStickerSet:
		return UnmarshalUpdateStickerSet(data)

	case ConstructorUpdateInstalledStickerSets:
		return UnmarshalUpdateInstalledStickerSets(data)

	case ConstructorUpdateTrendingStickerSets:
		return UnmarshalUpdateTrendingStickerSets(data)

	case ConstructorUpdateRecentStickers:
		return UnmarshalUpdateRecentStickers(data)

	case ConstructorUpdateFavoriteStickers:
		return UnmarshalUpdateFavoriteStickers(data)

	case ConstructorUpdateSavedAnimations:
		return UnmarshalUpdateSavedAnimations(data)

	case ConstructorUpdateSavedNotificationSounds:
		return UnmarshalUpdateSavedNotificationSounds(data)

	case ConstructorUpdateDefaultBackground:
		return UnmarshalUpdateDefaultBackground(data)

	case ConstructorUpdateChatThemes:
		return UnmarshalUpdateChatThemes(data)

	case ConstructorUpdateAccentColors:
		return UnmarshalUpdateAccentColors(data)

	case ConstructorUpdateProfileAccentColors:
		return UnmarshalUpdateProfileAccentColors(data)

	case ConstructorUpdateLanguagePackStrings:
		return UnmarshalUpdateLanguagePackStrings(data)

	case ConstructorUpdateConnectionState:
		return UnmarshalUpdateConnectionState(data)

	case ConstructorUpdateFreezeState:
		return UnmarshalUpdateFreezeState(data)

	case ConstructorUpdateTermsOfService:
		return UnmarshalUpdateTermsOfService(data)

	case ConstructorUpdateUnconfirmedSession:
		return UnmarshalUpdateUnconfirmedSession(data)

	case ConstructorUpdateAttachmentMenuBots:
		return UnmarshalUpdateAttachmentMenuBots(data)

	case ConstructorUpdateWebAppMessageSent:
		return UnmarshalUpdateWebAppMessageSent(data)

	case ConstructorUpdateActiveEmojiReactions:
		return UnmarshalUpdateActiveEmojiReactions(data)

	case ConstructorUpdateAvailableMessageEffects:
		return UnmarshalUpdateAvailableMessageEffects(data)

	case ConstructorUpdateDefaultReactionType:
		return UnmarshalUpdateDefaultReactionType(data)

	case ConstructorUpdateDefaultPaidReactionType:
		return UnmarshalUpdateDefaultPaidReactionType(data)

	case ConstructorUpdateSavedMessagesTags:
		return UnmarshalUpdateSavedMessagesTags(data)

	case ConstructorUpdateActiveLiveLocationMessages:
		return UnmarshalUpdateActiveLiveLocationMessages(data)

	case ConstructorUpdateOwnedStarCount:
		return UnmarshalUpdateOwnedStarCount(data)

	case ConstructorUpdateChatRevenueAmount:
		return UnmarshalUpdateChatRevenueAmount(data)

	case ConstructorUpdateStarRevenueStatus:
		return UnmarshalUpdateStarRevenueStatus(data)

	case ConstructorUpdateSpeechRecognitionTrial:
		return UnmarshalUpdateSpeechRecognitionTrial(data)

	case ConstructorUpdateDiceEmojis:
		return UnmarshalUpdateDiceEmojis(data)

	case ConstructorUpdateAnimatedEmojiMessageClicked:
		return UnmarshalUpdateAnimatedEmojiMessageClicked(data)

	case ConstructorUpdateAnimationSearchParameters:
		return UnmarshalUpdateAnimationSearchParameters(data)

	case ConstructorUpdateSuggestedActions:
		return UnmarshalUpdateSuggestedActions(data)

	case ConstructorUpdateSpeedLimitNotification:
		return UnmarshalUpdateSpeedLimitNotification(data)

	case ConstructorUpdateContactCloseBirthdays:
		return UnmarshalUpdateContactCloseBirthdays(data)

	case ConstructorUpdateAutosaveSettings:
		return UnmarshalUpdateAutosaveSettings(data)

	case ConstructorUpdateBusinessConnection:
		return UnmarshalUpdateBusinessConnection(data)

	case ConstructorUpdateNewBusinessMessage:
		return UnmarshalUpdateNewBusinessMessage(data)

	case ConstructorUpdateBusinessMessageEdited:
		return UnmarshalUpdateBusinessMessageEdited(data)

	case ConstructorUpdateBusinessMessagesDeleted:
		return UnmarshalUpdateBusinessMessagesDeleted(data)

	case ConstructorUpdateNewInlineQuery:
		return UnmarshalUpdateNewInlineQuery(data)

	case ConstructorUpdateNewChosenInlineResult:
		return UnmarshalUpdateNewChosenInlineResult(data)

	case ConstructorUpdateNewCallbackQuery:
		return UnmarshalUpdateNewCallbackQuery(data)

	case ConstructorUpdateNewInlineCallbackQuery:
		return UnmarshalUpdateNewInlineCallbackQuery(data)

	case ConstructorUpdateNewBusinessCallbackQuery:
		return UnmarshalUpdateNewBusinessCallbackQuery(data)

	case ConstructorUpdateNewShippingQuery:
		return UnmarshalUpdateNewShippingQuery(data)

	case ConstructorUpdateNewPreCheckoutQuery:
		return UnmarshalUpdateNewPreCheckoutQuery(data)

	case ConstructorUpdateNewCustomEvent:
		return UnmarshalUpdateNewCustomEvent(data)

	case ConstructorUpdateNewCustomQuery:
		return UnmarshalUpdateNewCustomQuery(data)

	case ConstructorUpdatePoll:
		return UnmarshalUpdatePoll(data)

	case ConstructorUpdatePollAnswer:
		return UnmarshalUpdatePollAnswer(data)

	case ConstructorUpdateChatMember:
		return UnmarshalUpdateChatMember(data)

	case ConstructorUpdateNewChatJoinRequest:
		return UnmarshalUpdateNewChatJoinRequest(data)

	case ConstructorUpdateChatBoost:
		return UnmarshalUpdateChatBoost(data)

	case ConstructorUpdateMessageReaction:
		return UnmarshalUpdateMessageReaction(data)

	case ConstructorUpdateMessageReactions:
		return UnmarshalUpdateMessageReactions(data)

	case ConstructorUpdatePaidMediaPurchased:
		return UnmarshalUpdatePaidMediaPurchased(data)

	case ConstructorUpdates:
		return UnmarshalUpdates(data)

	case ConstructorLogStreamDefault:
		return UnmarshalLogStreamDefault(data)

	case ConstructorLogStreamFile:
		return UnmarshalLogStreamFile(data)

	case ConstructorLogStreamEmpty:
		return UnmarshalLogStreamEmpty(data)

	case ConstructorLogVerbosityLevel:
		return UnmarshalLogVerbosityLevel(data)

	case ConstructorLogTags:
		return UnmarshalLogTags(data)

	case ConstructorUserSupportInfo:
		return UnmarshalUserSupportInfo(data)

	case ConstructorTestInt:
		return UnmarshalTestInt(data)

	case ConstructorTestString:
		return UnmarshalTestString(data)

	case ConstructorTestBytes:
		return UnmarshalTestBytes(data)

	case ConstructorTestVectorInt:
		return UnmarshalTestVectorInt(data)

	case ConstructorTestVectorIntObject:
		return UnmarshalTestVectorIntObject(data)

	case ConstructorTestVectorString:
		return UnmarshalTestVectorString(data)

	case ConstructorTestVectorStringObject:
		return UnmarshalTestVectorStringObject(data)

	default:
		return nil, fmt.Errorf("Error unmarshaling. Unknown type: " + meta.MetaType)
	}
}
